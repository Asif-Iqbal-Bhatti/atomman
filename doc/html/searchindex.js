Search.setIndex({"docnames": ["atomman", "atomman.Atoms", "atomman.Box", "atomman.ElasticConstants", "atomman.NeighborList", "atomman.System", "atomman.cluster", "atomman.cluster.BondAngleMap", "atomman.defect", "atomman.defect.DifferentialDisplacement", "atomman.defect.Dislocation", "atomman.defect.FreeSurface", "atomman.defect.GammaSurface", "atomman.defect.IsotropicVolterraDislocation", "atomman.defect.SDVPN", "atomman.defect.StackingFault", "atomman.defect.Strain", "atomman.defect.Stroh", "atomman.defect.VolterraDislocation", "atomman.lammps", "atomman.lammps.LammpsError", "atomman.lammps.Log", "atomman.lammps.NEBLog", "atomman.library", "atomman.library.Database", "atomman.library.record.CrystalPrototype", "atomman.library.record.ReferenceCrystal", "atomman.library.record.RelaxedCrystal", "atomman.mep", "atomman.mep.BasePath", "atomman.mep.ISMPath", "atomman.plot", "atomman.region", "atomman.tools", "atomman.unitconvert", "index", "tutorial/0._Unit_conversions", "tutorial/1.1._Box_class", "tutorial/1.2._Atoms_class", "tutorial/1.3._System_class", "tutorial/1.4.1._system_model_conversions", "tutorial/1.4.10._prototype_loading", "tutorial/1.4.11._crystal_loading", "tutorial/1.4.12._DFT_reference_crystal_loading", "tutorial/1.4.13._primitive_cell_dumping", "tutorial/1.4.14._Conventional_and_primitive_cell_conversion_dumping", "tutorial/1.4.15._pdb_dumping", "tutorial/1.4.2._POSCAR_conversions", "tutorial/1.4.3._CIF_conversions", "tutorial/1.4.4._table_conversions", "tutorial/1.4.5._LAMMPS_data_file_conversions", "tutorial/1.4.6._LAMMPS_dump_file_conversions", "tutorial/1.4.7._ase_and_phonopy_conversions", "tutorial/1.4.8._pymatgen_conversions", "tutorial/1.4.9._spglib_conversions", "tutorial/1.4._Load_and_dump_conversions", "tutorial/1.5._Settings_and_databases", "tutorial/1._Defining_atomic_systems", "tutorial/2.1._Potential_class", "tutorial/2.2._Running_LAMMPS_and_the_Log_class", "tutorial/2._LAMMPS_functionality", "tutorial/3.1._ElasticConstants_class", "tutorial/3.2._NeighborList_class", "tutorial/3.3._Region_selectors", "tutorial/3.4._Minimum_energy_paths", "tutorial/3.5._Cluster_generators", "tutorial/3._Basic_support_and_analysis_tools", "tutorial/4.1._Point_defect_generation", "tutorial/4.2._Free_surface_generator", "tutorial/4.3._Stacking_fault_generator", "tutorial/4.4._Volterra_dislocation_solutions", "tutorial/4.5._Gamma_surface_plotting", "tutorial/4.6._Dislocation_analysis_tools", "tutorial/4.7._Semidiscrete_variational_Peierls-Nabarro_model", "tutorial/4.8._Strain_class", "tutorial/4.9._Dislocation_configurations_generator", "tutorial/4._Defect_creation_and_analysis", "tutorial/index"], "filenames": ["atomman.rst", "atomman.Atoms.rst", "atomman.Box.rst", "atomman.ElasticConstants.rst", "atomman.NeighborList.rst", "atomman.System.rst", "atomman.cluster.rst", "atomman.cluster.BondAngleMap.rst", "atomman.defect.rst", "atomman.defect.DifferentialDisplacement.rst", "atomman.defect.Dislocation.rst", "atomman.defect.FreeSurface.rst", "atomman.defect.GammaSurface.rst", "atomman.defect.IsotropicVolterraDislocation.rst", "atomman.defect.SDVPN.rst", "atomman.defect.StackingFault.rst", "atomman.defect.Strain.rst", "atomman.defect.Stroh.rst", "atomman.defect.VolterraDislocation.rst", "atomman.lammps.rst", "atomman.lammps.LammpsError.rst", "atomman.lammps.Log.rst", "atomman.lammps.NEBLog.rst", "atomman.library.rst", "atomman.library.Database.rst", "atomman.library.record.CrystalPrototype.rst", "atomman.library.record.ReferenceCrystal.rst", "atomman.library.record.RelaxedCrystal.rst", "atomman.mep.rst", "atomman.mep.BasePath.rst", "atomman.mep.ISMPath.rst", "atomman.plot.rst", "atomman.region.rst", "atomman.tools.rst", "atomman.unitconvert.rst", "index.rst", "tutorial\\0._Unit_conversions.ipynb", "tutorial\\1.1._Box_class.ipynb", "tutorial\\1.2._Atoms_class.ipynb", "tutorial\\1.3._System_class.ipynb", "tutorial\\1.4.1._system_model_conversions.ipynb", "tutorial\\1.4.10._prototype_loading.ipynb", "tutorial\\1.4.11._crystal_loading.ipynb", "tutorial\\1.4.12._DFT_reference_crystal_loading.ipynb", "tutorial\\1.4.13._primitive_cell_dumping.ipynb", "tutorial\\1.4.14._Conventional_and_primitive_cell_conversion_dumping.ipynb", "tutorial\\1.4.15._pdb_dumping.ipynb", "tutorial\\1.4.2._POSCAR_conversions.ipynb", "tutorial\\1.4.3._CIF_conversions.ipynb", "tutorial\\1.4.4._table_conversions.ipynb", "tutorial\\1.4.5._LAMMPS_data_file_conversions.ipynb", "tutorial\\1.4.6._LAMMPS_dump_file_conversions.ipynb", "tutorial\\1.4.7._ase_and_phonopy_conversions.ipynb", "tutorial\\1.4.8._pymatgen_conversions.ipynb", "tutorial\\1.4.9._spglib_conversions.ipynb", "tutorial\\1.4._Load_and_dump_conversions.ipynb", "tutorial\\1.5._Settings_and_databases.ipynb", "tutorial\\1._Defining_atomic_systems.ipynb", "tutorial\\2.1._Potential_class.ipynb", "tutorial\\2.2._Running_LAMMPS_and_the_Log_class.ipynb", "tutorial\\2._LAMMPS_functionality.ipynb", "tutorial\\3.1._ElasticConstants_class.ipynb", "tutorial\\3.2._NeighborList_class.ipynb", "tutorial\\3.3._Region_selectors.ipynb", "tutorial\\3.4._Minimum_energy_paths.ipynb", "tutorial\\3.5._Cluster_generators.ipynb", "tutorial\\3._Basic_support_and_analysis_tools.ipynb", "tutorial\\4.1._Point_defect_generation.ipynb", "tutorial\\4.2._Free_surface_generator.ipynb", "tutorial\\4.3._Stacking_fault_generator.ipynb", "tutorial\\4.4._Volterra_dislocation_solutions.ipynb", "tutorial\\4.5._Gamma_surface_plotting.ipynb", "tutorial\\4.6._Dislocation_analysis_tools.ipynb", "tutorial\\4.7._Semidiscrete_variational_Peierls-Nabarro_model.ipynb", "tutorial\\4.8._Strain_class.ipynb", "tutorial\\4.9._Dislocation_configurations_generator.ipynb", "tutorial\\4._Defect_creation_and_analysis.ipynb", "tutorial\\index.rst"], "titles": ["atomman package", "Atoms", "Box", "ElasticConstants", "NeighborList", "System", "cluster", "BondAngleMap", "defect", "DifferentialDisplacement", "Dislocation", "FreeSurface", "GammaSurface", "IsotropicVolterraDislocation", "SDVPN", "StackingFault", "Strain", "Stroh", "VolterraDislocation", "lammps", "LammpsError", "Log", "NEBLog", "library", "Database", "CrystalPrototype", "ReferenceCrystal", "RelaxedCrystal", "mep", "BasePath", "ISMPath", "plot", "region", "tools", "unitconvert", "atomman: Atomistic Manipulation Toolkit", "Introduction to atomman: Unit conversions", "Introduction to atomman: Box class", "Introduction to atomman: Atoms class", "Introduction to atomman: System class", "Introduction to atomman: system_model conversions", "Introduction to atomman: prototype loading", "Introduction to atomman: crystal loading", "Introduction to atomman: DFT reference crystal loading", "Introduction to atomman: Primitive cell dumping", "Introduction to atomman: conventional-primitive cell dumping", "Introduction to atomman: pdb file dumping", "Introduction to atomman: POSCAR conversions", "Introduction to atomman: CIF conversions", "Introduction to atomman: table conversions", "Introduction to atomman: LAMMPS data file conversions", "Introduction to atomman: LAMMPS dump file conversions", "Introduction to atomman: ase and phonopy conversions", "Introduction to atomman: pymatgen conversions", "Introduction to atomman: Load and dump", "Introduction to atomman: Load and dump conversions", "Introduction to atomman: Settings and Library", "Introduction to atomman: Defining atomic systems", "Introduction to atomman: LAMMPS Potentials", "Introduction to atomman: Running LAMMPS and the Log class", "Introduction to atomman: LAMMPS functionality", "Introduction to atomman: ElasticConstants class", "Introduction to atomman: NeighborList class", "Introduction to atomman: Region selectors", "Introduction to atomman: Minimum energy paths", "Introduction to atomman: Cluster generators", "Introduction to atomman: Basic support and analysis tools", "Introduction to atomman: Point defect generation", "Introduction to atomman: Free surface generator", "Introduction to atomman: Stacking fault generator", "Introduction to atomman: Volterra dislocation solutions", "Introduction to atomman: Gamma surface plotting", "Introduction to atomman: Dislocation analysis tools", "Introduction to atomman: Semidiscrete variational Peierls-Nabarro model", "Introduction to atomman: Strain class", "Introduction to atomman: Dislocation solution and generator", "Introduction to atomman: Defect creation and analysis", "Tutorials"], "terms": {"unitconvert": [0, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 57, 58, 59, 60, 61, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76], "tool": [0, 10, 31, 35, 36, 45, 46, 50, 52, 56, 58, 64, 65, 67, 68, 69, 74, 75, 76, 77], "region": [0, 2, 8, 10, 11, 15, 31, 35, 37, 59, 68, 69, 70, 72, 74, 75, 77], "cluster": [0, 7, 35, 77], "mep": [0, 12, 29, 30, 35, 64, 71], "lammp": [0, 2, 5, 20, 21, 22, 24, 35, 39, 42, 44, 55, 56, 57, 68, 71, 75, 77], "librari": [0, 10, 11, 15, 24, 25, 26, 27, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 57, 59, 60, 61, 62, 63, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76], "defect": [0, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 24, 35, 68, 69, 70, 71, 72, 73, 74, 75, 77], "plot": [0, 7, 8, 9, 12, 14, 29, 35, 46, 57, 59, 60, 63, 64, 65, 67, 69, 70, 73, 75, 76, 77], "atom": [0, 4, 5, 7, 8, 9, 10, 11, 13, 15, 16, 17, 18, 19, 24, 31, 33, 35, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 59, 61, 63, 65, 67, 68, 69, 70, 71, 73, 74, 76, 77], "box": [0, 5, 8, 10, 11, 12, 13, 15, 17, 18, 19, 24, 33, 35, 39, 40, 42, 45, 46, 47, 49, 50, 51, 52, 53, 54, 56, 58, 59, 60, 62, 65, 66, 67, 68, 69, 70, 71, 73, 76, 77], "system": [0, 1, 2, 3, 4, 7, 8, 9, 10, 11, 14, 15, 16, 18, 19, 24, 31, 33, 35, 37, 38, 41, 42, 43, 45, 48, 56, 62, 63, 64, 65, 67, 70, 71, 73, 76, 77], "elasticconst": [0, 8, 10, 13, 17, 18, 35, 66, 70, 73, 75, 77], "neighborlist": [0, 5, 8, 9, 16, 35, 72, 74, 75, 77], "build_lammps_potenti": [0, 35, 58], "pair_styl": [0, 50, 59, 60], "str": [0, 1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 24, 28, 29, 30, 31, 32, 33, 34, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76], "kwarg": [0, 1, 2, 3, 4, 5, 7, 8, 10, 11, 12, 14, 15, 20, 28, 29, 34, 38, 55, 57, 64, 65, 67, 71], "wrapper": [0, 8, 58], "potentiallammpsbuild": 0, "subclass": [0, 12, 28, 56, 58, 63, 64], "paramet": [0, 1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 24, 28, 29, 30, 31, 32, 33, 34, 36, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77], "The": [0, 1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 24, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 76], "set": [0, 1, 2, 3, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 24, 28, 31, 32, 33, 35, 39, 40, 41, 42, 43, 45, 46, 47, 49, 50, 51, 52, 53, 55, 57, 59, 60, 64, 65, 66, 67, 68, 69, 70, 72, 73, 75, 77], "associ": [0, 1, 2, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 24, 28, 29, 31, 34, 36, 37, 38, 39, 40, 41, 42, 45, 47, 50, 51, 54, 55, 56, 58, 59, 60, 61, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76], "potenti": [0, 7, 19, 22, 24, 35, 41, 42, 43, 55, 56, 57, 65, 71, 73, 75, 77], "ani": [0, 1, 2, 3, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 24, 28, 29, 30, 31, 32, 33, 34, 37, 38, 39, 40, 44, 47, 50, 52, 54, 55, 56, 57, 58, 59, 60, 61, 63, 65, 67, 68, 69, 71, 73, 74, 75, 76], "keyword": [0, 5, 8, 10, 11, 12, 14, 15, 28, 29, 38, 41, 55, 57, 64, 67, 71, 72, 75], "support": [0, 10, 11, 15, 35, 37, 40, 47, 48, 50, 51, 56, 58, 65, 68, 69, 75, 77], "match": [0, 1, 2, 3, 8, 10, 11, 15, 16, 19, 24, 31, 33, 40, 41, 42, 43, 50, 56, 58, 60, 61, 66, 69, 70, 72, 73, 74, 75], "displac": [0, 8, 9, 10, 12, 13, 15, 17, 18, 29, 30, 31, 35, 64, 67, 69, 70, 71, 73, 76, 77], "system_0": [0, 8, 9, 66, 72], "system_1": [0, 8, 9, 66, 72], "box_refer": [0, 66], "final": [0, 8, 10, 11, 15, 22, 28, 59, 60, 64, 66, 68, 69, 73, 74, 75], "ndarrai": [0, 1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 22, 24, 28, 29, 30, 31, 32, 33, 34, 38, 39, 45, 63, 64, 65, 66, 71, 72, 73], "comput": [0, 5, 7, 8, 9, 10, 13, 14, 16, 17, 18, 28, 29, 35, 39, 51, 55, 59, 62, 64, 65, 66, 69, 71, 72, 73, 74, 75, 76], "vector": [0, 2, 3, 5, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 29, 30, 31, 32, 33, 38, 39, 47, 49, 51, 54, 57, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 73, 74, 76, 77], "between": [0, 2, 5, 7, 8, 9, 10, 11, 12, 15, 16, 31, 33, 37, 39, 43, 45, 49, 51, 52, 53, 54, 55, 62, 64, 65, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77], "all": [0, 1, 2, 3, 5, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 21, 24, 29, 31, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 46, 48, 49, 50, 51, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76], "two": [0, 3, 5, 8, 9, 10, 11, 12, 14, 15, 32, 33, 36, 37, 38, 39, 40, 45, 52, 55, 57, 59, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76], "initi": [0, 2, 4, 5, 7, 8, 9, 10, 11, 14, 15, 16, 19, 24, 28, 40, 41, 42, 43, 50, 55, 56, 57, 58, 61, 66, 70, 71, 77], "calcul": [0, 4, 8, 9, 11, 15, 22, 24, 28, 35, 36, 39, 42, 52, 56, 58, 60, 61, 62, 64, 65, 66, 68, 69, 70, 71, 72, 73, 75, 76, 77], "from": [0, 2, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 24, 25, 26, 27, 29, 30, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77], "none": [0, 1, 2, 3, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 24, 28, 29, 30, 31, 33, 34, 37, 38, 39, 40, 41, 42, 44, 45, 49, 50, 51, 56, 58, 59, 61, 64, 66, 69, 70, 71, 72, 73, 74], "specifi": [0, 1, 3, 4, 5, 8, 9, 12, 15, 18, 19, 21, 29, 31, 32, 33, 34, 36, 38, 39, 45, 49, 50, 57, 58, 59, 60, 61, 62, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76], "which": [0, 3, 5, 7, 8, 9, 10, 11, 13, 14, 15, 17, 18, 19, 21, 22, 24, 29, 31, 35, 36, 39, 40, 41, 42, 43, 44, 45, 49, 50, 51, 52, 56, 57, 58, 59, 60, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76], "": [0, 1, 2, 3, 5, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 24, 28, 29, 30, 31, 32, 34, 36, 37, 38, 39, 40, 41, 42, 43, 46, 47, 49, 50, 51, 52, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76], "boundari": [0, 2, 5, 8, 10, 32, 39, 40, 44, 45, 50, 57, 58, 59, 60, 62, 63, 65, 66, 68, 69, 74], "condit": [0, 5, 8, 10, 37, 39, 40, 57, 59, 60, 65, 66, 68], "us": [0, 1, 2, 3, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 24, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 74, 76, 77], "pbc": [0, 5, 8, 10, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 60, 66, 68, 69, 72, 75], "default": [0, 1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 21, 22, 24, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 49, 50, 51, 52, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76], "straight": [0, 8, 10, 13, 17, 18, 66, 70, 74, 75, 76], "differ": [0, 8, 10, 11, 14, 15, 16, 24, 28, 32, 36, 37, 38, 39, 40, 41, 44, 46, 47, 48, 52, 53, 55, 56, 57, 58, 59, 60, 62, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76], "posit": [0, 2, 4, 5, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 31, 32, 37, 38, 39, 45, 46, 47, 51, 54, 57, 62, 63, 65, 66, 67, 68, 70, 71, 72, 73, 74, 76], "without": [0, 1, 5, 36, 39, 49, 50, 56, 57, 58, 59, 64, 66, 67, 68, 69, 71, 75], "account": [0, 5, 39, 66, 69, 70, 73, 75], "period": [0, 5, 8, 9, 10, 11, 15, 39, 40, 50, 53, 57, 62, 65, 66, 68, 69, 71, 72, 73, 74, 77], "return": [0, 1, 2, 3, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 24, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76], "type": [0, 1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 24, 28, 29, 30, 32, 33, 34, 38, 39, 40, 41, 42, 43, 44, 46, 47, 49, 50, 51, 52, 53, 54, 56, 57, 59, 60, 67, 70, 75, 76], "numpi": [0, 1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 22, 24, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76], "rais": [0, 1, 2, 7, 8, 14, 19, 24, 28, 33, 34, 50, 58, 59, 65, 67], "valueerror": [0, 1, 2, 7, 8, 14, 19, 24, 28, 33, 34, 50, 58, 65, 67], "If": [0, 1, 2, 3, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 24, 28, 29, 30, 31, 33, 34, 36, 38, 39, 40, 41, 42, 43, 45, 46, 47, 49, 50, 51, 52, 53, 56, 57, 58, 59, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75], "have": [0, 1, 2, 5, 8, 9, 10, 14, 16, 19, 31, 37, 38, 39, 42, 47, 48, 49, 50, 51, 55, 56, 58, 60, 61, 63, 64, 66, 68, 69, 72, 73, 74, 75], "number": [0, 1, 4, 5, 7, 8, 9, 11, 12, 14, 15, 22, 24, 28, 29, 30, 31, 33, 34, 35, 37, 38, 39, 41, 42, 47, 49, 50, 51, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 68, 69, 71, 72, 73, 74, 75, 76], "invalid": [0, 8, 28, 33, 36, 58, 67], "valu": [0, 1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 24, 28, 29, 30, 31, 32, 33, 34, 37, 39, 40, 41, 42, 43, 44, 45, 47, 49, 50, 51, 52, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 77], "dmag": [0, 5, 35, 62], "pos_0": [0, 5, 39, 66], "pos_1": [0, 5, 39, 66], "shortest": [0, 5, 8, 39, 62, 66, 68, 69, 75], "distanc": [0, 4, 5, 7, 8, 9, 10, 12, 14, 16, 39, 62, 63, 64, 65, 69, 71, 72, 73, 74, 75, 77], "dimens": [0, 2, 5, 9, 11, 12, 14, 15, 19, 28, 31, 33, 36, 37, 38, 39, 50, 51, 62, 64, 65, 66, 68, 69, 71, 72, 73, 75], "list": [0, 1, 4, 5, 7, 8, 9, 10, 11, 12, 14, 15, 16, 19, 21, 22, 24, 28, 30, 32, 33, 34, 36, 37, 39, 40, 41, 42, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76], "tupl": [0, 1, 2, 5, 7, 8, 9, 10, 11, 12, 14, 15, 22, 24, 31, 33, 39, 40, 41, 47, 49, 50, 51, 52, 53, 54, 68, 69, 71, 72, 74, 75], "absolut": [0, 2, 3, 5, 8, 9, 10, 11, 15, 32, 33, 37, 39, 44, 45, 51, 61, 66, 67, 68, 69, 72, 75, 76], "cartesian": [0, 2, 5, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 31, 33, 37, 39, 45, 47, 51, 57, 61, 66, 67, 68, 69, 70, 71, 74, 75], "refer": [0, 5, 8, 9, 10, 11, 15, 16, 24, 35, 38, 39, 41, 45, 47, 50, 55, 58, 60, 61, 66, 69, 72, 73, 75, 76, 77], "point": [0, 2, 5, 8, 9, 12, 13, 14, 17, 18, 28, 29, 30, 31, 32, 35, 37, 38, 39, 45, 47, 49, 50, 51, 52, 63, 64, 66, 69, 70, 71, 72, 73, 74, 75, 77], "find": [0, 4, 5, 8, 11, 39, 40, 45, 56, 58, 62, 64, 66, 68, 72, 74, 75], "rel": [0, 2, 3, 5, 8, 10, 11, 12, 15, 22, 32, 33, 36, 37, 39, 45, 47, 51, 54, 55, 57, 61, 64, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77], "defin": [0, 1, 2, 5, 8, 10, 12, 13, 16, 17, 18, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 47, 49, 50, 52, 55, 58, 59, 60, 61, 62, 63, 64, 66, 67, 70, 72, 73, 74, 76, 77], "bool": [0, 1, 2, 3, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 21, 22, 24, 28, 29, 30, 31, 32, 33, 34, 37, 39, 41, 42, 43, 45, 46, 49, 50, 51, 52, 57, 58, 59, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76], "three": [0, 2, 3, 7, 8, 10, 11, 12, 15, 28, 37, 38, 39, 40, 50, 53, 57, 61, 65, 66, 68, 69, 70, 72, 73, 75], "boolean": [0, 33, 39, 40, 50, 58, 69], "indic": [0, 1, 2, 3, 5, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 21, 22, 24, 30, 31, 32, 33, 37, 39, 41, 42, 43, 44, 45, 49, 50, 51, 52, 55, 57, 58, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76], "ar": [0, 1, 2, 3, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 24, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 47, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76], "true": [0, 2, 3, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 21, 22, 24, 30, 31, 32, 33, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76], "mean": [0, 8, 10, 11, 13, 15, 17, 18, 19, 33, 36, 38, 43, 44, 45, 49, 50, 56, 58, 59, 62, 64, 65, 66, 68, 69, 70, 72, 74, 75, 76], "magnitud": [0, 2, 5, 8, 9, 10, 31, 37, 39, 66, 72, 74, 75], "each": [0, 1, 4, 5, 7, 8, 9, 10, 13, 14, 16, 21, 22, 24, 28, 29, 30, 33, 35, 36, 37, 38, 39, 40, 41, 42, 46, 47, 49, 50, 51, 55, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 70, 71, 72, 73, 74, 75, 76], "dump": [0, 4, 5, 35, 57, 72, 74, 77], "style": [0, 3, 5, 8, 10, 11, 12, 14, 15, 19, 21, 24, 28, 37, 39, 40, 41, 42, 43, 45, 46, 47, 49, 50, 51, 52, 54, 56, 57, 59, 60, 61, 67, 71, 73, 76, 77], "convert": [0, 1, 2, 3, 5, 8, 10, 12, 13, 17, 18, 29, 31, 33, 34, 35, 36, 37, 38, 39, 40, 45, 49, 50, 52, 54, 55, 57, 66, 68, 70, 71, 75, 77], "anoth": [0, 5, 38, 44, 55, 60, 64, 70, 73, 74, 75], "format": [0, 2, 3, 5, 8, 24, 35, 39, 46, 47, 48, 49, 50, 51, 55, 57, 58, 60, 61, 66, 68, 69], "content": [0, 4, 5, 7, 10, 11, 12, 14, 15, 19, 21, 33, 39, 40, 46, 47, 48, 49, 50, 51, 52, 53, 55, 57, 58, 59, 62, 65, 66, 71, 73, 74], "option": [0, 1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 24, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77], "extra": [0, 4, 5, 8, 10, 28, 36, 38, 39, 41, 47, 49, 52, 55, 57, 62, 66, 75], "argument": [0, 5, 7, 8, 10, 11, 12, 14, 15, 28, 29, 33, 36, 38, 41, 55, 57, 64, 65, 66, 67], "pass": [0, 5, 7, 9, 12, 14, 20, 28, 29, 33, 34, 37, 38, 39, 40, 41, 42, 43, 47, 49, 50, 59, 61, 64, 65, 66, 71, 72, 73], "underli": [0, 1, 4, 5, 12, 14, 37, 38, 39, 55, 58, 62, 66, 75, 76, 77], "method": [0, 2, 5, 8, 9, 10, 12, 14, 17, 24, 28, 30, 31, 38, 39, 40, 41, 42, 44, 45, 50, 52, 54, 55, 56, 58, 59, 60, 61, 62, 63, 66, 68, 69, 72, 73, 74, 76, 77], "object": [0, 1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 24, 28, 29, 30, 31, 32, 33, 34, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 74, 75, 76, 77], "dvect": [0, 5, 35, 62], "load": [0, 4, 5, 7, 10, 11, 14, 15, 22, 35, 39, 44, 45, 56, 65, 66, 67, 75, 77], "arg": [0, 20, 29, 58, 59, 64], "an": [0, 1, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 24, 28, 29, 30, 31, 33, 35, 37, 38, 39, 40, 41, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 70, 71, 72, 74, 76], "depend": [0, 5, 8, 10, 13, 14, 16, 17, 18, 32, 40, 41, 50, 58, 60, 61, 68, 70, 73, 74, 75], "data": [0, 1, 2, 3, 5, 7, 8, 12, 14, 19, 21, 22, 33, 34, 35, 37, 38, 39, 40, 46, 47, 48, 49, 51, 54, 55, 61, 62, 73, 76, 77], "model": [0, 1, 2, 3, 4, 5, 7, 10, 11, 12, 14, 15, 19, 24, 33, 34, 35, 42, 46, 47, 50, 52, 53, 55, 57, 60, 62, 66, 70, 76, 77], "nlist": [0, 4, 35, 62], "cutoff": [0, 4, 5, 8, 9, 10, 14, 16, 39, 58, 62, 66, 72, 73, 75], "initials": [0, 4, 5, 39, 62, 66], "20": [0, 4, 5, 36, 37, 38, 39, 56, 57, 58, 60, 61, 62, 63, 66, 68, 69, 72, 73, 75], "deltas": [0, 4, 5, 62, 66], "10": [0, 4, 5, 8, 9, 10, 12, 14, 28, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77], "neighbor": [0, 4, 5, 8, 9, 10, 11, 14, 15, 16, 39, 64, 66, 72, 73, 75, 76, 77], "take": [0, 8, 14, 19, 31, 33, 36, 52, 54, 57, 58, 60, 65, 66, 68, 69, 70, 71, 75], "float": [0, 1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 22, 28, 29, 30, 31, 32, 33, 34, 39, 41, 44, 45, 47, 49, 50, 51, 58, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76], "radial": [0, 4, 5, 7, 8, 16, 39, 62, 63, 64, 65, 66, 70, 71, 74, 75], "identifi": [0, 3, 4, 5, 8, 9, 10, 11, 13, 15, 17, 18, 24, 31, 32, 33, 37, 39, 40, 41, 44, 45, 55, 56, 60, 61, 63, 64, 66, 67, 70, 71, 72, 73, 74, 75, 77], "int": [0, 1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 21, 22, 24, 28, 29, 30, 31, 32, 33, 34, 38, 39, 40, 41, 42, 49, 50, 56, 59, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76], "assign": [0, 1, 4, 5, 7, 8, 9, 10, 24, 36, 39, 40, 41, 42, 47, 49, 50, 51, 52, 53, 56, 57, 58, 62, 65, 66, 72, 75], "i": [0, 1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 24, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76], "allow": [0, 1, 2, 4, 5, 8, 9, 10, 11, 12, 14, 15, 16, 19, 24, 29, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 45, 47, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76], "when": [0, 3, 4, 5, 7, 8, 9, 10, 11, 12, 15, 16, 19, 24, 28, 29, 36, 38, 40, 41, 42, 45, 49, 57, 58, 60, 61, 62, 64, 65, 66, 69, 71, 73, 74, 75], "exce": [0, 4, 5, 62, 66], "arrai": [0, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 28, 29, 30, 31, 32, 33, 34, 36, 37, 39, 40, 45, 51, 52, 54, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77], "size": [0, 4, 5, 8, 9, 10, 12, 14, 28, 30, 31, 34, 38, 39, 62, 64, 66, 68, 69, 70, 71, 72, 73, 74, 75], "id": [0, 4, 8, 10, 11, 15, 16, 19, 24, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 60, 62, 66, 67, 68, 69, 75, 76], "first": [0, 3, 8, 10, 16, 19, 21, 22, 24, 33, 37, 38, 40, 56, 58, 59, 60, 61, 62, 66, 69, 70, 72, 74, 75], "term": [0, 2, 3, 14, 33, 34, 37, 39, 50, 56, 58, 59, 61, 64, 66, 70, 72, 73], "row": [0, 33, 49, 56, 58, 60, 66, 71, 73, 75], "coordin": [0, 2, 4, 5, 7, 8, 9, 10, 12, 14, 15, 17, 22, 28, 29, 30, 31, 32, 37, 39, 47, 52, 56, 62, 63, 64, 65, 66, 69, 70, 71, 72, 73, 74, 75], "c": [0, 2, 8, 10, 11, 13, 15, 17, 18, 33, 35, 36, 37, 39, 40, 41, 43, 45, 46, 47, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 61, 62, 63, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76], "next": [0, 14, 39, 58, 62, 65, 66, 69], "class": [1, 2, 3, 4, 5, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 24, 29, 30, 32, 35, 40, 50, 52, 55, 56, 57, 63, 65, 66, 70, 72, 73, 75, 77], "atomman": [1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 77], "natom": [1, 5, 24, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 60, 62, 63, 66, 67, 68, 69, 75], "atyp": [1, 5, 8, 9, 10, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 60, 62, 63, 66, 67, 68, 69, 72, 75, 76], "_supportsarrai": [1, 2, 3, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 28, 29, 30, 31, 32, 33, 34], "dtype": [1, 2, 3, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 28, 29, 30, 31, 32, 33, 34, 49, 51, 59, 74], "_nestedsequ": [1, 2, 3, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 28, 29, 30, 31, 32, 33, 34], "complex": [1, 2, 3, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 28, 29, 30, 31, 32, 33, 34, 36, 45, 64, 70, 73, 74, 76], "byte": [1, 2, 3, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 28, 29, 30, 31, 32, 33, 34], "po": [1, 2, 5, 8, 10, 12, 13, 17, 18, 32, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 60, 62, 63, 66, 67, 68, 69, 71, 72, 75, 76], "prop": [1, 5, 31, 39, 40, 47, 52, 57, 77], "dict": [1, 5, 8, 12, 14, 16, 19, 21, 24, 28, 29, 30, 33, 34, 38, 39, 40, 47, 49, 51, 52, 58, 60, 61, 64, 66, 71, 72, 73, 75], "iobas": [1, 2, 3, 4, 5, 7, 10, 11, 12, 14, 15, 19, 21, 33], "datamodeldict": [1, 2, 3, 5, 7, 10, 11, 12, 14, 15, 34, 36, 38, 39, 40, 58, 61, 65, 71, 73], "safecopi": [1, 5, 39, 50], "fals": [1, 2, 3, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 21, 22, 24, 31, 32, 33, 36, 37, 39, 41, 42, 43, 45, 49, 50, 51, 52, 57, 58, 59, 61, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76], "base": [1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 24, 28, 29, 30, 31, 32, 33, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 55, 56, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76], "repres": [1, 2, 5, 9, 12, 13, 21, 29, 30, 32, 35, 36, 37, 39, 40, 47, 48, 49, 50, 52, 55, 57, 58, 59, 60, 61, 66, 69, 70, 71, 72, 73, 74, 75], "collect": [1, 38, 40, 52, 57, 58, 64, 65], "propertydict": 1, "host": [1, 57, 58], "ordereddict": [1, 60], "extend": [1, 5, 14, 24, 34, 36, 39, 50, 56, 63, 73, 77], "work": [1, 5, 19, 22, 24, 29, 34, 35, 38, 39, 40, 50, 55, 56, 58, 59, 60, 64, 66, 68, 70, 73, 75], "properti": [1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 21, 22, 29, 30, 31, 32, 35, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 60, 62, 63, 66, 67, 68, 69, 72, 73, 75, 76, 77], "df": [1, 5, 7, 38, 39, 57, 66], "datafram": [1, 5, 7, 12, 22, 24, 33, 38, 57, 59, 60, 65, 66, 71], "panda": [1, 5, 7, 12, 22, 24, 33, 35, 38, 49, 57, 59, 60, 65, 66, 71], "multi": [1, 58], "dimension": 1, "per": [1, 5, 8, 12, 14, 16, 29, 30, 31, 35, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 60, 63, 64, 66, 67, 68, 69, 70, 71, 74, 75, 76, 77], "multipl": [1, 5, 10, 11, 15, 19, 21, 24, 29, 30, 34, 40, 41, 42, 43, 58, 60, 64, 68, 70, 72, 73, 75], "tabl": [1, 5, 7, 24, 38, 39, 40, 50, 51, 55, 58, 65, 77], "column": [1, 8, 33, 49, 51, 56, 58, 60, 62, 66, 71, 72, 73, 75], "addit": [1, 5, 7, 8, 10, 12, 14, 29, 36, 37, 38, 43, 47, 55, 56, 59, 64, 65, 69, 71, 73, 74, 75, 77], "ad": [1, 2, 5, 8, 9, 10, 11, 14, 15, 24, 31, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 49, 50, 51, 57, 58, 59, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76], "end": [1, 8, 12, 32, 36, 38, 39, 59, 60, 63, 64, 67, 76], "result": [1, 5, 8, 10, 11, 14, 15, 16, 19, 34, 35, 36, 38, 39, 40, 49, 56, 65, 68, 69, 70, 74, 75, 77], "being": [1, 5, 8, 10, 16, 21, 24, 31, 37, 38, 39, 42, 55, 56, 57, 60, 65, 67, 68, 73, 74, 75, 76], "1": [1, 2, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 30, 31, 33, 34, 35, 77], "everyth": [1, 5, 38, 39, 54, 70], "els": [1, 5, 38, 39, 48, 54, 58], "0": [1, 2, 3, 5, 7, 8, 9, 10, 11, 12, 14, 15, 19, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77], "For": [1, 5, 8, 9, 10, 24, 33, 35, 36, 37, 38, 39, 40, 42, 45, 49, 51, 54, 55, 56, 57, 58, 60, 61, 62, 64, 65, 68, 69, 70, 71, 72, 73, 74, 75], "current": [1, 2, 3, 5, 7, 8, 9, 11, 12, 14, 15, 16, 21, 22, 24, 30, 37, 38, 39, 40, 44, 47, 50, 55, 57, 58, 59, 60, 61, 64, 65, 67, 72, 73, 74, 75], "correct": [1, 5, 14, 36, 38, 39, 57, 73, 74], "copi": [1, 5, 7, 8, 38, 39, 41, 42, 50, 57, 58, 60, 65, 66, 67, 72], "over": [1, 5, 9, 15, 24, 31, 33, 38, 39, 42, 56, 62, 69, 70, 73, 74, 75], "one": [1, 3, 5, 7, 8, 9, 10, 11, 12, 15, 16, 21, 22, 24, 29, 30, 31, 32, 36, 37, 38, 39, 40, 41, 42, 51, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 68, 69, 70, 71, 72, 73, 74, 75], "other": [1, 5, 8, 10, 11, 15, 32, 34, 35, 36, 37, 38, 39, 40, 41, 44, 51, 55, 56, 59, 60, 61, 62, 66, 67, 68, 69, 70, 73, 74, 75, 76], "A": [1, 2, 3, 5, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 21, 24, 28, 29, 30, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 45, 47, 53, 54, 55, 57, 58, 59, 60, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75], "new": [1, 3, 5, 7, 8, 10, 11, 12, 15, 19, 24, 30, 32, 35, 37, 39, 40, 41, 42, 43, 44, 49, 56, 57, 59, 61, 62, 63, 64, 65, 67, 68, 69, 71, 73, 74, 76, 77], "contain": [1, 2, 3, 5, 7, 8, 9, 10, 12, 14, 16, 19, 21, 24, 34, 37, 38, 39, 40, 43, 47, 49, 50, 51, 52, 54, 57, 58, 59, 60, 61, 62, 64, 65, 67, 70, 71, 72, 73, 75, 76], "plu": [1, 5, 31, 38, 39, 51, 56, 72, 75], "prop_nam": [1, 5, 31, 38, 39, 40, 49, 51], "unit": [1, 2, 3, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 24, 29, 31, 32, 33, 34, 35, 37, 38, 39, 41, 42, 43, 44, 45, 49, 50, 51, 55, 56, 57, 58, 59, 61, 63, 64, 65, 66, 70, 71, 72, 73, 74, 77], "prop_unit": [1, 5, 31, 38, 39, 40], "gener": [1, 2, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 24, 28, 29, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 49, 50, 51, 52, 53, 54, 56, 57, 61, 62, 63, 66, 70, 71, 72, 74, 76, 77], "includ": [1, 2, 5, 8, 9, 10, 11, 12, 14, 15, 16, 21, 31, 32, 34, 36, 38, 39, 45, 47, 49, 50, 51, 52, 53, 55, 56, 57, 58, 61, 63, 66, 72, 73, 74, 75], "neither": [1, 5, 10, 11, 15, 38, 39, 40, 50, 51, 75], "nor": [1, 5, 10, 11, 15, 38, 39, 40, 75], "given": [1, 2, 3, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 22, 24, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75], "store": [1, 3, 4, 5, 7, 14, 36, 37, 38, 39, 40, 47, 49, 51, 54, 55, 56, 57, 59, 60, 73], "convers": [1, 3, 5, 8, 12, 29, 31, 33, 35, 38, 39, 45, 54, 57, 60, 61, 68, 69, 74, 77], "perform": [1, 5, 8, 13, 14, 15, 17, 18, 28, 29, 30, 36, 37, 38, 39, 40, 43, 45, 49, 51, 54, 58, 59, 60, 64, 66, 68, 69, 70, 71, 72, 73, 75, 76], "angstrom": [1, 2, 5, 7, 8, 10, 12, 31, 36, 37, 38, 39, 40, 46, 47, 49, 50, 51, 52, 53, 54, 57, 60, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76], "dictionari": [1, 5, 12, 16, 19, 28, 33, 34, 38, 39, 40, 47, 49, 51, 52, 58, 60, 64, 74], "where": [1, 2, 3, 5, 7, 8, 11, 15, 24, 30, 38, 39, 40, 45, 50, 57, 58, 59, 60, 61, 62, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76], "kei": [1, 5, 7, 8, 10, 11, 15, 19, 24, 33, 34, 36, 38, 39, 40, 41, 42, 43, 50, 56, 58, 59, 60, 61, 65, 66, 67, 74, 75], "json": [1, 2, 5, 12, 19, 24, 36, 37, 38, 39, 40, 55, 58, 61, 71, 73], "xml": [1, 2, 5, 12, 19, 24, 36, 37, 38, 39, 40, 55, 58, 61, 71, 73], "natyp": [1, 5, 24, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 60, 66, 67, 68, 69, 75], "index": [1, 5, 8, 10, 11, 15, 21, 31, 33, 35, 39, 40, 51, 59, 62, 68, 69, 73, 74, 75, 76, 77], "slice": [1, 5, 8, 9, 11, 32, 38, 66, 68, 69, 72, 74, 77], "a_id": [1, 5, 38], "access": [1, 36, 37, 39, 40, 41, 42, 43, 53, 55, 56, 58, 60, 62, 75, 77], "control": [1, 12, 14, 19, 29, 36, 37, 58, 69, 71, 72, 73, 74, 75, 77], "get": [1, 8, 19, 24, 40, 41, 60, 66, 72], "alwai": [1, 8, 31, 36, 50, 53, 56, 60, 70, 74, 75], "oppos": [1, 38], "itself": [1, 8, 13, 17, 18, 31, 38, 55, 57, 60, 70, 75], "name": [1, 4, 5, 8, 9, 10, 11, 15, 19, 24, 31, 33, 34, 38, 39, 40, 41, 42, 49, 50, 51, 56, 57, 58, 59, 60, 62, 66, 70, 72, 74, 75], "integ": [1, 2, 5, 8, 9, 10, 11, 15, 33, 37, 38, 39, 50, 57, 58, 59, 66, 67, 68, 69, 73, 75], "left": [1, 3, 5, 8, 24, 38, 51, 58, 61, 63, 67, 70, 71, 72, 73, 75], "backward": [1, 5, 8, 13, 17, 18, 38, 39, 60, 70], "compat": [1, 2, 5, 8, 10, 13, 17, 18, 19, 33, 35, 36, 38, 39, 40, 44, 45, 50, 57, 58, 60, 68, 70, 72, 73, 75], "instanc": [1, 5, 9, 10, 11, 15, 38, 39, 57, 72], "both": [1, 5, 8, 9, 10, 11, 13, 15, 17, 18, 31, 33, 36, 43, 50, 56, 60, 62, 63, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75], "onli": [1, 2, 5, 7, 8, 9, 10, 11, 12, 14, 15, 18, 19, 24, 30, 36, 37, 38, 39, 40, 41, 43, 45, 46, 47, 49, 50, 51, 52, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74], "prop_atyp": [1, 77], "accord": [1, 3, 5, 16, 50, 58, 61, 63, 64, 65, 75], "thi": [1, 5, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 31, 34, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 48, 49, 50, 51, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76], "should": [1, 3, 5, 7, 8, 9, 10, 11, 14, 15, 16, 24, 28, 33, 35, 38, 40, 41, 42, 45, 49, 58, 60, 61, 62, 64, 65, 66, 69, 72, 73, 74, 75], "length": [1, 2, 5, 7, 9, 12, 14, 29, 30, 31, 33, 34, 36, 37, 38, 39, 40, 44, 49, 51, 58, 60, 64, 65, 66, 68, 70, 71, 72, 74, 75], "otherwis": [1, 2, 3, 12, 33, 34, 37, 38, 39, 47, 51, 52, 53, 61, 66, 69, 71, 73, 75], "singl": [1, 5, 8, 9, 10, 16, 24, 29, 30, 31, 33, 38, 40, 49, 51, 56, 63, 64, 65, 66, 69, 70, 72, 73, 74, 75, 76], "specif": [1, 9, 10, 11, 12, 15, 31, 38, 40, 41, 49, 50, 55, 56, 57, 58, 60, 63, 68, 69, 72, 73, 74, 75, 76], "doe": [1, 8, 10, 13, 17, 18, 33, 38, 46, 47, 50, 52, 59, 61, 62, 64, 66, 70, 72, 73, 74, 75], "view": [1, 64, 70, 75], "shape": [2, 8, 10, 14, 28, 32, 33, 34, 36, 37, 38, 39, 40, 49, 51, 61, 66, 67, 72, 75], "represent": [2, 3, 5, 7, 10, 12, 14, 33, 34, 35, 37, 38, 39, 40, 45, 46, 47, 48, 50, 52, 53, 54, 55, 57, 58, 59, 63, 64, 66, 69, 71, 72, 73, 75, 77], "triclin": [2, 3, 33, 37, 50, 61, 66], "parallelepip": [2, 37, 57, 63], "lattic": [2, 10, 11, 12, 15, 16, 33, 39, 41, 45, 48, 52, 54, 56, 57, 59, 60, 68, 69, 71, 72, 75, 76], "avect": [2, 5, 19, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 60, 62, 66, 67, 68, 69, 71, 75], "alpha": [2, 8, 10, 11, 14, 15, 33, 37, 39, 41, 56, 57, 60, 66, 68, 69, 70, 72, 73, 74], "angl": [2, 7, 8, 13, 16, 18, 33, 37, 41, 50, 53, 65, 66, 68, 70, 75], "degre": [2, 7, 8, 16, 18, 33, 37, 61, 66, 70, 73, 74, 75], "bvect": [2, 5, 19, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 60, 62, 66, 67, 68, 69, 71, 75], "cvect": [2, 5, 19, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 60, 62, 66, 67, 68, 69, 71, 75], "b": [2, 8, 9, 10, 11, 15, 33, 37, 39, 40, 41, 45, 46, 47, 49, 51, 52, 53, 54, 56, 57, 58, 62, 66, 67, 68, 69, 70, 72, 73, 75, 76], "beta": [2, 8, 10, 11, 14, 15, 33, 37, 39, 41, 56, 57, 66, 72, 73, 74], "classmethod": [2, 10, 11, 15], "cubic": [2, 3, 8, 13, 17, 18, 30, 33, 37, 41, 45, 56, 57, 61, 62, 63, 64, 66, 68, 69, 70, 71, 74], "standard": [2, 3, 5, 8, 13, 14, 17, 18, 33, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76], "gamma": [2, 8, 10, 11, 12, 14, 15, 33, 35, 37, 39, 41, 57, 66, 69, 74, 76, 77], "90": [2, 8, 33, 37, 39, 46, 48, 53, 57, 60, 62, 66, 70, 73, 75], "constant": [2, 3, 8, 10, 11, 13, 14, 15, 17, 18, 38, 39, 41, 47, 57, 58, 60, 70, 73, 75, 77], "hexagon": [2, 3, 5, 8, 33, 37, 39, 41, 56, 61, 66, 68, 69], "120": [2, 8, 33, 37, 39, 62, 66, 68], "identifyfamili": [2, 33, 37, 66], "rtol": [2, 3, 32, 33, 45, 61], "1e": [2, 3, 5, 8, 10, 11, 12, 13, 15, 17, 18, 28, 32, 33, 39, 44, 61, 64, 66, 67, 68, 69, 70, 73, 76], "05": [2, 11, 28, 33, 41, 44, 45, 57, 64, 69, 72, 74, 75], "atol": [2, 3, 8, 11, 32, 33, 45, 61, 67, 76], "08": [2, 3, 8, 10, 11, 13, 15, 17, 18, 32, 33, 74], "test": [2, 19, 33, 36, 37, 40, 46, 47, 49, 51, 52, 53, 54, 58, 65, 66, 67, 73], "consist": [2, 10, 32, 33, 34, 37, 38, 40, 45, 54, 58, 63, 66, 74, 75], "crystal": [2, 3, 5, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 24, 33, 35, 39, 41, 45, 48, 52, 55, 65, 68, 69, 70, 71, 72, 73, 74, 76, 77], "cell": [2, 5, 8, 10, 11, 12, 13, 15, 17, 18, 24, 33, 35, 37, 39, 41, 42, 43, 50, 52, 54, 55, 56, 57, 58, 60, 63, 66, 70, 71, 73, 77], "toler": [2, 3, 5, 8, 10, 11, 13, 15, 17, 18, 29, 30, 32, 33, 39, 44, 45, 61, 64, 66, 67, 68, 69, 70, 73, 75, 76], "5": [2, 8, 9, 10, 15, 19, 28, 33, 35, 40, 41, 44, 46, 47, 49, 50, 51, 52, 53, 54, 56, 57, 62, 64, 68, 70, 77], "8": [2, 5, 8, 10, 11, 13, 15, 17, 18, 33, 35, 36, 37, 39, 40, 41, 45, 48, 49, 50, 56, 57, 58, 59, 61, 62, 63, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77], "tetragon": [2, 3, 33, 37, 56, 61, 66], "rhombohedr": [2, 3, 33, 37, 61, 66], "orthorhomb": [2, 3, 33, 37, 61, 66], "monoclin": [2, 3, 33, 37, 61, 66], "insid": [2, 5, 7, 14, 19, 32, 39, 50, 62, 65, 66, 69, 70, 74], "inclus": [2, 32, 63], "like": [2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 28, 29, 30, 31, 32, 33, 34, 39, 40, 45, 46, 47, 48, 49, 50, 51, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76], "nx3": [2, 32, 54, 63], "n": [2, 5, 8, 10, 13, 14, 17, 18, 32, 36, 54, 56, 58, 60, 63, 64, 70, 71, 72, 75], "is_lammps_norm": 2, "note": [2, 3, 5, 7, 8, 9, 10, 11, 14, 15, 19, 31, 32, 33, 36, 37, 38, 39, 41, 43, 44, 45, 46, 47, 48, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 72, 73, 74], "larg": [2, 5, 9, 10, 11, 19, 35, 37, 39, 47, 49, 56, 60, 62, 70, 71, 72, 74], "tilt": [2, 10, 19, 37, 39, 50, 75], "factor": [2, 9, 17, 18, 19, 34, 37, 39, 50, 70, 72, 73], "check": [2, 3, 8, 13, 14, 17, 18, 24, 32, 33, 36, 37, 45, 55, 57, 58, 61, 63, 66, 74, 77], "command": [2, 19, 37, 39, 50, 59, 60], "mai": [2, 5, 9, 10, 11, 19, 31, 33, 37, 39, 40, 45, 56, 58, 59, 61, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75], "need": [2, 7, 8, 10, 19, 24, 31, 33, 39, 41, 42, 43, 50, 54, 57, 58, 60, 64, 65, 67, 68, 69, 72, 73, 74, 75], "run": [2, 19, 21, 22, 35, 54, 57, 58, 65, 67, 73, 77], "iscub": [2, 33, 37, 66], "ishexagon": [2, 33, 37, 66], "ismonoclin": [2, 33, 37, 66], "isorthorhomb": [2, 33, 37, 66], "isrhombohedr": [2, 33, 37, 66], "istetragon": [2, 33, 37, 66], "istriclin": [2, 33, 37, 66], "lx": [2, 19, 37, 39, 59, 60, 68], "normal": [2, 3, 5, 8, 9, 10, 12, 13, 14, 17, 18, 19, 31, 32, 33, 37, 44, 57, 63, 66, 68, 69, 70, 71, 72, 73, 74, 75, 77], "ly": [2, 19, 37, 39, 59, 60, 68], "lz": [2, 19, 37, 39, 59, 60, 68], "2": [2, 3, 7, 8, 9, 10, 12, 14, 17, 19, 33, 35, 77], "length_unit": [2, 7, 8, 9, 12, 14, 29, 31, 37, 64, 65, 71, 72, 73, 74], "read": [2, 3, 4, 7, 19, 21, 33, 34, 35, 36, 40, 47, 48, 49, 50, 51, 54, 58, 59, 61, 62, 65, 66, 73, 77], "path": [2, 4, 5, 7, 12, 14, 19, 22, 24, 28, 29, 30, 33, 35, 39, 40, 41, 42, 43, 46, 47, 49, 50, 51, 55, 56, 57, 58, 59, 60, 62, 65, 66, 72, 73, 77], "file": [2, 3, 4, 5, 7, 10, 11, 12, 14, 15, 19, 21, 22, 24, 33, 35, 39, 40, 41, 42, 43, 47, 48, 49, 55, 57, 59, 61, 62, 65, 66, 71, 72, 73, 74, 77], "said": 2, "save": [2, 3, 4, 5, 7, 12, 14, 16, 21, 24, 34, 40, 41, 42, 43, 46, 50, 51, 56, 58, 61, 62, 65, 66, 69, 77], "equival": [2, 3, 11, 33, 36, 37, 38, 39, 40, 66, 69, 73, 75], "origin": [2, 5, 8, 10, 14, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 59, 60, 62, 63, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76], "vect": [2, 8, 12, 39, 40, 71], "can": [2, 5, 7, 8, 9, 10, 11, 12, 14, 15, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 47, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76], "directli": [2, 8, 10, 11, 16, 31, 35, 37, 38, 39, 40, 43, 45, 46, 56, 58, 60, 61, 70, 71, 72, 73, 74, 75], "plane_crystal_to_cartesian": [2, 33, 37, 66, 68], "planar": [2, 10, 11, 12, 33, 37, 63, 68, 69, 72, 75, 76], "plane": [2, 7, 8, 9, 10, 11, 12, 13, 15, 17, 18, 32, 33, 66, 68, 70, 71, 72, 73, 74, 75, 76, 77], "algorithm": [2, 8, 14, 30, 33, 37, 64, 68, 69, 72, 73, 74, 75], "requir": [2, 8, 10, 13, 17, 18, 19, 33, 35, 37, 43, 44, 48, 50, 52, 53, 55, 59, 61, 64, 65, 68, 69, 70, 71, 72, 73, 74, 75], "3": [2, 3, 5, 7, 8, 11, 13, 14, 17, 18, 19, 28, 32, 33, 35, 41, 42, 43, 44, 46, 48, 77], "hkl": [2, 8, 10, 11, 15, 33, 66, 68, 69, 75], "miller": [2, 5, 8, 10, 11, 12, 13, 15, 17, 18, 33, 39, 45, 68, 69, 70, 73, 75], "crystallograph": [2, 12, 33, 48, 55, 68, 69, 71, 73, 75], "4": [2, 3, 5, 8, 9, 14, 17, 19, 24, 33, 35, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 77], "hkil": [2, 8, 33, 66, 68, 69], "bravai": [2, 5, 8, 11, 15, 33, 39, 45, 66, 68, 69, 75], "correspond": [2, 5, 7, 8, 10, 11, 12, 13, 14, 16, 17, 18, 19, 22, 24, 33, 37, 38, 39, 40, 42, 44, 45, 47, 49, 50, 51, 52, 53, 57, 58, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75], "np": [2, 5, 7, 9, 11, 12, 19, 29, 31, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 57, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76], "non": [2, 5, 8, 10, 11, 12, 14, 15, 33, 37, 38, 39, 45, 50, 57, 65, 66, 68, 69, 70, 71, 72, 75], "position_cartesian_to_rel": [2, 37, 39], "cartpo": [2, 37], "position_relative_to_cartesian": [2, 37, 39], "relpo": [2, 37], "reciprocal_vect": 2, "reciproc": 2, "These": [2, 24, 37, 39, 41, 45, 56, 58, 63, 64, 66, 72, 74, 75], "been": [2, 3, 5, 8, 9, 19, 24, 39, 42, 48, 50, 58, 63, 64, 66, 67, 68, 69, 70, 72, 73, 74, 75], "scale": [2, 5, 8, 9, 12, 14, 31, 34, 35, 40, 41, 46, 47, 49, 51, 52, 53, 54, 57, 61, 62, 67, 68, 69, 71, 72, 73, 76, 77], "pi": [2, 36, 70, 73], "besid": [2, 14], "thei": [2, 32, 37, 39, 47, 57, 58, 63, 64, 66, 70, 74, 75], "must": [2, 5, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 30, 31, 34, 38, 39, 49, 51, 57, 58, 59, 62, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75], "complet": [2, 37, 38, 54, 59, 63, 69], "squar": [2, 12, 70, 71, 74], "chang": [2, 8, 10, 12, 14, 16, 36, 37, 38, 39, 40, 47, 50, 56, 57, 58, 59, 63, 64, 67, 69, 71, 72, 73, 74, 75, 76], "same": [2, 7, 8, 10, 13, 17, 18, 28, 32, 34, 36, 38, 39, 40, 41, 42, 43, 50, 52, 56, 57, 58, 59, 61, 62, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75], "xy": [2, 7, 8, 12, 14, 19, 37, 39, 50, 68, 73], "xz": [2, 19, 37, 39, 50, 68], "yz": [2, 14, 19, 37, 39, 50, 68, 73], "xlo": [2, 37, 50, 60], "xhi": [2, 37, 50, 60], "ylo": [2, 37, 50, 60], "yhi": [2, 37, 50, 60], "zlo": [2, 37, 50, 60], "zhi": [2, 37, 50, 60], "see": [2, 9, 10, 11, 14, 15, 36, 37, 39, 45, 50, 56, 57, 58, 63, 66, 69, 71, 72, 73, 74, 76], "descript": [2, 39, 66, 72, 76], "attribut": [2, 5, 10, 11, 15, 16, 35, 37, 56, 57, 58, 68, 69, 72, 74, 75, 77], "more": [2, 10, 11, 15, 16, 29, 34, 36, 38, 39, 43, 45, 49, 50, 54, 55, 56, 57, 58, 59, 60, 63, 64, 66, 68, 69, 70, 72, 73, 74, 76], "detail": [2, 39, 50, 51, 55, 56, 57, 58, 66, 70, 72, 73, 75, 76], "set_abc": 2, "3d": [2, 5, 8, 9, 12, 13, 17, 18, 31, 32, 37, 38, 57, 63, 66, 70, 71, 72, 73, 74, 75], "set_hi_lo": 2, "hi": [2, 37], "lo": [2, 37], "direct": [2, 5, 8, 9, 10, 11, 13, 15, 17, 18, 31, 39, 40, 43, 47, 50, 51, 53, 54, 57, 63, 64, 65, 68, 69, 71, 72, 73, 74, 75, 76, 77], "set_length": 2, "x": [2, 8, 9, 12, 13, 14, 17, 18, 31, 38, 46, 48, 50, 51, 56, 58, 63, 68, 70, 71, 72, 73, 74, 75], "y": [2, 8, 9, 10, 12, 13, 14, 17, 18, 31, 42, 48, 50, 51, 58, 63, 66, 68, 70, 71, 72, 73, 74, 75], "z": [2, 8, 9, 10, 13, 17, 18, 31, 48, 50, 51, 58, 60, 61, 63, 68, 69, 70, 72, 73, 74, 75], "set_vector": 2, "trigon": [2, 33, 37, 66, 68, 69], "vector_crystal_to_cartesian": [2, 33, 37, 66], "uvw": [2, 5, 8, 10, 11, 15, 33, 39, 57, 66, 68, 69, 75], "uvtw": [2, 8, 33, 39, 66], "volum": [2, 36, 37, 69, 75, 77], "elast": [3, 8, 10, 13, 14, 17, 18, 70, 72, 74, 75, 76, 77], "cij": [3, 61, 66, 70, 73, 75], "stiff": [3, 61], "voigt": [3, 61, 66], "6x6": [3, 61, 66], "cij9": [3, 61], "9x9": [3, 61], "cijkl": [3, 61], "3x3x3x3": [3, 61], "sij": [3, 61], "complianc": [3, 61], "sijkl": [3, 61], "bulk": [3, 8, 10, 11, 68, 69, 74, 75, 77], "hill": [3, 61], "modulu": [3, 13, 70, 73, 77], "estim": [3, 12, 28, 64, 72, 74, 75, 77], "averag": [3, 31, 33, 61, 62, 66, 72, 74], "reuss": [3, 61], "independ": [3, 14, 31, 37, 41, 70, 73, 74, 75], "moduli": 3, "c11": [3, 61, 66, 70, 73, 75], "compon": [3, 8, 9, 10, 14, 31, 37, 57, 61, 68, 70, 71, 73, 74, 75], "c12": [3, 61, 66, 70, 73, 75], "c44": [3, 61, 66, 70, 73, 75], "five": [3, 36, 61], "c66": [3, 61], "c13": [3, 61], "c33": [3, 61], "is_norm": 3, "crystal_system": [3, 61], "0001": [3, 58, 61, 72], "agre": [3, 61], "famili": [3, 10, 11, 15, 24, 41, 42, 45, 56, 57, 60, 61, 66], "within": [3, 5, 8, 10, 15, 32, 33, 36, 39, 40, 41, 45, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 69, 70, 71, 72, 73, 74, 75, 76], "build": [3, 4, 5, 11, 12, 15, 16, 28, 37, 39, 40, 46, 47, 49, 51, 52, 53, 54, 60, 63, 72, 75, 77], "isotrop": [3, 13, 61, 73, 76], "m": [3, 5, 8, 10, 12, 13, 14, 17, 18, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76], "p": [3, 8, 10, 11, 15, 16, 17, 33, 36, 45, 46, 50, 56, 58, 59, 60, 61, 66, 68, 69, 70, 74, 75], "wave": [3, 61], "lambda": [3, 61], "lame": [3, 61], "mu": [3, 13, 61, 70, 73], "shear": [3, 10, 13, 70, 73, 75, 77], "e": [3, 7, 8, 9, 10, 12, 13, 14, 17, 18, 21, 24, 28, 30, 31, 35, 36, 37, 38, 39, 40, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75], "young": [3, 61], "nu": [3, 13, 61, 70, 73], "poisson": [3, 13, 61, 70, 73], "ratio": [3, 13, 31, 41, 61, 70, 73], "k": [3, 7, 17, 33, 36, 56, 58, 60, 61, 65, 68, 70, 71, 74], "string": [3, 8, 9, 12, 14, 28, 30, 31, 33, 34, 36, 38, 39, 40, 46, 47, 49, 50, 51, 57, 58, 61, 66, 72, 74], "exactli": [3, 8, 9, 10, 24, 39, 44, 52, 61, 72, 73, 75], "branch": [3, 19, 61], "pressur": [3, 14, 36, 60, 61, 74], "thirteen": [3, 61], "c15": [3, 61], "c22": [3, 61], "c23": [3, 61], "c25": [3, 61], "c35": [3, 61], "c46": [3, 61], "c55": [3, 61], "normalized_a": 3, "zero": [3, 8, 10, 11, 13, 15, 17, 18, 37, 38, 40, 46, 47, 49, 50, 51, 52, 53, 54, 61, 64, 67, 68, 69, 70, 72, 73, 74, 75, 76], "out": [3, 8, 10, 11, 15, 24, 36, 42, 56, 58, 59, 60, 61, 68, 69, 70, 73, 74, 75], "valid": [3, 34, 36, 58, 61, 75], "made": [3, 11, 15, 31, 39, 41, 42, 43, 50, 61, 63, 68, 69, 72, 75], "evalu": [3, 10, 12, 28, 29, 52, 61, 64, 69, 70, 71, 73, 75], "whether": [3, 18, 37, 49, 61], "done": [3, 9, 33, 37, 40, 45, 55, 61, 64, 66, 72, 73, 74, 75], "That": [3, 61], "up": [3, 32, 36, 61, 64, 68, 69, 73, 75], "you": [3, 8, 10, 11, 15, 16, 31, 36, 38, 39, 41, 45, 50, 56, 57, 58, 60, 61, 67, 68, 69, 70, 72, 73, 74, 75, 76], "compar": [3, 5, 11, 14, 16, 32, 52, 61, 66, 70, 72, 74, 75], "befor": [3, 5, 8, 16, 33, 39, 49, 61, 74, 75], "after": [3, 8, 9, 10, 33, 38, 39, 40, 49, 50, 58, 61, 64, 66, 68, 69, 72, 73, 75], "symmetri": [3, 11, 32, 37, 44, 61, 74], "nine": [3, 61], "six": [3, 61, 70], "seven": [3, 37], "c14": [3, 61], "c16": [3, 61], "transform": [3, 5, 8, 10, 11, 13, 14, 16, 17, 18, 19, 32, 36, 39, 45, 49, 56, 57, 61, 66, 68, 69, 70, 71, 73, 74, 75], "ax": [3, 7, 8, 9, 12, 13, 14, 16, 17, 18, 29, 31, 33, 61, 64, 65, 66, 68, 70, 71, 72, 74, 75], "tol": [3, 5, 8, 10, 11, 13, 15, 17, 18, 33, 39, 61, 68, 69, 70, 75], "matrix": [3, 5, 8, 10, 13, 14, 17, 18, 19, 32, 39, 45, 68, 69, 70, 74, 75], "suppli": [3, 5, 12, 39, 40, 50, 61, 66, 71, 74, 76], "give": [3, 4, 5, 8, 9, 14, 24, 31, 38, 39, 40, 41, 57, 58, 60, 61, 62, 65, 66, 68, 70, 72, 73, 74, 75], "right": [3, 8, 16, 19, 33, 37, 39, 47, 49, 61, 63, 66, 68, 70, 71, 72, 73, 74, 75], "hand": [3, 8, 16, 19, 33, 37, 39, 61, 66, 68, 74], "orthogon": [3, 8, 9, 13, 16, 17, 18, 31, 33, 37, 45, 61, 62, 66, 70, 72, 74], "ha": [3, 5, 8, 10, 19, 24, 33, 35, 37, 38, 39, 40, 41, 42, 45, 47, 49, 50, 52, 56, 57, 58, 59, 60, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76], "twenti": [3, 61], "c24": 3, "c26": 3, "c34": 3, "c36": 3, "c45": 3, "c56": 3, "coord": [4, 8, 12, 28, 29, 30, 39, 64, 66, 70, 72], "fname": [4, 46, 47, 60, 62, 66], "symbol": [5, 7, 10, 11, 15, 19, 24, 33, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 60, 65, 66, 68, 69, 74, 75], "mass": [5, 33, 34, 36, 39, 40, 52, 58, 59, 60, 66, 71], "combin": [5, 9, 21, 24, 31, 33, 37, 38, 39, 40, 43, 56, 57, 59, 60, 70, 74, 75], "add": [5, 7, 8, 12, 38, 39, 40, 65, 67, 71, 73, 76], "involv": [5, 56, 58, 64, 65, 73], "atoms_df": [5, 40, 46, 47, 48, 49, 51, 52, 53, 54, 60, 67, 76], "provid": [5, 8, 10, 33, 36, 40, 43, 45, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 67, 70, 71, 72, 73, 74, 75, 76], "tabul": [5, 7, 55, 65, 71], "version": [5, 10, 19, 21, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76], "atoms_extend": 5, "level": [5, 24, 39, 40, 70], "flag": [5, 8, 12, 14, 21, 24, 39, 47, 49, 51, 58, 71, 73], "taken": [5, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 31, 39, 40, 48, 49, 50, 51, 63, 66, 70, 71, 72, 73, 74, 75], "updat": [5, 24, 31, 38, 39, 40, 41, 42, 43, 50, 51, 55, 56, 58, 59, 60, 62, 65, 66, 70, 72, 75, 76], "share": [5, 39, 58, 64], "input": [5, 7, 10, 11, 14, 15, 18, 19, 24, 33, 39, 41, 50, 58, 59, 65, 71, 73, 74, 77], "deepcopi": [5, 39, 57, 66, 72], "consider": [5, 39, 62, 66, 75], "slower": [5, 39], "atoms_ix": [5, 63], "_atomsindex": 5, "atoms_prop": [5, 38, 40], "unscal": 5, "retriev": [5, 10, 11, 15, 22, 24, 34, 35, 36, 38, 39, 40, 41, 42, 43, 55, 56, 57, 58, 61, 62, 66, 68, 71, 72, 74], "atommman": 5, "box_set": 5, "remain": [5, 40, 64, 69, 71, 75], "unchang": [5, 8, 24, 39, 67], "composit": [5, 24, 33, 39, 41, 56, 66], "reduc": [5, 24, 33, 53, 56, 66, 70, 75], "sort": [5, 24, 33, 56, 66], "Will": [5, 19, 30, 40, 49, 64, 73], "miss": [5, 39, 47, 58, 59], "self": [5, 30, 39, 66, 70], "box_unit": [5, 39, 40], "compil": [5, 66], "return_transform": [5, 8, 19, 39, 45], "simul": [5, 7, 21, 22, 35, 37, 50, 52, 57, 60], "code": [5, 36, 39, 55, 57, 58, 62, 64, 74], "newsystem": [5, 19, 39, 63], "r0": [5, 69], "interatom": [5, 7, 15, 39, 41, 42, 50, 55, 56, 57, 58, 65, 69, 77], "space": [5, 7, 10, 12, 14, 15, 24, 32, 33, 39, 41, 45, 54, 55, 56, 57, 61, 63, 64, 65, 66, 69, 71, 73, 75], "smallest": [5, 39, 59, 66, 68, 69, 73], "pre": [5, 10, 18, 29, 39, 41, 42, 43, 58, 60, 70, 73, 75], "rest": [5, 39, 62], "rotat": [5, 8, 10, 11, 15, 16, 32, 45, 61, 66, 74, 75], "orient": [5, 8, 10, 13, 17, 18, 39, 45, 61, 70, 72, 73, 74], "determin": [5, 8, 9, 28, 32, 33, 66, 68, 69, 70, 73, 74, 75], "identif": [5, 24, 45, 56], "occasion": [5, 47, 56], "fail": [5, 8, 9, 19, 31, 33, 56, 57, 60, 67, 73], "ucel": [5, 10, 11, 15, 41, 42, 43, 44, 56, 63, 66, 67, 68, 69, 75, 76], "behavior": [5, 8, 34, 38, 40, 56, 68, 69, 75], "try": [5, 37, 48, 58, 59, 72, 74, 75], "rang": [5, 7, 8, 9, 10, 13, 14, 21, 30, 31, 33, 59, 61, 65, 66, 70, 72, 73, 74, 75], "fulli": [5, 8, 35, 60, 62, 69, 72, 73, 75], "supers": [5, 11, 15, 44, 60, 62, 63, 66, 67, 68, 69, 75, 76], "a_siz": [5, 39], "b_size": [5, 39], "c_size": [5, 39], "creat": [5, 8, 9, 10, 11, 12, 14, 15, 19, 24, 29, 31, 33, 35, 37, 38, 39, 44, 50, 55, 58, 59, 60, 61, 63, 65, 66, 68, 69, 70, 71, 72, 73, 75, 77], "larger": [5, 9, 10, 11, 12, 14, 15, 31, 40, 57, 60, 62, 68, 69, 71, 72, 73, 74, 75], "replic": [5, 39, 68, 71, 75], "along": [5, 8, 9, 10, 11, 12, 14, 15, 28, 29, 30, 31, 39, 52, 57, 63, 64, 65, 68, 69, 71, 72, 73, 74, 75], "multipli": [5, 8, 10, 11, 15, 36, 39, 68, 69, 75], "_size": 5, "seed": [5, 10, 34, 60, 75], "center": [5, 7, 8, 9, 10, 11, 31, 32, 33, 39, 45, 56, 63, 65, 66, 68, 69, 70, 71, 72, 74, 75], "its": [5, 8, 16, 39, 51, 54, 57, 58, 59, 60, 66, 67, 72, 74, 75], "sign": [5, 10, 32, 70, 73, 75], "element": [5, 7, 24, 33, 39, 40, 41, 42, 46, 47, 49, 50, 51, 52, 53, 54, 56, 57, 58, 60, 65, 66], "wrap": [5, 9, 50, 57, 66, 69, 72], "return_imageflag": 5, "around": [5, 9, 10, 31, 36, 39, 49, 57, 61, 70, 72, 74, 75], "imag": [5, 10, 11, 75], "wa": [5, 8, 9, 10, 11, 14, 15, 24, 33, 37, 40, 50, 55, 57, 58, 59, 60, 67, 69, 70, 72, 75], "imageflag": 5, "bondanglemap": [6, 77], "rmin": [7, 65], "rmax": [7, 65], "rnum": [7, 65], "thetamin": [7, 65], "thetamax": [7, 65], "thetanum": [7, 65], "r_ij": [7, 65], "r_ik": [7, 65], "theta": [7, 8, 13, 16, 65, 70, 74], "energi": [7, 12, 13, 14, 17, 18, 22, 28, 29, 30, 34, 35, 36, 60, 65, 68, 69, 72, 75, 76, 77], "analyz": [7, 8, 16, 35, 38, 44, 52, 54, 55, 63, 75, 76, 77], "explor": [7, 43, 56, 58, 60, 65, 69, 75, 76], "bond": [7, 50, 65], "character": [7, 8, 58, 65, 72, 74, 76, 77], "natur": [7, 41, 70, 72, 73, 75], "cumulative_pdf": 7, "nbin": [7, 65], "301": [7, 62, 65], "energymin": [7, 65], "15": [7, 35, 36, 37, 38, 39, 40, 41, 50, 56, 57, 58, 59, 60, 61, 62, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77], "energymax": [7, 65], "cumul": [7, 64, 65, 74], "probabl": [7, 65], "densiti": [7, 14, 60, 65, 70], "function": [7, 9, 12, 16, 29, 35, 36, 37, 38, 39, 40, 55, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 70, 71, 72, 73, 74, 75, 76, 77], "histogram": [7, 65], "bin": [7, 9, 31, 59, 62, 65, 74], "minimum": [7, 8, 9, 10, 15, 31, 35, 65, 69, 72, 73, 74, 75, 77], "bound": [7, 50, 51, 65, 71], "consid": [7, 32, 33, 49, 63, 65, 66, 74], "maximum": [7, 8, 9, 11, 16, 29, 30, 31, 64, 65, 68, 72, 73, 74, 75], "cum_pdf": [7, 65], "itercoord": 7, "iter": [7, 15, 33, 62, 64, 66, 69, 73, 75], "through": [7, 14, 33, 38, 60, 65, 66], "bodi": [7, 8, 10, 33, 45, 50, 56, 65, 68, 69, 75], "yield": [7, 15, 33, 65, 69], "j": [7, 8, 14, 36, 58, 60, 61, 65, 70, 73, 74], "r_jk": [7, 65], "itersystem": 7, "configur": [7, 8, 10, 11, 13, 14, 15, 17, 18, 35, 39, 47, 49, 50, 52, 53, 54, 55, 57, 60, 65, 70, 71, 72, 73, 74, 76, 77], "either": [7, 8, 9, 10, 14, 16, 19, 24, 29, 30, 31, 33, 36, 37, 38, 39, 40, 41, 42, 45, 50, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 67, 68, 69, 71, 72, 73, 74, 75, 76], "individu": [7, 10, 16, 37, 50, 55, 65, 74, 75], "here": [7, 10, 11, 15, 45, 47, 49, 50, 57, 58, 60, 61, 65, 66, 68, 69, 70, 72, 73, 74, 75], "dure": [7, 10, 11, 15, 16, 19, 24, 39, 40, 41, 42, 43, 47, 49, 50, 51, 52, 53, 58, 61, 62, 63, 64, 65, 69, 71, 72, 73, 75], "shift": [7, 8, 10, 11, 12, 15, 28, 45, 64, 65, 67, 68, 71, 72, 73], "load_tabl": 7, "filenam": [7, 22, 40, 58, 65], "energy_unit": [7, 29, 64, 65], "ev": [7, 12, 14, 36, 60, 65, 70, 71, 73], "map": [7, 8, 9, 10, 12, 14, 15, 49, 50, 51, 64, 65, 69, 71, 73, 74, 75, 76, 77], "limit": [7, 8, 9, 10, 13, 17, 18, 21, 24, 31, 35, 37, 38, 39, 41, 42, 45, 56, 57, 58, 59, 60, 63, 65, 68, 70, 71, 72, 74, 75], "regular": [7, 9, 59, 65, 72, 73, 75], "ones": [7, 21, 58, 59, 65, 74], "embed": [7, 40, 65], "loop": [7, 65], "outsid": [7, 32, 65, 66, 70, 72, 75], "middl": [7, 10, 65, 69, 75], "max": [7, 8, 9, 10, 11, 15, 31, 38, 39, 59, 64, 65, 68, 69, 70, 72, 74], "inform": [7, 8, 10, 11, 14, 15, 19, 30, 35, 37, 38, 39, 40, 41, 42, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 64, 65, 67, 74, 75], "measur": [7, 12, 59, 61, 65, 69, 71, 72, 73, 74, 75], "irregular": [7, 65], "do": [7, 29, 50, 56, 58, 65, 69, 72, 73, 74, 75], "conform": [7, 65], "outer": [7, 65, 70], "pdf": [7, 55], "plot_cumulative_pdf": 7, "matplotlib_ax": [7, 8, 9, 31, 65, 72], "figur": [7, 8, 9, 12, 14, 29, 31, 64, 65, 71, 72, 75], "matplotlib": [7, 8, 9, 12, 14, 29, 31, 35, 59, 60, 63, 64, 65, 70, 71, 72, 73, 74, 75, 76], "exist": [7, 8, 9, 12, 19, 21, 24, 29, 31, 33, 37, 45, 51, 58, 59, 61, 62, 64, 65, 67, 70, 71, 75], "axi": [7, 8, 9, 10, 12, 13, 14, 17, 18, 29, 31, 32, 39, 61, 63, 64, 65, 66, 70, 71, 72, 74, 75], "word": [7, 65], "pyplot": [7, 12, 14, 29, 31, 59, 60, 63, 64, 65, 70, 71, 72, 73, 74, 75, 76], "Not": [7, 8, 9, 31, 65, 74], "plot_pdf": 7, "save_t": 7, "include_head": [7, 65], "header": [7, 47, 49, 50, 65], "comment": [7, 47, 49, 50, 58, 65], "top": [7, 14, 47, 65, 69], "nan": [7, 9, 31, 58, 65, 70], "construct": [7, 8, 9, 10, 11, 15, 31, 37, 39, 41, 42, 49, 58, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 74, 75, 76], "order": [7, 34, 40, 50, 55, 58, 64, 65, 70, 75], "freesurfac": [8, 15, 69, 75, 76], "stackingfault": [8, 76], "gammasurfac": [8, 14, 69, 71, 76, 77], "volterradisloc": [8, 10, 13, 14, 17, 70, 75, 77], "isotropicvolterradisloc": [8, 70, 76], "stroh": [8, 70, 73, 76], "disloc": [8, 9, 13, 14, 17, 18, 35, 71, 74, 77], "differentialdisplac": [8, 75, 76], "sdvpn": [8, 76, 77], "strain": [8, 9, 10, 13, 17, 18, 35, 72, 73, 75, 77], "differential_displac": [8, 72], "burger": [8, 10, 13, 14, 17, 18, 70, 73, 74, 75], "plotxaxi": [8, 9, 31, 72, 74, 75], "plotyaxi": [8, 9, 31, 72, 74, 75], "xlim": [8, 9, 31, 72, 74, 75], "ylim": [8, 9, 31, 72, 74, 75], "zlim": [8, 9, 31, 72, 74, 75], "plot_scal": 8, "atom_color": 8, "atom_cmap": 8, "display_final_po": 8, "return_data": 8, "differenti": [8, 9, 31, 40, 62, 70, 75, 77], "align": [8, 9, 10, 12, 13, 14, 17, 18, 31, 39, 68, 70, 71, 72, 74], "fit": [8, 9, 12, 31, 64, 71, 72, 73, 74], "min": [8, 9, 31, 59, 64, 72, 74], "optimum": [8, 9, 10, 16, 31, 69, 72, 74, 75], "encompass": [8, 9, 10, 39, 62, 69, 71, 72, 74, 75], "screw": [8, 10, 70, 73, 74], "local": [8, 24, 41, 42, 43, 56, 57, 58, 60, 64, 72, 74, 75], "3x3": [8, 10, 12, 13, 14, 16, 17, 18, 33, 37, 39, 54, 70, 74, 75], "appli": [8, 10, 11, 14, 15, 16, 30, 31, 38, 45, 47, 60, 64, 67, 68, 69, 71, 73, 74, 75], "make": [8, 9, 10, 32, 36, 38, 40, 45, 49, 56, 57, 58, 59, 60, 63, 67, 68, 69, 70, 72, 73, 74, 75], "scalar": [8, 31, 49, 51, 74], "arrow": [8, 9, 72, 75], "color": [8, 9, 12, 14, 31, 63, 71, 72], "displai": [8, 9, 12, 14, 71, 72, 73, 75], "cmap": [8, 9, 12, 14, 31, 71, 72, 74], "instead": [8, 9, 10, 31, 38, 50, 52, 58, 63, 68, 72, 75], "togeth": [8, 9, 60, 69, 70, 72, 75], "long": [8, 9, 10, 14, 58, 62, 70, 72, 73, 75], "uniqu": [8, 9, 11, 12, 24, 33, 38, 39, 40, 41, 42, 43, 52, 54, 56, 57, 58, 59, 60, 61, 63, 66, 68, 69, 71, 72, 75], "colormap": [8, 9, 12, 14, 31, 71, 72, 74], "hsv": [8, 9, 72], "rather": [8, 44, 46, 59, 60, 64, 66, 69, 72, 74, 75], "than": [8, 11, 15, 34, 36, 38, 39, 44, 46, 49, 50, 58, 59, 60, 62, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76], "affect": [8, 31, 38, 39, 56, 74, 75], "plotzaxi": 8, "subplot": [8, 9, 29, 31, 63, 64, 70, 72], "fig": [8, 12, 70, 71, 72, 73, 75], "dislocation_arrai": 8, "dislsol": [8, 10, 70, 75], "bwidth": [8, 10], "insert": [8, 10, 11, 15, 60, 67, 68, 69, 70, 72, 74, 75, 76], "solut": [8, 10, 13, 14, 17, 18, 35, 68, 72, 74, 76, 77], "alter": [8, 10, 36, 39, 74, 75], "across": [8, 10, 15, 31, 39, 50, 57, 60, 61, 66, 69, 71, 72, 74, 75], "slip": [8, 10, 11, 13, 15, 17, 18, 68, 70, 73, 74, 75, 76, 77], "third": [8, 10, 16, 37, 74], "free": [8, 9, 10, 11, 15, 16, 35, 72, 75, 77], "surfac": [8, 10, 11, 12, 14, 15, 35, 64, 72, 75, 77], "parallel": [8, 9, 10, 19, 32, 59, 68, 69, 70, 71, 75], "perfect": [8, 10, 16, 72, 74, 76], "linear": [8, 10, 74], "perpendicular": [8, 9, 10, 13, 17, 18, 70, 72, 73, 75], "line": [8, 9, 10, 12, 13, 14, 17, 18, 19, 21, 40, 41, 42, 47, 49, 50, 58, 59, 60, 64, 69, 70, 71, 72, 73, 74, 75], "width": [8, 9, 10, 11, 15, 31, 57, 67, 68, 69, 72, 75], "duplic": [8, 10, 21, 24, 33, 42, 56, 59, 66, 75], "remov": [8, 10, 39, 40, 50, 55, 59, 60, 62, 63, 66, 67, 70, 75], "edg": [8, 10, 68, 70, 71, 72, 73, 74, 75], "half": [8, 10, 68, 69, 74, 75], "nearli": [8, 10, 73, 75], "ident": [8, 10, 40, 50, 56, 66, 69, 71, 75], "old_id": [8, 10, 67, 76], "back": [8, 10, 36, 40, 61, 63, 64, 66, 72, 73], "dislocation_system_basi": 8, "\u03be_uvw": [8, 10, 13, 17, 18, 70, 73, 75], "slip_hkl": [8, 10, 13, 17, 18, 70, 73, 75], "maxindex": [8, 10, 11, 15, 68, 69], "return_hexagon": 8, "coincid": [8, 10, 37, 39, 68, 73, 75], "close": [8, 56, 69, 71, 74], "u": [8, 33, 36, 39, 58, 71, 75], "respect": [8, 9, 13, 14, 17, 18, 22, 31, 37, 39, 40, 52, 57, 64, 69, 70, 72, 75], "round": [8, 10, 11, 13, 15, 17, 18, 39, 68, 69, 70], "off": [8, 10, 11, 13, 15, 17, 18, 45, 68, 69, 70], "best": [8, 10, 11, 15, 59, 68, 69, 70, 72, 73, 74, 75], "largest": [8, 10, 11, 15, 68, 69], "guess": [8, 10, 11, 14, 15, 64, 68, 69, 70, 73, 75], "express": [8, 14, 36, 40, 49, 58, 68, 69, 70, 71, 73], "also": [8, 10, 13, 15, 17, 18, 24, 36, 37, 38, 39, 40, 43, 49, 50, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 72, 73, 74, 75, 76], "3x4": [8, 39], "assertionerror": [8, 37, 48, 67], "search": [8, 11, 16, 24, 33, 41, 42, 45, 56, 58, 66, 67, 68, 74, 75, 76], "dislocation_system_transform": 8, "util": [8, 9, 31, 44, 77], "disregistri": [8, 14, 75, 76, 77], "basesystem": [8, 16, 72, 74], "dislsystem": [8, 72], "planepo": [8, 72], "profil": [8, 14, 73], "so": [8, 10, 34, 39, 50, 58, 64, 68, 69, 72, 74, 75], "fall": [8, 62, 68, 72], "dumbbel": [8, 76, 77], "ptd_id": [8, 67, 76], "db_vect": [8, 67, 76], "interstiti": [8, 76, 77], "move": [8, 28, 29, 50, 59, 64, 67, 71, 72, 73, 75, 76], "doesn": [8, 67], "t": [8, 33, 36, 39, 58, 60, 67], "undefin": [8, 67], "modifi": [8, 11, 15, 24, 39, 41, 42, 43, 59, 63, 64, 67, 68, 69, 72, 76], "01": [8, 36, 39, 47, 59, 66, 68, 70, 72, 74, 75], "By": [8, 36, 40, 57, 67], "free_surface_basi": 8, "cutboxvector": [8, 11, 15, 68, 69], "return_planenorm": 8, "conventional_set": [8, 10, 11, 15, 68, 69, 75], "In": [8, 19, 36, 39, 40, 41, 43, 49, 50, 56, 60, 64, 65, 68, 69, 72, 74, 75, 76], "w": [8, 31, 36, 39, 41, 56, 58, 60, 66, 70, 71, 73, 75], "sun": [8, 68, 75], "g": [8, 16, 36, 56, 58, 60, 74], "cedar": [8, 68, 75], "scienc": [8, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76], "617": [8, 62], "53": [8, 39, 56, 57, 60, 62, 74], "59": [8, 39, 56, 57, 60, 61, 62, 69, 73], "2013": [8, 58], "well": [8, 11, 19, 52, 62, 64, 68, 69, 70, 72, 73, 74, 76], "second": [8, 10, 16, 33, 40, 59, 67, 68, 74], "select": [8, 9, 10, 11, 15, 19, 24, 31, 38, 40, 41, 42, 49, 50, 54, 58, 62, 66, 68, 69, 75, 77], "primit": [8, 10, 11, 33, 35, 55, 66, 75, 77], "convent": [8, 10, 11, 15, 33, 35, 55, 66, 77], "f": [8, 25, 26, 27, 33, 36, 40, 45, 46, 47, 49, 50, 51, 56, 58, 59, 60, 62, 63, 66, 68, 69, 70, 71, 72, 73, 74, 75], "face": [8, 33, 45, 56, 68, 69, 75], "side": [8, 33, 45, 63, 68, 69, 71, 72, 75], "planenorm": [8, 12, 71], "except": [8, 10, 20, 37, 48, 52, 57, 58, 59, 64, 67, 70, 72, 73, 74], "nye_tensor": [8, 16, 72, 74], "p_vector": [8, 16, 74], "theta_max": [8, 16, 74], "27": [8, 11, 16, 36, 38, 39, 57, 58, 60, 62, 66, 68, 69, 74, 75], "nye": [8, 9, 16, 75, 77], "tensor": [8, 9, 11, 13, 14, 16, 17, 18, 36, 49, 51, 61, 66, 70, 73, 75, 77], "nearest": [8, 12, 14, 16, 62, 71, 72, 74, 75], "q": [8, 16, 51, 70, 74], "structur": [8, 10, 16, 24, 35, 36, 37, 38, 39, 40, 42, 43, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 65, 68, 69, 71, 72, 73, 74], "fcc": [8, 9, 41, 42, 43, 44, 45, 56, 57, 58, 59, 60, 63, 70, 71, 72, 73, 74], "strain_invariant_1": 8, "strain_invariant_2": 8, "angular_veloc": 8, "nye_tensor_p": [8, 74], "state": [8, 10, 13, 17, 18, 45, 59, 64, 70, 71, 72, 73, 75, 76], "want": [8, 16, 31, 36, 38, 40, 57, 58, 74, 75], "pn_arctan_disregistri": [8, 73], "xmax": [8, 73], "xstep": [8, 73], "xnum": [8, 73], "halfwidth": [8, 73], "classic": [8, 43, 73], "peierl": [8, 14, 35, 75, 76, 77], "nabarro": [8, 14, 35, 76, 77], "arctan": [8, 13, 73], "\u03b4": [8, 14], "\u03c0": [8, 13, 17], "\u03be": [8, 18, 70], "exact": [8, 33, 66], "At": [8, 73, 75], "least": [8, 10, 11, 15, 62, 65, 68, 69, 73, 74, 75], "step": [8, 12, 21, 22, 28, 29, 30, 59, 60, 63, 65, 68, 69, 73, 75], "endpoint": [8, 22, 71, 73], "ptd_type": [8, 67, 76], "v": [8, 33, 36, 39, 58, 60, 64, 67, 70, 75, 76], "vacanc": [8, 76, 77], "substitut": [8, 76, 77], "db": [8, 67, 76], "altern": [8, 9, 10, 11, 13, 14, 15, 17, 18, 19, 35, 36, 38, 40, 52, 53, 58, 59, 61, 67, 68, 70, 72, 73, 74, 75, 76], "don": [8, 39, 58, 67], "them": [8, 10, 31, 38, 39, 40, 47, 50, 58, 66, 67, 68, 70, 72, 75], "slip_vector": [8, 76], "formul": [8, 72, 73], "s_i": 8, "\u03c3_j": [8, 14], "d_ij": 8, "time": [8, 21, 34, 36, 39, 41, 42, 43, 58, 59, 60, 61, 62, 64, 74, 75, 76], "solve_volterra_disloc": [8, 70, 73, 76], "cart_ax": [8, 13, 17, 18, 70], "children": [8, 64], "medium": [8, 13, 17, 18, 70, 73], "automat": [8, 9, 13, 17, 18, 31, 33, 37, 39, 40, 50, 51, 58, 59, 60, 68, 69, 70, 71, 73, 75], "retain": [8, 13, 17, 18, 38, 39, 70, 74, 75, 76], "interpret": [8, 13, 17, 18, 33, 34, 40, 49, 57, 58, 70, 71], "accept": [8, 13, 17, 18, 70], "case": [8, 13, 17, 18, 40, 45, 56, 57, 58, 70, 71, 73, 74, 75], "assert": [8, 13, 17, 18, 45, 70], "some": [8, 10, 13, 17, 18, 37, 46, 50, 55, 56, 57, 58, 59, 60, 61, 66, 67, 68, 69, 70, 72, 73, 74, 75], "appropri": [8, 37, 57, 60, 72, 75], "system0": [9, 72], "system1": [9, 72], "arrowcent": [9, 72], "ddvector": [9, 72], "arrowuvector": [9, 72], "pair": [9, 16, 19, 33, 50, 54, 58, 59, 60, 72, 74, 75, 76], "ddmax": [9, 72, 75], "arrowscal": [9, 72, 75], "arrowwidth": [9, 72, 75], "005": [9, 61, 69, 72], "use0z": [9, 72], "atomcolor": [9, 72], "atomcmap": [9, 72], "atoms": [9, 72], "figsiz": [9, 12, 14, 31, 63, 70, 71, 72, 75], "circl": [9, 14, 31, 72, 74, 75], "while": [9, 14, 39, 40, 46, 64, 68, 70, 71, 75], "project": [9, 24, 43, 53, 55, 56, 63, 72, 75], "onto": [9, 72, 73], "therebi": [9, 72, 75], "show": [9, 12, 14, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 62, 63, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76], "kept": [9, 72], "subtract": [9, 72, 75], "typic": [9, 11, 15, 58, 60, 68, 69, 70, 71, 72, 73, 75], "110": [9, 37, 57, 62, 67, 72], "basal": [9, 72], "hcp": [9, 41, 56, 61, 72], "major": [9, 10, 39, 56, 66, 72, 75], "often": [9, 37, 49, 72, 75], "minor": [9, 58, 72], "simpli": [9, 14, 33, 50, 54, 68, 72, 73, 75], "visibl": [9, 72], "200": [9, 31, 37, 40, 46, 47, 49, 51, 52, 53, 54, 62, 72, 74], "even": [9, 10, 11, 15, 33, 58, 66, 68, 69, 72, 75], "radiu": [9, 10, 32, 63, 66, 70, 72, 73, 75], "inch": [9, 31, 36, 72], "height": [9, 31, 57, 67, 72, 75], "guarante": [9, 38, 72], "ignor": [9, 31, 41, 42, 43, 47, 49, 50, 54, 63, 74], "would": [9, 19, 31, 50], "beforehand": [9, 31, 74], "occur": [9, 12, 31, 68, 71, 72, 76], "plot_with_ny": 9, "vlim": [9, 31], "bwr": [9, 74], "xbin": [9, 31, 74], "ybin": [9, 31, 74], "colorbar": [9, 31, 70, 72], "fill_valu": [9, 31], "simpl": [9, 14, 39, 50, 56, 58, 59, 63, 66, 68, 73, 74], "dd": [9, 72, 75], "could": [9, 74], "futur": [9, 10, 64], "interest": [9, 50, 68, 69, 75], "question": [9, 74], "contour": [9, 31, 74], "interpol": [9, 12, 14, 30, 31, 64, 71, 72, 73, 74, 76], "fill": [9, 31, 33, 49, 51, 66], "grid": [9, 10, 31, 69, 70, 71, 74], "caus": [9, 31, 72, 75], "error": [9, 10, 11, 14, 15, 20, 24, 31, 34, 35, 36, 37, 41, 50, 58, 75, 77], "too": [9, 31, 64, 74], "narrow": [9, 31], "sum": [9, 31, 63, 64, 66, 69, 70, 74, 75], "area": [9, 11, 12, 14, 31, 68, 69, 71, 72, 74, 75], "solv": [9, 13, 14, 17, 18, 70, 76, 77], "whatev": [9, 36], "ucell_set": [10, 75], "shiftindex": [10, 11, 15, 75], "shiftscal": [10, 11, 15, 75], "array_boundari": 10, "planeset": [10, 32], "periodicarrai": 10, "those": [10, 11, 15, 56, 58, 64, 66, 69, 70, 74, 75], "full": [10, 15, 19, 24, 39, 40, 51, 53, 56, 57, 58, 61, 64, 66, 69, 72, 73, 75, 76], "exclud": [10, 40, 75], "base_system": [10, 72, 74, 75], "box_boundari": 10, "monopol": [10, 72, 77], "build_disl_arrai": 10, "cutindex": [10, 11, 75], "cylinder_boundari": 10, "cylind": [10, 32, 75], "leav": 10, "wide": [10, 46, 60, 72, 75], "everywher": 10, "dipol": [10, 60, 77], "sizemult": [10, 11, 15, 68, 69, 75], "boxtilt": [10, 75], "numreplica": [10, 75], "return_base_system": [10, 75], "describ": [10, 37, 50, 58, 68, 70, 72, 75], "li": [10, 75], "wang": 10, "cai": [10, 75], "bulatov": [10, 14, 73], "ho": 10, "yip": 10, "phy": [10, 72, 75], "rev": [10, 72, 75], "70": [10, 39, 41, 58, 60, 61, 62, 75], "2004": [10, 56, 58, 75], "104113": [10, 75], "http": [10, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76], "doi": [10, 24, 58, 60], "org": [10, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 57, 58, 59, 60, 61, 62, 63, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76], "1103": [10, 58, 62], "physrevb": [10, 58], "opposit": [10, 63, 72, 75], "volterra": [10, 13, 14, 17, 18, 35, 76, 77], "constitut": 10, "regularli": 10, "2d": [10, 12, 15, 64, 69, 71, 73, 74, 76], "counteract": 10, "ensur": [10, 39, 40, 50, 51, 57, 58, 60, 62, 69, 71, 72, 75], "stabil": 10, "onc": [10, 38, 39, 54, 58, 64, 69, 73, 75], "fraction": [10, 12, 15, 33, 68, 69, 71, 75], "possibl": [10, 36, 40, 45, 50, 56, 58, 68, 69, 70, 71, 74, 75], "quadripol": [10, 75], "surround": [10, 33, 70, 75], "achiev": [10, 75], "most": [10, 24, 33, 40, 42, 56, 58, 63, 64, 69, 72, 73, 75], "how": [10, 14, 21, 31, 33, 38, 39, 50, 58, 59, 66, 70, 71, 72, 73, 74, 75], "mani": [10, 33, 35, 38, 47, 49, 52, 56, 57, 64, 71, 72, 73, 74, 75, 76], "field": [10, 24, 36, 40, 41, 42, 43, 49, 50, 51, 58, 60, 70, 73], "rectangular": [10, 75], "nxn": [10, 75], "total": [10, 14, 59, 69, 72, 73, 75], "rigid": [10, 45, 75], "prior": [10, 35, 75], "ideal": [10, 16, 41, 58, 68, 69, 70, 74, 75, 76], "cannot": [10, 11, 15, 31, 34, 39, 40, 47, 69, 73, 74, 75], "bcc": [10, 39, 41, 50, 56, 62, 66, 76], "analysi": [10, 35, 54, 63, 69, 75, 77], "disl_system": [10, 72, 74, 75], "static": [10, 24, 42, 56, 58], "dipole_displac": 10, "x1": [10, 46], "x2": [10, 46], "mvect": 10, "nvect": 10, "phil": [10, 75], "mag": [10, 75], "2003": [10, 42, 57, 61, 75], "83": [10, 39, 60, 62, 75], "539": [10, 38, 62, 75], "567": [10, 62], "1080": [10, 62], "0141861021000051109": 10, "One": [10, 15, 16, 64, 74, 75, 76], "whole": 10, "It": [10, 37, 38, 44, 50, 52, 56, 58, 63, 66, 70, 72, 73], "fromdatabas": [10, 11, 15], "databas": [10, 11, 15, 23, 35, 41, 42, 43, 46, 48, 50, 55, 77], "prompt": [10, 11, 15, 24, 33, 41, 58], "record": [10, 11, 15, 19, 24, 25, 26, 27, 41, 42, 43, 55, 56, 57, 58, 60], "queri": [10, 11, 15, 42, 43, 56], "below": [10, 11, 15, 29, 30, 32, 39, 50, 58, 60, 64, 66, 69, 70, 72, 73, 75, 76], "info": [10, 11, 15, 19, 24, 31, 41, 42, 43, 46, 49, 50, 51, 58, 59, 60, 73], "crystal_prototyp": [10, 11, 15, 41, 43, 55, 56], "fetch": [10, 11, 15, 24, 37, 43, 56], "screen": [10, 11, 15, 19, 21, 24, 33, 41, 58, 59], "ask": [10, 11, 15, 24, 33, 41, 58], "found": [10, 11, 14, 15, 19, 24, 33, 41, 42, 47, 50, 55, 56, 58, 69, 70, 73, 74], "thrown": [10, 11, 15, 24, 41, 58], "recogn": [10, 11, 15, 46, 51], "free_surfac": [10, 11, 15], "charact": [10, 18, 49, 70, 73, 75], "prototyp": [10, 11, 15, 24, 35, 42, 44, 45, 55, 58, 60, 66, 75, 77], "trivial": [10, 11, 15, 75], "abov": [10, 11, 15, 32, 36, 39, 40, 47, 49, 51, 56, 60, 61, 66, 68, 69, 70, 71, 72, 73, 75, 76], "lack": [10, 11, 15, 40, 56, 58], "fromrecord": [10, 11, 15], "obtain": [10, 12, 43, 44, 45, 50, 56, 60, 62, 66, 70, 71, 72, 73, 74, 75, 76], "issu": [10, 37, 45, 58, 59, 74, 75], "lineindex": [10, 75], "amin": [10, 75], "bmin": [10, 75], "cmin": [10, 60, 74, 75], "boundaryshap": [10, 75], "boundarywidth": [10, 75], "boundaryscal": [10, 75], "perfectli": [10, 70, 75, 76], "easi": [10, 57, 59, 68, 72], "later": [10, 40, 56, 62, 65, 70, 73], "thick": [10, 74, 75], "motionindex": [10, 75], "cut": [10, 11, 58, 59, 68, 69, 75], "stack": [10, 12, 14, 15, 35, 71, 72, 73, 75, 77], "fault": [10, 11, 12, 14, 15, 35, 68, 71, 72, 73, 75, 77], "delet": [10, 58, 67, 75], "rcell": [10, 11, 68, 69, 75], "set_shift": [10, 11], "call": [10, 11, 15, 19, 28, 29, 34, 35, 36, 38, 39, 40, 41, 42, 43, 55, 56, 57, 58, 59, 61, 62, 69, 71, 74], "termin": [10, 11, 15, 33, 68, 69, 73], "set_system": 10, "particular": [10, 11, 19, 56, 58, 64, 70, 72, 75], "place": [10, 11, 15, 30, 33, 47, 48, 68, 69, 73, 74], "halfwai": [10, 11, 66, 68, 69, 72, 74, 75], "ucell_prim": [10, 75], "basi": [10, 15, 31, 42, 50, 69, 71, 73, 74, 76], "uvws_prim": [10, 75], "07": [11, 15, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76], "clean": [11, 36], "rcellwidth": [11, 68, 69], "layer": 11, "vacuumwidth": [11, 15, 68, 69], "minwidth": [11, 15, 68, 69], "vacuum": [11, 15, 68, 69], "dft": [11, 15, 24, 35, 42, 47, 55, 68, 69, 75, 77], "computation": [11, 15, 68, 69], "prefer": [11, 15, 58, 60, 68, 69, 75], "keep": [11, 15, 21, 33, 36, 50, 59, 66, 68, 69, 74], "a_mult": [11, 15, 68, 69], "b_mult": [11, 15, 68, 69], "c_mult": [11, 15, 68, 69], "odd": [11, 12, 15, 68, 69], "surfacearea": [11, 68], "built": [11, 19, 35, 36, 37, 52, 55, 58, 59, 62, 66, 69, 73, 74, 77], "unique_shift": 11, "symprec": [11, 44], "trial_image_rang": 11, "return_indic": 11, "oper": [11, 24, 32, 34, 39, 41, 42, 43, 45, 55, 58, 68], "filter": [11, 24, 42, 56, 58, 59, 66], "symmetr": [11, 44, 61, 69, 75], "still": [11, 36, 39, 57, 60, 65, 68, 70, 75], "creation": [11, 35, 72, 77], "energet": 11, "introduc": [11, 69, 70, 72, 73, 75], "present": 11, "precis": [11, 45, 60, 61], "spglib": [11, 35, 44, 54, 55, 77], "equal": [11, 12, 14, 15, 31, 58, 60, 61, 64, 65, 69, 71, 72, 74, 75], "translation": 11, "suffici": 11, "distort": 11, "unique_indic": 11, "a1vect": [12, 14, 15, 69, 71, 73], "a2vect": [12, 14, 15, 69, 71, 73], "a1": [12, 14, 15, 41, 42, 44, 45, 56, 57, 58, 60, 69, 71, 73, 75], "a2": [12, 14, 15, 41, 56, 69, 71, 75], "e_gsf": 12, "delta": [12, 73, 74, 75], "raw": [12, 14, 71], "xvect": [12, 14, 71], "smooth": [12, 14, 71], "rbf": [12, 71], "closest": [12, 68, 71, 74, 75], "e_gsf_line_plot": 12, "num": [12, 66, 71], "\u00e5": [12, 14, 36, 39, 70, 71, 72, 73], "energyperarea_unit": [12, 14, 71, 73], "gsf": [12, 71, 73], "100": [12, 14, 37, 56, 57, 58, 59, 60, 62, 70, 71, 73], "6": [12, 14, 35, 36, 37, 40, 41, 44, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 62, 63, 64, 68, 69, 70, 72, 74, 77], "thing": [12, 14, 38, 58, 59, 70, 71, 72, 75], "etc": [12, 35, 37, 41, 71], "e_gsf_surface_plot": [12, 14, 73], "numx": [12, 14, 71], "numi": [12, 14, 71], "approxim": [12, 14, 71, 75], "pcolormesh": [12, 14, 70, 71], "a12_to_po": [12, 71], "a12_to_xi": [12, 71], "build_path": [12, 71], "npoint": 12, "31": [12, 39, 56, 57, 58, 60, 61, 62, 66, 69, 75], "ism": [12, 28, 64], "gradientfxn": [12, 28, 29, 30], "cdiff": [12, 14, 28, 29, 30, 64], "gradientkwarg": [12, 28, 29, 30], "integratorfxn": [12, 28, 29, 30], "rk": [12, 28, 29, 30, 64], "basepath": [12, 28, 30, 77], "segment": [12, 64], "properli": [12, 39, 58, 61, 75], "2x3": 12, "relax": [12, 24, 28, 29, 30, 42, 43, 55, 57, 59, 69, 71, 72, 73, 75], "improv": [12, 28, 30, 59, 70, 72, 74], "gradient": [12, 14, 28, 29, 64, 73], "central_differ": [12, 28, 64], "7": [12, 35, 36, 37, 40, 41, 47, 48, 49, 50, 52, 56, 57, 59, 62, 63, 64, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77], "integr": [12, 28, 29, 31, 52, 58, 62, 64, 70, 74], "rungekutta": [12, 28, 64], "dictat": 12, "ismpath": [12, 28, 77], "delta_line_plot": 12, "delta_surface_plot": 12, "mj": [12, 36, 71, 73], "extract": [12, 36, 50, 59, 71], "report": [12, 14, 21, 29, 59, 71], "pos_to_a12": [12, 71], "pos_to_xi": [12, 71], "thu": [12, 14, 71, 74, 75], "xy_to_a12": [12, 71], "xy_to_po": [12, 71], "k_tensor": [13, 14, 17, 18, 70], "coeffici": [13, 14, 17, 18, 58, 70, 73], "equat": [13, 70, 73, 74], "deriv": [13, 14, 28, 36, 58, 64, 70], "\u03f5_ij": [13, 17, 70], "s_ijkl": 13, "\u03c3_kl": 13, "stress": [13, 14, 17, 18, 36, 38, 40, 46, 47, 49, 51, 52, 53, 54, 70, 75, 76, 77], "tau": [14, 73], "cutofflongrang": [14, 73], "fullstress": [14, 73], "cdiffelast": [14, 73], "cdiffsurfac": [14, 73], "cdiffstress": [14, 73], "min_method": [14, 73], "powel": [14, 73], "min_kwarg": 14, "min_opt": [14, 73], "semidiscret": [14, 35, 76, 77], "variat": [14, 35, 70, 76, 77], "fmt": [14, 71], "ro": 14, "marker": [14, 63], "red": 14, "solid": 14, "user": [14, 24, 33, 35, 43, 52, 53, 54, 56, 57, 58, 60, 70, 72, 74, 75], "modif": [14, 29, 69, 75], "e_gsf_vs_x_plot": [14, 73], "misfit": [14, 75], "nonloc": 14, "central": [14, 64, 73], "check_energi": [14, 73], "energyperlength_unit": 14, "print": [14, 24, 30, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76], "summari": 14, "disldens": 14, "numer": [14, 34, 36, 54, 58, 62, 66, 70, 74], "\u03c1": 14, "newx": 14, "rho": 14, "disregistry_plot": [14, 73], "elastic_energi": [14, 73], "short": [14, 72], "e_elast": 14, "4\u03c0": 14, "\u03c3_i": 14, "\u03c7": 14, "\u03b4x": 14, "k_lm": 14, "\u03c1_l": 14, "\u03c1_m": 14, "\u03b4x\u00b2": 14, "\u03c8": 14, "\u00b2": 14, "ln": [14, 17, 18, 70, 73], "semi": 14, "discret": [14, 73, 74], "longrange_energi": [14, 73], "e_longrang": 14, "2\u03c0": [14, 36], "b_l": [14, 70, 73], "b_m": [14, 70, 73], "l": [14, 17, 36, 58, 68, 70, 73, 75], "scipi": [14, 35, 70, 73], "optim": [14, 40, 73], "minim": [14, 21, 22, 29, 59, 60, 72, 75], "misfit_energi": [14, 73], "e_misfit": 14, "\u03c3": 14, "\u03b3": 14, "pressure_unit": [14, 73], "gpa": [14, 36, 40, 60, 61, 66, 70, 73, 75], "include_gamma": [14, 73], "nonlocal_energi": [14, 73], "e_nonloc": 14, "\u03c3_m": 14, "\u03b1_m": 14, "re": [14, 60], "optimizeresult": 14, "previou": [14, 38, 39, 50, 59, 68, 73, 76], "yy": [14, 73], "matter": [14, 73, 75], "stress_energi": [14, 73], "due": [14, 56, 58, 63, 69, 70, 73, 74, 75], "kaxira": 14, "e_stress": 14, "\u03c4_2l": 14, "shen": 14, "cheng": 14, "1016": [14, 48, 60, 62], "scriptamat": 14, "2009": [14, 58], "04": [14, 66, 72, 74], "047": 14, "\u03b4_l": 14, "incorrect": [14, 58], "overal": [14, 59], "similar": [14, 40, 55, 58, 66, 69, 74], "forc": [14, 29, 60, 64, 70, 75], "surface_energi": [14, 73], "e_surfac": 14, "\u03b2_lj": 14, "total_energi": [14, 73], "e_tot": 14, "a1vect_uvw": [15, 69], "a2vect_uvw": [15, 69], "a1vect_cart": [15, 69], "a2vect_cart": [15, 69], "abovefault": [15, 69], "outofplan": [15, 69], "faultshift": [15, 69], "minimum_r": [15, 69], "faultpos_cart": [15, 69], "faultpos_rel": [15, 69], "closer": [15, 69, 73, 75], "increas": [15, 68, 69, 70, 71, 73, 75], "adjust": [15, 19, 39, 64, 69, 73, 75], "wish": [15, 70, 73], "overrid": [15, 58], "stacking_fault": 15, "iterfaultmap": 15, "num_a1": [15, 69], "num_a2": [15, 69], "baseneighbor": [16, 74], "angularveloc": [16, 74], "angular": [16, 74], "veloc": [16, 50, 59, 60, 74], "asdict": 16, "old": [16, 24, 38, 39, 41, 42, 43, 58, 72, 74], "invariant1": [16, 74], "invariant2": [16, 74], "invariant3": [16, 74], "build_p_vector": 16, "clear_properti": 16, "clear": 16, "recomput": 16, "invari": [16, 74, 75], "save_to_system": [16, 74], "set_p_vector": 16, "solve_g": 16, "solve_ny": 16, "eshelbi": [17, 70], "anisotrop": [17, 73], "crack": 17, "eigenvector": [17, 70], "u_i": [17, 70, 72, 73], "\u03c3_a": 17, "k_a": 17, "a_ai": 17, "l_aj": 17, "burgers_j": 17, "\u03b7_a": 17, "eta": [17, 70], "x_i": [17, 70], "m_i": [17, 70, 71], "p_a": 17, "x_j": [17, 70], "n_j": [17, 70], "eigenvalu": [17, 70], "mpn_ai": 17, "a_aj": 17, "mpn_aj": 17, "l_am": 17, "burgers_m": 17, "\u03c3_ij": [17, 70], "c_ijkl": 17, "mpn_al": 17, "a_ak": 17, "k_coeff": [18, 70, 75], "characterangl": [18, 70, 75], "radian": [18, 33, 66], "preln": [18, 70], "handl": [18, 21, 36, 38, 39, 40, 55, 58, 59, 61, 66, 68, 75], "AND": 18, "NOT": [18, 58], "verifi": [18, 74], "log": [19, 22, 35, 60, 70, 77], "neblog": 19, "lammpserror": [19, 59], "checkvers": 19, "lammps_command": [19, 59], "date": [19, 21, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76], "execut": [19, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76], "version_info": 19, "datetim": [19, 21, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76], "arbitrari": [19, 71, 73, 75], "As": [19, 36, 39, 40, 41, 47, 49, 50, 52, 56, 62, 63, 68, 69, 71, 72, 73, 74, 75], "script_nam": [19, 59], "script": [19, 50, 77], "mpi_command": [19, 59], "restart_script_nam": [19, 59], "restart_script": [19, 59], "logfil": [19, 59], "suffix": [19, 59], "output": [19, 21, 49, 55, 59, 60, 64, 73], "inlin": [19, 59, 60, 63, 70, 71, 72, 73, 74, 75, 76], "san": [19, 59], "mpi": [19, 59], "restart": [19, 73, 77], "alreadi": [19, 56, 59, 61, 62, 63, 73, 74], "write": [19, 40, 46, 47, 48, 49, 50, 51, 58, 59, 66], "acceler": [19, 59], "avail": [19, 35, 48, 57, 58, 59, 61, 66], "process": [19, 64, 73, 75], "captur": [19, 40, 46, 47, 59, 61, 73, 74], "timestep": [19, 28, 29, 30, 51, 59, 60, 64], "metal": [19, 50, 51, 58, 59, 60], "physic": [19, 60], "quantiti": [19, 60], "pot_dir": [19, 58], "kim_id": [19, 58], "potkei": [19, 58], "potid": 19, "symbolset": 19, "basepotentiallammp": 19, "switch": [19, 45, 75], "potentiallammp": [19, 58], "potentiallammpskim": [19, 58], "kim": [19, 58], "directori": [19, 22, 24, 55, 59, 60], "artifact": [19, 58], "assum": [19, 22, 34, 40, 50, 53, 58, 70, 73, 74], "newest": [19, 58], "known": [19, 24, 42, 56, 58], "import": [19, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76], "entri": [19, 24, 40, 41, 42, 43, 56, 58, 60], "python": [20, 25, 26, 27, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76], "log_info": 21, "flatten": [21, 36, 40, 70, 77], "last": [21, 22, 28, 38, 50, 59, 67, 75], "firstindex": [21, 59], "lastindex": [21, 59], "earliest": [21, 59], "latest": [21, 35, 59], "lead": [21, 33, 37, 59, 71, 74], "merg": [21, 59], "trail": [21, 33, 59], "condens": 21, "thermo": [21, 59, 77], "lammps_dat": [21, 59], "lammps_vers": [21, 59], "append": [21, 40, 70, 71], "pars": [21, 24, 33, 34, 42, 56, 58, 59], "overwrit": [21, 24, 59], "separ": [21, 40, 58, 59, 62, 63, 67, 72, 73, 74], "action": [21, 38, 60], "replicalog": 22, "rootdir": 22, "climbrun": 22, "neb": 22, "barrier": [22, 64, 73, 75], "climb": [22, 29, 30, 64], "get_barri": 22, "revers": [22, 31, 45, 64], "forward": [22, 28, 29, 30, 64], "replica": [22, 50, 62, 69, 75], "get_neb_path": 22, "reaction": 22, "reaction_coordin": 22, "potential_energi": 22, "primari": [22, 40, 74, 75], "wildcard": 22, "root": [22, 40, 58, 70], "minrun": 22, "nreplica": 22, "crystalprototyp": [23, 24, 42], "relaxedcryst": 23, "referencecryst": 23, "remot": [24, 41, 42, 43, 56, 58, 60], "localpath": [24, 41, 42], "local_nam": [24, 56], "local_databas": [24, 57], "local_styl": 24, "local_host": 24, "local_term": 24, "remote_nam": 24, "remote_databas": 24, "remote_styl": 24, "remote_host": 24, "remote_term": 24, "kim_model": [24, 58], "kim_api_directori": [24, 58], "kim_models_fil": [24, 58], "child": [24, 63, 69], "interact": [24, 38, 39, 56, 58, 60, 65, 70, 73, 75], "download_al": 24, "statu": [24, 58], "downloadfil": 24, "verbos": [24, 30, 41, 42, 43, 56, 58, 64], "download": [24, 35, 58, 60], "relat": [24, 39, 58, 60, 63, 64, 68, 73, 74, 76], "locat": [24, 37, 58, 63, 64, 69, 72], "potential_lammp": [24, 60, 77], "activ": [24, 58, 75], "supersed": [24, 58], "retract": [24, 58], "messag": [24, 41, 42, 43, 58, 77], "download_crystal_prototyp": 24, "commonnam": [24, 41, 56], "pearson": [24, 41, 56], "strukturbericht": [24, 41, 56], "sg_number": [24, 41, 56], "sg_hm": [24, 41, 56], "sg_schoenfli": [24, 41, 56], "crystalfamili": [24, 56], "return_record": 24, "comm": [24, 41, 56, 59], "uuid4": [24, 41, 42, 56, 58], "random": [24, 34, 36, 37, 38, 39, 41, 42, 56, 61, 66], "common": [24, 36, 41, 52, 55, 56, 57, 58, 67, 73, 74, 75, 77], "group": [24, 41, 45, 54, 55, 56, 57, 61, 70], "hermann": [24, 41, 56], "maguin": [24, 41, 56], "schoenfli": [24, 41, 56], "download_reference_cryst": 24, "sourcenam": [24, 56], "sourcelink": [24, 56], "letter": [24, 56], "sourc": [24, 56, 58], "mp": [24, 36, 42, 43, 56], "mvc": [24, 56], "oqmd": [24, 42, 43, 55, 56], "follow": [24, 36, 37, 39, 50, 56, 59, 61, 64, 65, 66, 69, 71, 72, 73, 74, 75], "materi": [24, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76], "open": [24, 33, 40, 48, 50, 56, 60, 62, 63, 66, 71, 73], "quantum": [24, 56], "web": [24, 56], "link": [24, 55, 56, 64], "alphabet": [24, 56], "download_relaxed_cryst": 24, "stand": [24, 42, 56, 66], "parent_kei": [24, 42, 56], "potential_lammps_id": [24, 42, 56, 57], "potential_lammps_kei": [24, 42, 56], "potential_id": [24, 42, 56], "potential_kei": [24, 42, 56], "citat": 24, "dynam": [24, 42, 56, 58, 60, 75], "good": [24, 42, 56, 69, 70, 72, 74, 75, 76], "rigor": [24, 42, 56], "bad": [24, 42, 56, 58], "usual": [24, 42, 56, 58, 69, 75], "implement": [24, 33, 36, 42, 56, 58, 66, 73], "fetch_mp_cryst": 24, "api_kei": [24, 43, 56], "api": [24, 43, 56, 58], "mapi_kei": [24, 43], "environ": [24, 43, 52, 57, 72, 74], "variabl": [24, 33, 43, 58, 60, 61, 66, 73], "fetch_oqmd_cryst": 24, "prefix": [24, 58], "fetch_reference_cryst": 24, "refresh_cach": [24, 41, 42, 43], "tag": [24, 43, 47, 52, 53, 58], "metadata": [24, 41, 42, 43], "cach": [24, 41, 42, 43], "refresh": [24, 41, 42, 43], "regener": [24, 41, 42, 43, 62], "yabadaba": 24, "get_crystal_prototyp": 24, "return_df": [24, 56, 58], "get_reference_cryst": 24, "get_relaxed_cryst": 24, "retrieve_crystal_prototyp": 24, "dest": 24, "indent": [24, 36, 40, 61], "parent": [24, 56, 58], "tier": 24, "compact": [24, 70, 72, 75], "discov": 24, "retrieve_reference_cryst": 24, "retrieve_relaxed_cryst": 24, "alia": [25, 26, 27], "modul": [25, 26, 27, 35, 36, 64], "packag": [25, 26, 27, 35, 36, 48, 50, 52, 53, 54, 55, 56, 57, 58, 71, 76], "py": [25, 26, 27, 62, 71], "create_path": 28, "energyfxn": [28, 29, 30, 64], "callabl": [28, 29, 30], "empti": [28, 38, 39, 64, 74], "fxn": 28, "ten": [28, 39], "euler": [28, 64], "ratefxn": [28, 64], "od": 28, "rate": [28, 64, 75], "rung": [28, 64], "kutta": [28, 64], "arccoord": [29, 30, 64], "arc": [29, 30, 64], "grad_energi": [29, 64], "plot_energi": [29, 64], "further": [29, 58, 69, 72, 73], "plot_forc": [29, 64], "force_unit": [29, 64], "until": [29, 30, 64, 73, 75], "drop": [29, 30, 64], "reach": [29, 30, 64], "newpath": [29, 30, 64], "evolv": [29, 30, 64], "unittang": [29, 30, 64], "tangent": [29, 30, 64], "default_timestep": [30, 64], "default_toler": [30, 64], "interpolate_path": 30, "spline": [30, 64], "intermedi": [30, 64, 69, 71], "relaxstep": [30, 64], "climbstep": [30, 64], "climbpoint": [30, 64], "subject": [30, 64, 75], "refin": [30, 64, 73], "statement": [30, 35, 60, 64], "about": [30, 36, 40, 54, 56, 58, 64, 74, 75, 76], "climbindex": [30, 64], "get_prop_valu": 31, "prop_index": [31, 74], "prop_magnitud": 31, "manag": [31, 58, 66], "variou": [31, 61, 70, 71, 72, 73, 74, 76], "multidimension": [31, 40, 74], "interpolate_contour": [31, 74], "dot": [31, 70, 74], "vzero": 31, "titl": [31, 72, 75], "jet": [31, 71, 72, 74], "propnam": 31, "propindex": 31, "auto": [31, 60], "shown": [31, 57, 72, 73, 74], "aspect": 31, "smaller": [31, 57, 69, 73, 74, 75], "accordingli": 31, "intsum": [31, 74], "avsum": [31, 74], "values_to_hexcolor": 31, "minvalu": 31, "maxvalu": 31, "hex": 31, "center1": [32, 63], "center2": [32, 63], "endcap": [32, 63], "isclos": [32, 45, 70], "antiparallel": 32, "translat": [32, 37, 74, 75], "cartedian": 32, "templat": [32, 33, 58, 63, 66], "geometr": [32, 63, 66, 68, 69, 75], "sphere": [32, 66], "aslist": 33, "treat": [33, 37, 75], "item": [33, 38, 51], "atomic_mass": [33, 50, 66], "atomic_info": 33, "mass_numb": 33, "median": 33, "weight": 33, "isotop": [33, 50, 58, 66], "appear": [33, 45, 57, 58, 60, 67, 72, 73, 75], "radioact": 33, "stabl": [33, 35, 56, 64, 75], "atomic_numb": [33, 66], "atomic_symbol": [33, 66], "indexerror": 33, "axes_check": [33, 74], "becom": [33, 70], "unrecogn": 33, "compositionstr": 33, "count": [33, 63, 66], "site": [33, 44, 45, 48, 53, 56, 57, 69, 71, 75], "occupi": [33, 64], "duplicates_allclos": 33, "__no__default__": 33, "dcol": [33, 66], "fcol": [33, 66], "sub": [33, 58, 66], "diff": [33, 66], "overlap": [33, 66, 75], "label": [33, 58, 66, 71, 72, 75], "occurr": [33, 66], "subsequ": [33, 40, 66, 73], "nrow": [33, 49, 66, 70], "filltempl": 33, "s_delimit": [33, 60, 66], "e_delimit": [33, 60, 66], "delimit": [33, 60, 66], "replac": [33, 46, 58, 72, 73], "keyerror": 33, "iaslist": 33, "indexstr": 33, "istr": [33, 66], "screen_input": 33, "mingw": 33, "uber_open_rmod": 33, "uniform": 33, "mode": 33, "rb": [33, 66], "bytesio": 33, "text": [33, 49, 55, 57, 66, 75], "typeerror": 33, "filenotfounderror": [33, 50], "pathlib": [33, 56, 58, 60, 71, 73], "vect_angl": 33, "vect1": [33, 66], "vect2": [33, 66], "fromstr": [33, 66], "bracket": [33, 60], "exampl": [33, 36, 39, 45, 57, 65, 72, 73, 76, 77], "plane3to4": [33, 66], "bravia": 33, "plane4to3": [33, 66], "h": [33, 36, 46, 48, 58, 68, 75], "vector3to4": [33, 66], "vector4to3": [33, 66], "vector_conventional_to_primit": [33, 45, 66], "t1": [33, 60, 66], "t2": [33, 60, 66], "unknown": [33, 46], "vector_primitive_to_convent": [33, 45, 66], "build_unit": 34, "numericalunit": [34, 36], "global": [34, 75], "error_unit": 34, "set_in_unit": [34, 37, 39, 40, 46, 47, 49, 51, 52, 53, 54, 57, 60, 61, 66, 67, 68, 69, 70, 72, 73, 75, 76], "get_in_unit": [34, 60, 61, 66, 70, 71, 73, 75], "definit": [34, 37, 40, 51, 66], "divis": [34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76], "power": 34, "reset_unit": 34, "just": [34, 56, 63, 64, 66, 69, 72, 73, 75], "si": [34, 36, 39, 56, 58, 66], "charg": [34, 36, 38, 40, 46, 47, 49, 50, 51, 52, 53, 54, 58, 60, 67], "four": [34, 36, 57, 64, 66, 75], "set_liter": 34, "value_unit": 34, "focu": [35, 55, 61, 66, 72], "facilit": 35, "rapid": 35, "design": [35, 38, 40, 52, 55, 58, 63, 64, 74], "develop": [35, 65, 68, 70], "easili": [35, 38, 39, 45, 53, 54, 57, 58, 60, 62, 63, 68, 70, 73, 75], "adapt": 35, "linux": 35, "mac": 35, "window": 35, "featur": [35, 50, 52, 53, 55, 56, 57, 66], "effici": [35, 38, 39, 49, 69], "fast": [35, 74], "million": 35, "freeli": [35, 38, 40, 57], "crystallin": [35, 46, 60, 68, 69, 76], "instantli": 35, "ase": [35, 55, 77], "pymatgen": [35, 43, 55, 77], "poscar": [35, 39, 46, 55, 77], "releas": 35, "pip": 35, "conda": 35, "forg": 35, "recommend": [35, 50, 56, 72, 73, 74, 75], "anaconda": 35, "distribut": 35, "cython": [35, 62, 74], "github": [35, 36, 37, 38, 39, 40, 56, 57, 58, 59, 60, 61, 62, 63, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76], "com": [35, 36, 37, 38, 39, 40, 56, 57, 58, 59, 60, 61, 62, 63, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76], "usnistgov": [35, 36, 37, 38, 39, 40, 56, 57, 58, 59, 60, 61, 62, 63, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76], "lmhale99": 35, "system_model": [35, 55, 77], "cif": [35, 55, 77], "phonopi": [35, 55, 77], "9": [35, 36, 37, 38, 39, 40, 41, 49, 50, 56, 57, 58, 59, 60, 61, 62, 63, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77], "11": [35, 36, 37, 38, 39, 40, 41, 48, 50, 56, 57, 58, 59, 60, 61, 62, 63, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77], "12": [35, 36, 37, 38, 39, 40, 41, 48, 50, 56, 57, 58, 59, 60, 61, 62, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77], "13": [35, 36, 37, 38, 39, 40, 41, 48, 50, 56, 57, 58, 59, 60, 61, 62, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77], "14": [35, 36, 37, 38, 39, 40, 41, 50, 56, 57, 58, 59, 60, 61, 62, 63, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77], "pdb": [35, 55, 77], "basic": [35, 47, 54, 58, 60, 64, 74, 75, 76, 77], "selector": [35, 77], "submodul": [35, 36, 60, 63, 66], "luca": [36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76], "hale": [36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76], "nist": [36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76], "gov": [36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76], "engin": [36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76], "disclaim": [36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76], "manner": [36, 55], "finish": 36, "track": [36, 76], "throughout": 36, "begin": 36, "advantag": [36, 40, 52, 54, 69, 75], "care": [36, 54, 75], "overhead": 36, "disadvantag": 36, "explicit": [36, 71, 74], "although": [36, 45], "implicit": 36, "section": [36, 37, 38, 50, 58, 59, 70, 73, 75, 76], "document": [36, 43, 50, 55, 56, 57, 58, 64, 69, 70, 71], "www": [36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 57, 58, 60, 61, 62, 63, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76], "am": [36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76], "uc": [36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 57, 58, 59, 60, 61, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76], "__version__": [36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76], "notebook": [36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76], "todai": [36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76], "2023": [36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76], "28": [36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76], "namespac": 36, "39": [36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 66, 68, 69, 74, 75], "kg": 36, "cm": [36, 60, 61, 66], "mm": 36, "um": 36, "nm": [36, 37, 40, 50], "pm": [36, 64, 65, 70, 71, 72, 75], "fm": 36, "km": [36, 74], "lightyear": 36, "astro_unit": 36, "pc": 36, "kpc": 36, "mpc": 36, "gpc": 36, "foot": 36, "mile": 36, "thou": 36, "ml": 36, "ul": 36, "nl": 36, "pl": 36, "fl": 36, "al": [36, 41, 42, 44, 45, 56, 57, 58, 60, 61, 66, 69, 71, 72, 73], "kl": [36, 70], "gl": 36, "minut": 36, "hour": 36, "dai": 36, "week": 36, "year": [36, 58], "hz": 36, "mhz": 36, "khz": 36, "ghz": 36, "thz": 36, "phz": 36, "rthz": 36, "rpm": 36, "mg": [36, 41, 56, 68], "ug": 36, "ng": 36, "pg": 36, "fg": 36, "tonn": 36, "amu": 36, "da": 36, "kda": 36, "lbm": 36, "uj": 36, "nj": 36, "pj": 36, "fj": 36, "kj": 36, "gj": 36, "erg": 36, "mev": 36, "kev": 36, "gev": 36, "tev": 36, "btu": 36, "smallcal": 36, "kcal": 36, "wh": 36, "kwh": 36, "na": [36, 58], "mol": [36, 46, 60], "mmol": 36, "umol": 36, "nmol": 36, "pmol": 36, "fmol": 36, "mn": [36, 75], "un": 36, "nn": 36, "pn": 36, "fn": 36, "kn": 36, "gn": 36, "dyn": [36, 61, 66], "lbf": 36, "pa": [36, 60], "hpa": 36, "kpa": 36, "mpa": [36, 40, 46, 47, 49, 51, 52, 53, 54, 60], "bar": [36, 60, 69, 72], "mbar": 36, "cbar": 36, "dbar": 36, "kbar": 36, "atm": 36, "torr": 36, "mtorr": 36, "psi": [36, 73], "mw": 36, "uw": 36, "nw": 36, "pw": 36, "kw": 36, "gw": 36, "tw": 36, "horsepower_imperi": 36, "horsepower_metr": 36, "gal": 36, "mgal": 36, "ugal": 36, "eotvo": 36, "degfinterv": 36, "degcinterv": 36, "mk": 36, "uk": 36, "nk": 36, "pk": 36, "mc": 36, "nc": 36, "ah": [36, 41, 56], "mah": 36, "ma": 36, "ua": 36, "fa": 36, "mv": 36, "uv": 36, "nv": 36, "kv": 36, "gv": 36, "tv": 36, "ohm": 36, "mohm": 36, "kohm": 36, "gohm": 36, "\u03c9": 36, "m\u03c9": 36, "k\u03c9": 36, "g\u03c9": 36, "mt": 36, "ut": 36, "nt": 36, "oe": 36, "wb": 36, "uf": 36, "nf": 36, "pf": 36, "ff": 36, "af": 36, "mh": 36, "uh": 36, "nh": 36, "c0": 36, "mu0": 36, "\u03bc0": 36, "eps0": 36, "\u03b50": 36, "z0": 36, "hplanck": 36, "hbar": 36, "\u0127": 36, "kb": 36, "gnewton": 36, "sigmasb": 36, "\u03c3sb": 36, "alphaf": 36, "\u03b1f": 36, "rga": 36, "ubohr": 36, "unuc": 36, "abohr": 36, "me": [36, 66], "rinf": 36, "ry": 36, "hartre": 36, "arichardson": 36, "phi0": 36, "kjo": 36, "rklitz": 36, "rearth": 36, "g0": 36, "msolar": 36, "mearth": 36, "temperatur": [36, 60], "022140762081123e": 36, "23": [36, 37, 38, 39, 57, 58, 59, 60, 61, 62, 66, 68, 69, 70, 73, 74, 75], "241509074460763e": 36, "18": [36, 37, 38, 39, 41, 56, 57, 58, 60, 61, 62, 66, 67, 68, 69, 71, 72, 73, 74, 75], "98": [36, 60, 62], "22694750253277": 36, "less": [36, 39, 58, 62, 68, 71, 74, 75], "reset": [36, 39, 59, 63], "09999999999999999": 36, "6605390666e": 36, "24": [36, 37, 38, 39, 48, 57, 58, 59, 60, 61, 62, 66, 69, 73, 75], "6021766339999996e": 36, "22": [36, 37, 38, 39, 57, 58, 59, 60, 61, 62, 66, 68, 69, 70, 73, 74, 75], "602176634e": 36, "19": [36, 37, 38, 39, 41, 56, 57, 58, 60, 61, 62, 66, 68, 69, 71, 72, 73, 75], "9999999999999999": 36, "0009999999999999998": 36, "4191243424094714e": 36, "8577039616406894e": 36, "328594872559533e": 36, "26": [36, 38, 39, 57, 58, 60, 61, 62, 66, 69, 75], "6325720115916934e": 36, "17176160943193114": 36, "4191243424094715e": 36, "0017209495513357104": 36, "325847325120542e": 36, "2281474606461375e": 36, "wai": [36, 38, 45, 49, 64, 65, 74, 75], "divid": [36, 62, 64, 68, 69, 71, 72], "1100": [36, 62], "1200": [36, 62], "1300": [36, 62], "2200": 36, "2300": 36, "3300": 36, "messi": 36, "unclear": 36, "easier": [36, 38, 39, 69, 70, 72, 75], "16": [36, 37, 38, 39, 41, 50, 56, 57, 58, 59, 60, 61, 62, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76], "17": [36, 37, 38, 39, 41, 50, 56, 57, 58, 59, 60, 61, 62, 66, 67, 68, 69, 70, 71, 72, 73, 75], "lmodel": 36, "full_docu": 36, "lt": [36, 37, 38, 40, 52, 56, 58, 66], "gt": [36, 37, 38, 39, 40, 52, 57, 58, 59, 60, 61, 66, 67, 70, 71], "40": [36, 39, 57, 58, 60, 62, 63, 66, 69], "30": [36, 39, 57, 58, 60, 62, 63, 66, 69, 70, 72, 73, 75], "50": [36, 39, 57, 60, 62, 72, 74], "tmodel": 36, "34": [36, 37, 38, 39, 40, 57, 58, 59, 60, 61, 62, 66, 69, 70, 75], "smodel": 36, "0000000000002": 36, "2000": [36, 62, 66], "500": [36, 37, 41, 56, 57, 62, 66, 68], "00000000000006": 36, "1400": [36, 62], "lmode": 36, "21": [36, 37, 38, 39, 48, 57, 58, 60, 61, 62, 66, 68, 69, 73, 74, 75], "realist": 36, "look": [36, 41, 42, 43, 56, 70, 72, 75], "nonsens": 36, "xcoordin": 36, "rand": [36, 37, 38, 39, 61, 66], "xcoorderror": 36, "02": [36, 39, 48, 59, 66, 70], "01004403654185057": 36, "020656878915057856": 36, "029214965887450112": 36, "040306012922664336": 36, "04954549658639971": 36, "0019546543962901085": 36, "0019815859329668237": 36, "0019447626366320926": 36, "0019429728156574704": 36, "002085436036518905": 36, "similarli": 36, "04403654": 36, "65687892": 36, "29": [36, 39, 57, 58, 60, 61, 62, 66, 69, 75], "21496589": 36, "30601292": 36, "49": [36, 39, 57, 60, 62], "54549659": 36, "9546544": 36, "98158593": 36, "94476264": 36, "94297282": 36, "08543604": 36, "There": [36, 37, 40, 58, 59, 66, 70, 72, 73, 74, 76], "25": [36, 37, 38, 39, 57, 58, 60, 61, 62, 66, 69, 72, 74, 75], "57": [36, 37, 39, 50, 57, 60, 62, 69], "again": [36, 49, 64, 73], "005775525": 36, "005775524999999999": 36, "111008195072701e": 36, "09": [36, 39, 60, 73], "0033804807501133854": 36, "eight": 37, "corner": [37, 75], "000": [37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 60, 62, 66, 67, 68, 69, 71, 75], "few": [37, 38, 57, 63, 64, 65, 66, 74], "ambigu": [37, 74], "answer": 37, "better": [37, 50, 58, 59, 62, 64, 72, 73, 75], "758": [37, 62], "421": [37, 62], "528": [37, 62], "131": [37, 39, 62], "927": [37, 62], "314": [37, 62], "966": [37, 62], "736": [37, 62], "084": 37, "540": [37, 62], "499": [37, 39, 62], "814": [37, 62], "parenthesi": [37, 58], "300": [37, 50, 62, 75], "770": [37, 62], "612": [37, 62], "42": [37, 39, 57, 58, 60, 62, 69], "112": [37, 62, 71, 72], "conveni": [37, 38, 39, 40, 56, 59, 61, 69, 74, 75, 76], "circ": [37, 75], "ne": [37, 66, 73], "119": [37, 62], "99999999999999": 37, "5599999999999994": 37, "701999259807449": 37, "encod": [37, 38, 40, 73], "utf": [37, 38, 40, 73], "312": [37, 62], "15599999999999994": 37, "27019992598074494": 37, "514": [37, 62], "reload": [37, 38, 39, 40], "560": [37, 62], "702": [37, 62], "140": [37, 62], "adher": 37, "certain": [37, 38, 39, 56, 58, 61, 69, 73, 75], "condtion": 37, "therefor": [37, 39, 40, 46, 47, 56, 65, 68, 69, 70, 72, 75], "incompat": [37, 39, 75], "_region_selector": 37, "html": [37, 60, 66], "55155781": 37, "49380003": 37, "3967093": 37, "3184798": 37, "20799191": 37, "13164885": 37, "01978498": 37, "83706011": 37, "93770814": 37, "28427281": 37, "89576691": 37, "36390599": 37, "13244568": 37, "95582225": 37, "6753787": 37, "82825304": 37, "60954094": 37, "37509114": 37, "72884521": 37, "66389441": 37, "27514523": 37, "71076227": 37, "11630048": 37, "75768688": 37, "48224726": 37, "40686471": 37, "43615747": 37, "19980874": 37, "80016388": 37, "24761004": 37, "48075767": 37, "73926091": 37, "42195919": 37, "61078464": 37, "56715807": 37, "12491481": 37, "72580749": 37, "54518157": 37, "28075216": 37, "18750119": 37, "26711573": 37, "83214076": 37, "90676427": 37, "19921855": 37, "48659655": 37, "98902068": 37, "54456826": 37, "9633501": 37, "12189515": 37, "0876842": 37, "70759034": 37, "96837357": 37, "66878026": 37, "14396448": 37, "64936991": 37, "17531275": 37, "63342089": 37, "50309524": 37, "88621626": 37, "06736169": 37, "51": [37, 39, 57, 60, 61, 62, 66], "70300632": 37, "56375267": 37, "43354935": 37, "relpos2": 37, "255": [37, 38, 62, 66], "565": [37, 62, 67], "035": 37, "immut": 38, "memori": 38, "were": [38, 40, 47, 50, 55, 63, 64], "mind": [38, 64], "infer": [38, 40, 49, 51, 61], "340": [38, 62, 68, 75], "456": [38, 62], "566": [38, 62], "288": [38, 62], "664": [38, 62], "384": [38, 62], "700": [38, 41, 62], "502": [38, 62], "074": 38, "135": [38, 39, 61, 62], "568": [38, 62], "325": [38, 39, 62], "954": [38, 62, 68], "766": [38, 62], "678": [38, 62, 68], "459": [38, 62], "558": [38, 62], "362": [38, 62], "442": [38, 62], "351": [38, 62], "871": [38, 62], "635": [38, 62], "214": [38, 62, 69], "964": [38, 62], "979": [38, 62], "512": [38, 62], "343": [38, 62], "378": [38, 62], "len": [38, 39], "had": [38, 39, 69, 74], "sequenti": [38, 39, 59], "restrict": [38, 74, 75], "myprop": 38, "odict_kei": 38, "almost": 38, "exis": 38, "rule": [38, 58, 74], "340167": 38, "456088": 38, "565809": 38, "288057": 38, "664331": 38, "383810": 38, "700328": 38, "501849": 38, "074171": 38, "134821": 38, "568474": 38, "325068": 38, "954061": 38, "766333": 38, "677579": 38, "458752": 38, "539360": 38, "557528": 38, "362495": 38, "442232": 38, "351053": 38, "870564": 38, "635198": 38, "213705": 38, "963921": 38, "978668": 38, "511691": 38, "254855": 38, "342851": 38, "378351": 38, "doubl": [38, 39, 41, 56, 69, 70], "usag": 38, "loc": [38, 71], "manipul": [38, 71, 77], "subset": [38, 39], "greater": [38, 39, 50, 70, 71, 75], "upperatom": 38, "swap": 38, "offer": [38, 43, 46, 47, 50, 71, 74], "safe": 38, "older": [38, 58, 69, 74], "With": [38, 39, 58, 70, 72, 75], "28805654": 38, "66433097": 38, "3838104": 38, "demonstr": [38, 58, 59, 60, 63, 66, 75, 76], "atoms1": 38, "atoms2": 38, "sete": 38, "atoms3": 38, "deal": 39, "reflect": 39, "sy": 39, "deep": 39, "avoid": [39, 45, 72, 74], "sinc": [39, 40, 62, 72, 73, 75], "reassign": 39, "let": [39, 58], "dc": [39, 41, 56, 66], "00": [39, 46, 47, 56, 57, 58, 66, 67, 68, 69, 74], "75": [39, 60, 61, 62, 70, 75], "431": [39, 62, 66], "716": [39, 62], "358": [39, 62], "073": [39, 69], "afterward": 39, "mismatch": 39, "expand": [39, 57], "ge": 39, "BUT": 39, "alon": [39, 66], "ncaution": 39, "caution": [39, 53, 57, 70], "now": [39, 40, 47, 50, 58, 59, 60, 62, 66, 69, 70, 73, 74, 75], "alias": 39, "mark": [39, 58, 64], "depreci": [39, 66], "favor": [39, 55, 68, 75], "spo": 39, "7155": 39, "35775": 39, "07325": [39, 66], "rememb": 39, "55238446": 39, "defaut": 39, "00000": [39, 48, 49, 66, 76], "71550": 39, "necessari": [39, 45, 57, 69, 74, 75], "held": [39, 72, 75], "fix": [39, 51, 58, 59, 60, 72, 73, 75], "newa": 39, "658": [39, 62], "47993991": 39, "23996995": 39, "71990986": 39, "829": [39, 62], "414": [39, 62], "244": [39, 62], "beyond": 39, "fold": 39, "606": [39, 62], "532": [39, 62], "063": [39, 43], "241": [39, 62], "818": [39, 61, 62], "227": [39, 56, 62], "601": [39, 62], "211": [39, 62], "209": [39, 62], "137": [39, 62], "486": [39, 62], "397": [39, 62], "472": [39, 62], "579": [39, 62], "230": [39, 62], "800": [39, 62], "912": [39, 62], "931": [39, 62], "182": [39, 62], "676": [39, 62], "008": 39, "293": [39, 62], "072": 39, "085": [39, 61], "399": [39, 62], "924": [39, 62], "086": [39, 43, 56], "mix": [39, 70, 72, 75], "help": [39, 45, 49, 50, 61, 66, 69, 72, 73, 74, 75, 76], "916": [39, 62], "987": [39, 62], "134": [39, 62, 69, 75], "632": [39, 62, 68], "776": [39, 62], "045": [39, 71], "956": [39, 62], "260": [39, 62], "252": [39, 62], "942": [39, 62], "219": [39, 62], "3531584111523982": 39, "001997135729699": 39, "9979128041630667": 39, "44": [39, 57, 60, 61, 62, 69, 70], "815705569540626": 39, "31945400541226": 39, "8496247644506445": 39, "353": [39, 62], "998": [39, 62], "761": [39, 62], "594": [39, 62], "253": [39, 62, 68], "795": [39, 62], "339": [39, 62], "126": [39, 62], "1842944304594": 39, "139": [39, 56, 62], "68054599458776": 39, "00000000e": [39, 68, 69, 70, 74], "10291284e": 39, "22044605e": [39, 69], "vanadium": 39, "alat": [39, 40, 42, 46, 47, 49, 51, 52, 53, 54, 60, 67, 72, 74, 75], "03": [39, 66, 72, 74], "030": [39, 60], "515": [39, 62, 67], "a_uvw": [39, 66], "b_uvw": [39, 66], "c_uvw": [39, 66], "422": [39, 62], "248": [39, 62], "285": [39, 62], "185": [39, 62, 68], "875": [39, 62, 69], "143": [39, 62], "474": [39, 62], "711": [39, 62], "624": [39, 62], "948": [39, 62], "749": [39, 62], "373": [39, 62], "237": [39, 62], "08248290e": 39, "16496581e": 39, "77350269e": 39, "07106781e": [39, 68], "45142073e": 39, "supercel": [39, 44, 57, 60, 62, 67, 68, 76], "neg": [39, 64, 75], "2x2x2": [39, 57, 66, 67, 76], "start": [39, 40, 45, 58, 59, 60, 64, 70, 71, 73, 75], "844": [39, 62], "496": [39, 62, 69], "570": [39, 62], "96": [39, 60, 62, 66], "622": [39, 62], "872": [39, 62], "747": [39, 62], "123": [39, 56, 62], "997": [39, 62], "607": [39, 62], "896": [39, 62, 71], "133": [39, 62], "370": [39, 62], "659": [39, 62], "32": [39, 57, 58, 60, 62, 66, 69, 75], "33": [39, 57, 58, 60, 61, 62, 66, 69, 70, 73, 74, 75], "35": [39, 52, 57, 58, 60, 61, 62, 69, 75], "36": [39, 48, 56, 57, 58, 60, 61, 62, 69, 75], "37": [39, 57, 58, 60, 62, 69, 75], "38": [39, 57, 58, 60, 62, 69, 75], "41": [39, 57, 58, 60, 61, 62, 69], "43": [39, 57, 58, 60, 61, 62, 69], "45": [39, 57, 60, 61, 62, 69, 75], "46": [39, 57, 60, 62, 69, 73, 75], "47": [39, 57, 60, 62, 69], "48": [39, 57, 60, 61, 62, 69], "52": [39, 57, 58, 59, 60, 62], "54": [39, 48, 57, 60, 62], "55": [39, 50, 57, 58, 60, 61, 62, 66], "56": [39, 57, 60, 62], "58": [39, 50, 57, 58, 59, 60, 62], "60": [39, 57, 60, 62, 66, 69, 70, 74, 75], "61": [39, 57, 60, 61, 62], "62": [39, 57, 60, 62], "63": [39, 56, 57, 58, 60, 62], "64": [39, 57, 60, 62, 66], "65": [39, 60, 61, 62], "66": [39, 60, 61, 62, 73], "67": [39, 60, 61, 62], "68": [39, 60, 61, 62], "69": [39, 60, 62], "71": [39, 58, 59, 60, 62], "72": [39, 60, 62], "73": [39, 60, 62], "74": [39, 60, 61, 62, 70], "76": [39, 60, 62], "77": [39, 48, 59, 60, 62], "78": [39, 60, 62], "79": [39, 56, 59, 60, 62, 66], "80": [39, 58, 60, 62, 75], "81": [39, 43, 56, 60, 61, 62], "82": [39, 60, 62], "84": [39, 60, 62], "85": [39, 50, 60, 62, 69], "86": [39, 59, 60, 62, 66], "87": [39, 60, 62, 72], "88": [39, 60, 62], "89": [39, 60, 62], "91": [39, 60, 62], "92": [39, 60, 62], "93": [39, 60, 62], "94": [39, 60, 62], "95": [39, 41, 60, 62], "subatom": 39, "subsystem": 39, "cuurent": 39, "60691552": 39, "87468566": 39, "14253355": 39, "23699232": 39, "24811395": 39, "62405697": 39, "28506709": 39, "02468656": 39, "77528597": 39, "6037319": 39, "42195392": 39, "06": [39, 58, 59, 74], "87217092": 39, "96286087": 39, "04937311": 39, "57013419": 39, "727": [39, 62], "linalg": [39, 70, 72, 75], "norm": [39, 70, 72, 75], "624056973466846": 39, "843907841266057": 39, "496227893867395": 39, "570134187980956": 39, "285067093990478": 39, "184961600527525": 39, "621542236045112": 39, "1425335469952396": 39, "473984640211009": 39, "621542236045114": 39, "881784197001252e": 39, "7109769603165144": 39, "872170920400547": 39, "142533546995239": 39, "947969280422018": 39, "746856578222829": 39, "9479692804220194": 39, "12279960475598": 39, "184961600527524": 39, "9974852625782615": 39, "421953920633027": 39, "2369923201055044": 39, "2369923201055035": 39, "997485262578262": 39, "606915521160554": 39, "895938560844037": 39, "132930880949543": 39, "369923201055046": 39, "369923201055048": 39, "421953920633029": 39, "843907841266056": 39, "658946240738532": 39, "373428289111415": 39, "248113946933698": 39, "624056973466849": 39, "498742631289131": 39, "8746856578222815": 39, "7493713156445647": 39, "2850670939904765": 39, "export": 39, "jupyt": [39, 57, 60, 66, 67, 76], "0000000000000e": [39, 47], "4843907841266e": 39, "0496227893867e": 39, "5701341879810e": 39, "1666666666667e": 39, "3333333333333e": 39, "5000000000000e": 39, "6666666666667e": 39, "8333333333333e": 39, "unfortun": 40, "distinctli": [40, 68], "anymor": 40, "sytem": 40, "tree": 40, "subel": [40, 58], "choic": [40, 50, 68, 69, 70, 72, 74], "o": [40, 50, 57, 58, 59, 62, 63, 66, 70, 71, 72, 74, 75], "dm": 40, "cscl": [40, 41, 46, 47, 49, 51, 52, 53, 54, 56, 67], "cl": [40, 46, 47, 49, 51, 52, 53, 54, 58], "600": [40, 46, 47, 49, 51, 52, 53, 54, 62], "theoret": 40, "implicitli": 40, "explicitli": [40, 49, 50, 51, 58, 65, 74], "model2": 40, "produc": [40, 64, 74, 75], "extens": [40, 57, 60, 67], "separat": 40, "atom_model": 40, "model_json": 40, "system2": [40, 66], "model_system": 40, "what": [40, 45, 58, 69, 70, 72, 75], "collection_model": 40, "under": [40, 59], "system3": 40, "repositori": [41, 42, 43, 55, 56, 58, 60], "IF": [41, 42], "cu": [41, 42, 44, 45, 56, 57, 58, 60, 61, 70, 73, 75], "Or": 41, "a15": [41, 56], "cr3si": [41, 56], "a3": [41, 56], "la": [41, 56], "a4": [41, 56, 66], "a5": [41, 56], "sn": [41, 56], "a6": [41, 56], "bct": [41, 56], "a7": [41, 56], "sc": [41, 56], "b1": [41, 56, 60], "nacl": [41, 56], "rock": [41, 56], "salt": [41, 56], "b2": [41, 56, 60], "b3": [41, 56, 60], "zn": [41, 56], "zinc": [41, 56], "blend": [41, 56], "c1": [41, 56], "caf2": [41, 56], "fluorit": [41, 56], "d0_3": [41, 56], "bif3": [41, 56], "l1_0": [41, 56], "aucu": [41, 56], "l1_2": [41, 56], "aucu3": [41, 56], "l2_1": [41, 56], "alcu2mn": [41, 56], "heusler": [41, 56], "pleas": [41, 42, 58, 71], "250": [41, 56, 62, 70], "750": [41, 56, 62], "strip": 41, "becaus": [41, 47, 50, 58, 75], "050": [41, 42, 45, 57, 60, 75], "025": [41, 42, 45, 57, 60, 75], "ti": 41, "950": [41, 62], "475": [41, 62], "555": [41, 62, 67], "703": [41, 62], "350": [41, 62], "relaxed_cryst": [42, 55, 56], "zope": [42, 57], "r": [42, 56, 57, 58, 60, 65, 70, 71, 75], "mishin": [42, 58, 74], "ecoh": 42, "0500": [42, 60], "3539": 42, "comparison": 43, "predict": [43, 56, 73, 74, 75], "opportun": [43, 52], "propos": 43, "instal": [43, 44, 48, 52, 53, 57, 58, 59, 60, 67], "au": [43, 56, 58], "mp_api_kei": 43, "lmh1": [43, 56, 57], "txt": [43, 56, 62, 66], "dft_refer": [43, 55, 56], "171": [43, 56, 62], "592562": 43, "125": [43, 62, 66], "slightli": [44, 58, 70, 73, 74], "scheme": [44, 64, 74], "3x3x3": [44, 60], "p_ucel": [44, 45, 66], "864": [44, 45, 57, 62, 69, 75], "432": [44, 45, 57, 62, 69, 75], "480": [44, 45, 62, 69, 75], "827": [44, 45, 62, 68, 69, 75], "338": [44, 45, 62, 69, 75], "728": [44, 57, 62, 69], "307": [44, 62, 69, 75], "know": [45, 57, 58, 73, 75], "proper": [45, 50, 51, 58, 68, 69, 75], "primitive_cel": [45, 55], "meant": [45, 58, 65, 72, 75], "invers": 45, "expect": [45, 56, 58, 75], "comprehens": [45, 63], "smallshift": 45, "small": [45, 60, 65, 72, 74], "001": [45, 57, 60], "check_basi": 45, "quick": [45, 57, 60], "turn": [45, 67], "check_famili": 45, "c_ucel": [45, 66], "c_ucell2": 45, "protein": [46, 55], "atomist": [46, 47, 57, 66, 70, 73, 74, 75, 76], "softwar": [46, 47], "lossless": [46, 47], "ignoresymbol": 46, "trick": 46, "pdb_str": 46, "cryst1": 46, "hetatm": 46, "endmdl": 46, "unx": 46, "vasp": [47, 55], "amount": [47, 74], "program": [47, 59, 66], "yet": 47, "coordstyl": 47, "box_scal": 47, "univers": 47, "float_format": [47, 49, 50, 51, 60], "13e": 47, "poscar_str": 47, "mostli": 47, "2000000000000e": 47, "repeat": [47, 75], "200000": [47, 53], "000000": [47, 53, 59, 66, 71], "600000": 47, "poscar_system": 47, "elsewher": [47, 58], "down": [47, 64, 70], "diffpi": 48, "crystallographi": 48, "cod": 48, "net": 48, "2016": [48, 58], "0200": 48, "sat": 48, "feb": 48, "revis": 48, "176429": 48, "url": [48, 58], "svn": 48, "1541266": 48, "public": [48, 58, 60, 73], "domain": 48, "contributor": 48, "data_1541266": 48, "loop_": 48, "_publ_author_nam": 48, "mueller": 48, "_publ_section_titl": 48, "tantalum": 48, "_journal_issu": 48, "_journal_name_ful": 48, "scripta": 48, "metallurgica": 48, "_journal_page_first": 48, "693": [48, 62], "_journal_page_last": 48, "_journal_paper_doi": 48, "0036": 48, "9748": 48, "90141": 48, "_journal_volum": 48, "_journal_year": 48, "1977": [48, 62], "_chemical_formula_sum": 48, "ta": 48, "_chemical_name_systemat": 48, "_space_group_it_numb": 48, "229": [48, 56, 62], "_symmetry_space_group_name_hal": 48, "_symmetry_space_group_name_h": 48, "_cell_angle_alpha": 48, "_cell_angle_beta": 48, "_cell_angle_gamma": 48, "_cell_formula_units_z": 48, "_cell_length_a": 48, "30256": 48, "_cell_length_b": 48, "_cell_length_c": 48, "_cell_volum": 48, "021": [48, 75], "_citation_journal_id_astm": 48, "scrmbu": 48, "_cod_data_source_fil": 48, "mueller_scrmbu_1977_100": 48, "_cod_data_source_block": 48, "ta1": 48, "_cod_original_cell_volum": 48, "0207": 48, "_cod_original_formula_sum": 48, "_cod_database_cod": 48, "_symmetry_equiv_pos_as_xyz": 48, "_atom_site_label": 48, "_atom_site_type_symbol": 48, "_atom_site_fract_x": 48, "_atom_site_fract_i": 48, "_atom_site_fract_z": 48, "_atom_site_occup": 48, "_atom_site_u_iso_or_equiv": 48, "cif_system": 48, "303": [48, 62], "651": [48, 62], "65128": 48, "tabular": [49, 51], "form": [49, 51, 58, 61, 68, 70, 73, 74, 75], "commn": 49, "xyz": 49, "littl": 49, "prop_info": [49, 51], "table_nam": [49, 51], "13f": [49, 50, 51, 60], "return_prop_info": [49, 51], "part": [49, 58, 73, 74], "fp": [49, 71, 73], "5f": 49, "60000": 49, "pinfo": [49, 51], "skiprow": 49, "skip": 49, "usecol": 49, "read_csv": 49, "parser": 49, "varieti": [49, 57, 66], "reproduc": 49, "table_system": 49, "partial": [50, 51, 58, 70, 72, 75], "core": [50, 62, 70, 72, 76], "atoms_prop_info": 50, "velocities_prop_info": 50, "never": [50, 75], "coeff": 50, "pairij": 50, "dihedr": 50, "improp": 50, "ellipsoid": 50, "triangl": [50, 63], "enough": 50, "expert": 50, "lmp": [50, 58, 59, 60], "meaning": 50, "fileformaterror": 50, "fe": [50, 58, 66, 68], "bccfe": 50, "0000000000000": [50, 51], "8665000000000": 50, "845": [50, 62, 66], "4332500000000": 50, "866": [50, 62, 68, 75], "433": [50, 62, 68, 75], "return_pair_info": [50, 60], "neitherunit": 50, "return_info": 50, "unwrap": [50, 75], "read_info": 50, "highli": [50, 58, 72, 74], "nativ": 50, "openkim": 50, "dat": [50, 58, 60], "prepar": 50, "read_data": [50, 58, 60], "we": [50, 57, 59, 60, 68, 69, 70, 75], "ll": [50, 57, 60, 75], "nano": [50, 58], "2866500000000": 50, "1433250000000": 50, "To": [50, 51, 59, 71, 72, 73, 75], "fact": [50, 75], "potential_json_example_1": 50, "nokei": 50, "demo": [50, 58, 59], "eam": 50, "alloi": 50, "pair_coeff": [50, 59, 60], "fedemo": 50, "chosen": [50, 72, 75], "preced": 50, "potential_json_example_2": 50, "overridden": 50, "particularli": 50, "93327443": 50, "cleanup": [50, 59, 60, 62, 66, 71, 73], "atom_id": [51, 60], "lammps_unit": [51, 60], "atom_data": [51, 55, 60, 77], "OF": 51, "pp": 51, "2000000000000": 51, "6000000000000": 51, "atom_dump_system": 51, "phonon": 52, "extern": [52, 58, 59, 73], "return_prop": 52, "aseatom": 52, "behav": [52, 64], "phonopyatom": 52, "200000000000000": 52, "000000000000000": 52, "132": [52, 62], "905452": 52, "500000000000000": 52, "453000": 52, "formula": 53, "cs1": 53, "cl1": 53, "abc": 53, "sp": 53, "reason": [54, 57, 60, 67, 73, 74], "noth": 54, "scaled_posit": 54, "3xn": 54, "load_": 55, "dump_": 55, "exclus": 55, "modular": [55, 64], "depth": [55, 75], "discuss": [55, 73], "centric": 55, "primarili": [55, 64], "atom_dump": [55, 60, 72, 74, 77], "ase_atom": [55, 77], "phonopy_atom": [55, 77], "pymatgen_structur": [55, 77], "spglib_cel": [55, 77], "conventional_to_primit": [55, 77], "primitive_to_convent": [55, 77], "session": 56, "load_lammps_potenti": [56, 60], "investig": [56, 66, 75], "potdb": [56, 57, 58], "master": 56, "speci": 56, "prototypes_df": 56, "23it": 56, "d30980ad": 56, "ae18": 56, "425d": 56, "84cb": 56, "abf08577bdc8": 56, "cf4": 56, "225": [56, 62], "oh": 56, "f4101896": 56, "1e17": 56, "4736": 56, "a4d1": 56, "308b8934e8c": 56, "tungsten": 56, "cp8": 56, "223": [56, 62], "e0126715": 56, "c7db": 56, "4d79": 56, "be80": 56, "707c572bebd6": 56, "bc13827d": 56, "e1e6": 56, "4d70": 56, "8c3a": 56, "59399ad78b0f": 56, "ci2": 56, "154d1a2b": 56, "04da": 56, "4477": 56, "8962": 56, "a0ca0c17c8fc": 56, "hp4": 56, "194": [56, 62], "6_3": 56, "d6h": 56, "4dab7fbb": 56, "108a": 56, "425e": 56, "8adb": 56, "d55de7b1134b": 56, "pack": 56, "hp2": 56, "12654c83": 56, "c153": 56, "4b58": 56, "8805": 56, "f6dce43b7842": 56, "diamond": [56, 66], "cf8": 56, "d": [56, 58, 69, 71, 73, 75], "821526c5": 56, "561e": 56, "4f09": 56, "8a04": 56, "680419dc1495": 56, "white": 56, "tin": 56, "ti4": 56, "141": [56, 61, 62], "4_1": 56, "d4h": 56, "76cbf2c1": 56, "fa86": 56, "41c4": 56, "85ae": 56, "c24f55c9f13a": 56, "ti2": 56, "c1e15cf8": 56, "6998": 56, "40ce": 56, "afbd": 56, "0b1cb6271a1f": 56, "hr6": 56, "166": [56, 61, 62, 66], "d3d": 56, "ceb6d7cc": 56, "b20e": 56, "4878": 56, "8b2b": 56, "1e62185d16af": 56, "cp1": 56, "221": [56, 62], "133ca871": 56, "c927": 56, "4073": 56, "ae46": 56, "b8a27e035f4b": 56, "7398b231": 56, "fd55": 56, "4378": 56, "b6b2": 56, "6607262d3090": 56, "cesium": 56, "chlorid": 56, "cp2": 56, "ce517a32": 56, "6bca": 56, "47d0": 56, "82a2": 56, "2ee48956cff9": 56, "216": [56, 62], "td": 56, "74171ba0": 56, "6605": 56, "4956": 56, "b8d5": 56, "0059672ee7e2": 56, "cf12": 56, "8a2eb4b8": 56, "1302": [56, 62], "46d9": 56, "992d": 56, "4296c227d966": 56, "cf16": 56, "f7b8d5d9": 56, "b0eb": 56, "401a": 56, "9cc3": 56, "038170e3ac1c": 56, "tp2": 56, "942ce385": 56, "85ab": 56, "4cb9": 56, "8adc": 56, "4bdaaf145831": 56, "cp4": 56, "0fb6d590": 56, "5ce5": 56, "4476": 56, "a1bf": 56, "7130f96f2af1": 56, "addition": [56, 57], "greatli": 56, "seem": [56, 73, 74], "unstabl": 56, "veri": [56, 59, 69, 73, 75], "slow": 56, "gold": 56, "fcc_gold": 56, "fcc_gold_df": 56, "sort_valu": 56, "cohesive_energi": 56, "130": [56, 62, 70], "17it": 56, "2012": [56, 58], "norman": 56, "ipr1": [56, 57, 58, 60, 71], "011749": 56, "662467": 56, "117": [56, 62], "068501": 56, "299363": 56, "zhou": [56, 58], "ag": [56, 58], "ipr2": [56, 58], "080053": 56, "930005": 56, "2020": [56, 58], "starikov": 56, "842853": 56, "835714": 56, "210659": 56, "613333": 56, "116": [56, 62], "eam_dynamo_olsson_2010_au__mo_228280943430_000": 56, "080": 56, "040": [56, 68], "ref": 56, "flat": 57, "preliminari": 57, "peak": [57, 74], "py3dmol": [57, 60, 67], "view_3d": [57, 60, 67], "400": [57, 62, 67, 74], "jupyterlab": [57, 60, 67], "javascript": [57, 60, 67], "3dmol": [57, 60, 67], "labextens": [57, 60, 67], "jupyterlab_3dmol": [57, 60, 67], "fcc_poscar": 57, "new_system": 57, "wykoff": 57, "assist": [57, 58, 59], "296": [57, 62, 69], "455": [57, 62, 67], "591": [57, 62, 69], "159": [57, 62, 68, 69], "023": [57, 66], "075": 57, "main": [58, 68], "inherit": 58, "offici": 58, "atom_styl": [58, 59, 60], "status": 58, "previous": 58, "pot_dir_style": 58, "getfiles": 58, "verbose": 58, "archiv": 58, "click": 58, "potential_lammps_kim": 58, "1989": [58, 62], "adam": 58, "ni": 58, "won": 58, "ex": [58, 59], "__name__": [58, 59], "No": [58, 62, 75], "reporitori": 58, "johnson": 58, "wadlei": 58, "eam_dynamo_zhoujohnsonwadley_2004nistretabulation_ni__mo_593762436933_000": 58, "eam_dynamo_zhoujohnsonwadley_2004_ni__mo_110256178378_005": 58, "meta": [58, 64], "coars": 58, "grain": [58, 74], "1985": [58, 62], "foil": 58, "1986": [58, 62], "pd": [58, 66], "pt": 58, "1987": [58, 62], "ackland": 58, "1995": [58, 62], "angelo": 58, "1999": [58, 62], "2002": 58, "bonni": 58, "purja": 58, "pun": 58, "2011": 58, "cr": 58, "mendelev": [58, 71, 73], "zr": [58, 61], "onat": 58, "2015": [58, 60], "co": [58, 65], "wilson": 58, "beland": 58, "samolyuk": 58, "stoller": 58, "zhang": 58, "nb": 58, "2017": 58, "2018": 58, "farka": 58, "pan": 58, "2019": 58, "fischer": 58, "ipr3": 58, "2021": 58, "deluigi": 58, "2022": [58, 59], "tramontina": 58, "lammps_potenti": 58, "lammps_potentials_df": 58, "get_lammps_potenti": 58, "519": [58, 62], "518": [58, 62], "57it": 58, "450": [58, 62], "59it": 58, "548": [58, 62], "poturl": 58, "allsymbol": 58, "062d2ba7": 58, "3903": 58, "40ae": 58, "a772": 58, "daa471d107c6": 58, "301f04ce": 58, "9082": 58, "4542": 58, "8590": 58, "489300cd19e8": 58, "cu_smf7": 58, "ipr": 58, "7685": 58, "stilling": 58, "d085648c": 58, "b3ef": 58, "4be8": 58, "824b": 58, "7093fd22770a": 58, "weber": 58, "edc31ad6": 58, "2b9a": 58, "455c": 58, "9b5f": 58, "e888a672ecbd": 58, "sw": 58, "ip": 58, "5262": 58, "76a265fc": 58, "45ff": 58, "49d7": 58, "8c64": 58, "2044f12402f2": 58, "bask": 58, "daw": 58, "672d54f8": 58, "9f48": 58, "4200": 58, "af56": 58, "8a7378ebbc4a": 58, "ag_u3": 58, "7983": 58, "c5afa7e8": 58, "6b3b": 58, "49cd": 58, "ad1c": 58, "ae3e4329363a": 58, "7a1302d": 58, "59cf": 58, "4efb": 58, "900e": 58, "cad845b68ee5": 58, "c588810a": 58, "b96d": 58, "4871": 58, "bfe2": 58, "cff8a5a7c709": 58, "ffb66faa": 58, "319d": 58, "4556": 58, "8363": 58, "dad3959cd553": 58, "au_u3": 58, "1062": [58, 62], "mo_993644691224": 58, "eam_dynamo_zhoujohnsonwadley_2004nistretabulat": 58, "mo_993644691224_000": 58, "5ea5dd6c": 58, "a901": 58, "4acd": 58, "b036": 58, "9c33a0acd5b0": 58, "1063": [58, 62], "mo_995724792024": 58, "lj_shifted_bernardes_1958lowcutoff_kr__mo_9957": 58, "mo_995724792024_003": 58, "1958": [58, 62], "bernard": 58, "kr": 58, "e62cbc12": 58, "99ba": 58, "469b": 58, "8d4e": 58, "e26ad40cb15a": 58, "1064": [58, 62], "mo_995724792024_004": 58, "1065": [58, 62], "mo_999639780744": 58, "morse_shifted_girifalcoweizer_1959medcutoff_c": 58, "mo_999639780744_004": 58, "1959": [58, 62], "girifalco": 58, "weizer": 58, "8d561d50": 58, "26d9": 58, "43d6": 58, "822a": 58, "e95a4be93436": 58, "1066": [58, 62], "mo_999639780744_003": 58, "1067": [58, 62], "real": [58, 60, 62, 70], "eam_alloy_json": 58, "a45a7731": 58, "d115": 58, "4079": 58, "b6f5": 58, "aa700c5b5c56": 58, "v1": 58, "820738a9": 58, "f556": 58, "468b": 58, "9041": 58, "9d98351ff751": 58, "6934": 58, "981539": 58, "9332": 58, "conceptu": [58, 68], "concept": [58, 64], "erron": 58, "hash": 58, "publish": 58, "mathemat": [58, 72], "perman": 58, "human": 58, "readabl": 58, "author": [58, 73, 74], "uuid": 58, "permament": 58, "superced": 58, "newer": 58, "correctli": [58, 61], "address": 58, "incorrectli": [58, 71], "critic": [58, 64, 73, 75], "parameter": 58, "actual": [58, 69, 71, 72, 73, 74, 75], "particl": [58, 63], "coulumb": 58, "reaxff": 58, "pot_dir_set": 58, "new_potential_fold": 58, "autogener": 58, "ionic": 58, "overlai": [58, 60, 72], "incorpor": 58, "agnost": 58, "fcc_test": 58, "atom_pair_info": 58, "unlink": [58, 60, 71, 73], "own": 58, "pair_style_term": 58, "everi": [58, 64, 70, 72], "command_term": 58, "lj": [58, 59, 73], "paramfil": 58, "eim": 58, "libfil": 58, "sai": [58, 66], "unsupport": 58, "builder": 58, "decidedli": 58, "manual": [58, 69, 72], "custom_eam_potenti": 58, "custom": [58, 59, 60], "107": [58, 60, 62], "8682": 58, "save_lammps_potenti": 58, "classifi": 58, "chemic": 58, "outlin": [58, 59, 64, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76], "symbolslist": 58, "eg": 58, "qeq": 58, "warn": [58, 75], "7102f7ec": 58, "3612": 58, "4665": 58, "ad7": 58, "60de508b5f37": 58, "lj_cut": 58, "ebf17ffa": 58, "a5e7": 58, "41c5": 58, "8e6d": 58, "8e00eb7f5068": 58, "he": 58, "c6623d40": 58, "a3f2": 58, "4b2f": 58, "948a": 58, "3b277f174116": 58, "v2": 58, "5ec2aac4": 58, "3dd4": 58, "4f5c": 58, "afb4": 58, "21749577c038": 58, "polar_off": 58, "ac63aa71": 58, "808c": 58, "47e7": 58, "b80b": 58, "991a50870f35": 58, "9546264a": 58, "06b8": 58, "451a": 58, "9920": 58, "f8a17cc6917b": 58, "cud": 58, "ald": 58, "fed": [58, 71, 74], "7687807f": 58, "6355": 58, "4bef": 58, "bdc3": 58, "dc0dc944e106": 58, "v3": 58, "14226c15": 58, "561c": 58, "44d4": 58, "96ad": 58, "ad51304a3606": 58, "3c437986": 58, "882f": 58, "4e23": 58, "bc39": 58, "6e12dcdba364": 58, "5e92413c": 58, "8542": 58, "49c4": 58, "9608": 58, "b91ea5c12701": 58, "7f013ca0": 58, "0358": 58, "4721": 58, "ba72": 58, "790a074b0fd8": 58, "coul_long": 58, "3b326a65": 58, "5cbe": 58, "4a6c": 58, "862a": 58, "aa7203660b27": 58, "coul": 58, "glob": [59, 60], "plt": [59, 60, 63, 70, 71, 72, 73, 74, 75, 76], "obsolet": 59, "ran": [59, 60], "subprocess": 59, "serial": 59, "100000": [59, 60, 71], "block": [59, 75], "create_box": 59, "create_atom": 59, "5408": 59, "272": [59, 62], "2987532": 59, "thermo_styl": [59, 60], "pe": 59, "temp": [59, 60], "press": [59, 60], "10000": 59, "npt": [59, 60], "aniso": 59, "your": [59, 60], "run_tim": 59, "took": [59, 74], "34271121025085": 59, "processor": 59, "mpich2": 59, "mpiexec": 59, "localonli": 59, "86727571487427": 59, "jun": 59, "poteng": 59, "avg": 59, "varavg": 59, "550000": 59, "908000": 59, "237000": 59, "neigh": 59, "005191": 59, "005289": 59, "005432": 59, "646200": 59, "994800": 59, "372100": 59, "004185": 59, "004318": 59, "004659": 59, "403500": 59, "421800": 59, "441100": 59, "218100": 59, "read_restart": 59, "cool": 59, "happen": [59, 72], "ext": 59, "upon": 59, "iglob": 59, "20000": 59, "md": [59, 75], "earil": 59, "incomplet": 59, "stop": 59, "quasistat": [59, 75], "ekd": 59, "allsim": 59, "repr": [59, 66], "bad_script": 59, "illeg": 59, "nvt": [59, 60], "nph": 59, "src": 59, "fix_nh": 59, "cpp": 59, "158": [59, 62], "capabl": [60, 76], "pot_id": 60, "pascuet": 60, "getfil": 60, "subfold": 60, "meam": 60, "86378": 60, "attrac": 60, "39558": 60, "repul": 60, "09806": 60, "00769": 60, "cmax": [60, 74], "31407": 60, "rc": 60, "delr": 60, "augt1": 60, "elt": 60, "lat": 60, "ielement": 60, "atwt": 60, "b0": 60, "esub": 60, "asub": 60, "t0": 60, "t3": 60, "rozero": 60, "ibar": 60, "9815": 60, "68604": 60, "56205": 60, "39270": 60, "29601": 60, "00047": 60, "05000": 60, "35999": 60, "06859": 60, "54917": 60, "28508": 60, "01041": 60, "hybrid": 60, "pair_info": 60, "ctcm": 60, "fernandez": 60, "jnucmat": 60, "simplic": [60, 75], "complic": [60, 63, 70, 75], "108": [60, 62, 72], "enhanc": 60, "clariti": [60, 70, 74], "system_pair_info": 60, "4f": [60, 72, 74], "0000": [60, 66, 72, 74], "1500": [60, 62], "0250": 60, "0750": 60, "1000": [60, 62, 66, 70, 73], "1250": [60, 62], "97": [60, 62], "99": [60, 62], "101": [60, 62, 75], "102": [60, 62], "103": [60, 62], "104": [60, 62], "105": [60, 62, 73, 75], "106": [60, 62], "torqu": 60, "viscos": 60, "electr": 60, "ang": 60, "mom": 60, "vel": 60, "system_info": 60, "perfor": 60, "twot": 60, "equilibrium": 60, "deltat": 60, "trelax": 60, "prelax": 60, "124352": 60, "mydump": 60, "iso": [60, 70], "lammps_vari": 60, "equilibri": 60, "kelvin": 60, "natom_styl": 60, "nboundari": 60, "nread_data": 60, "nprint": 60, "npair_styl": 60, "npair_coeff": 60, "nmass": 60, "lammps_ex": 60, "pull": [60, 64, 74], "xlabel": [60, 70, 72, 75], "ylabel": [60, 70, 72, 75], "181": [60, 62], "016": 60, "028500": 60, "130898": 60, "030150": 60, "032088": 60, "993179": 60, "012840": 60, "080239": 60, "012001": 60, "006956": 60, "999465": 60, "038286": 60, "025622": 60, "097670": 60, "017704": 60, "050970": 60, "075682": 60, "146698": 60, "086876": 60, "065986": 60, "103102": 60, "077594": 60, "087157": 60, "226753": 60, "058932": 60, "131947": 60, "219079": 60, "121422": 60, "132604": 60, "137379": 60, "054377": 60, "rmdir": 60, "set_printopt": 61, "suppress": 61, "143e12": 61, "619e12": 61, "316e12": 61, "114": [61, 62, 72], "0141": 61, "0316": 61, "0079": 61, "newc": 61, "allclos": 61, "frame": [61, 74], "cdict": 61, "144": [61, 62], "bi2te3": 61, "436": [61, 62], "619": [61, 62], "160": [61, 62, 75], "917": [61, 62], "541": [61, 62], "170000000000016": 61, "762": [61, 62], "249": [61, 62], "176": [61, 62], "124": [61, 62], "232": [61, 62], "k_": [61, 70, 73], "frac": [61, 63, 69, 70, 71, 72, 73, 74, 75], "c_": [61, 68, 70], "s_": [61, 70, 72], "142": [61, 62], "9999999999999": 61, "99999999999994": 61, "mu_": 61, "34000000000001": 61, "611930991477855": 61, "47596549573894": 61, "howev": [61, 74, 75], "cij_with_v": 61, "c_with_v": 61, "c_norm": 61, "898": [61, 62, 71], "9001": 61, "0021": 61, "0018": 61, "0014": 61, "204": [61, 62], "0037": 61, "0005": 61, "0002": 61, "2046": 61, "0019": 61, "0016": [61, 72], "0012": 61, "7951": 61, "0008": 61, "7992": 61, "002": 61, "7966": 61, "203": [61, 62], "8994": 61, "797": [61, 62], "20000000000002": 61, "nice": 62, "interfac": [62, 67, 72, 74, 75, 77], "routin": [62, 68], "super": 62, "ghost": 62, "nearbi": 62, "themselv": [62, 63, 74], "cmult": 62, "faster": [62, 66, 72, 74], "10x10x10": 62, "8665": [62, 75, 76], "665": [62, 67], "202": 62, "222": 62, "224": 62, "29975": [62, 76], "43325": [62, 76], "16625": 62, "23175": 62, "enumer": 62, "break": 62, "199": [62, 69], "1801": 62, "1819": 62, "1981": 62, "220": [62, 67], "183": 62, "1803": 62, "1983": 62, "1805": 62, "206": 62, "226": 62, "187": 62, "1807": 62, "208": 62, "228": 62, "189": 62, "1809": 62, "210": 62, "191": 62, "1811": 62, "1991": 62, "212": 62, "193": 62, "1813": 62, "1993": 62, "234": 62, "195": [62, 68], "1815": 62, "236": 62, "197": 62, "1817": 62, "1997": 62, "218": [62, 68], "238": 62, "48246182": [62, 75], "consum": 62, "180": [62, 69, 75], "1800": 62, "201": 62, "1802": 62, "184": [62, 69], "1804": 62, "205": 62, "186": 62, "1806": 62, "207": 62, "188": 62, "1808": 62, "190": 62, "1810": 62, "192": 62, "1812": 62, "213": 62, "1814": 62, "215": 62, "196": 62, "1816": 62, "217": 62, "198": 62, "1818": 62, "1820": 62, "1821": 62, "1839": 62, "240": [62, 75], "242": 62, "1822": 62, "1823": 62, "1824": 62, "1825": 62, "246": 62, "1826": 62, "1827": 62, "1828": 62, "1829": 62, "1830": 62, "1831": 62, "231": [62, 75], "1832": 62, "1833": 62, "233": 62, "254": 62, "1834": 62, "1835": 62, "235": 62, "256": 62, "1836": 62, "1837": 62, "258": 62, "1838": 62, "239": 62, "1840": 62, "1841": 62, "1859": 62, "262": 62, "1842": 62, "1843": 62, "243": 62, "264": 62, "1844": 62, "1845": 62, "245": 62, "266": 62, "1846": 62, "1847": 62, "247": 62, "268": 62, "1848": 62, "1849": 62, "270": 62, "1850": 62, "1851": 62, "251": 62, "1852": 62, "1853": [62, 68], "274": 62, "1854": 62, "1855": 62, "276": 62, "1856": 62, "1857": 62, "257": 62, "278": 62, "1858": 62, "259": 62, "1860": 62, "1861": 62, "1879": 62, "261": 62, "280": 62, "282": 62, "1862": 62, "1863": 62, "263": 62, "284": 62, "1864": 62, "1865": 62, "265": 62, "286": [62, 69], "1866": 62, "1867": 62, "267": 62, "1868": 62, "1869": 62, "269": 62, "290": 62, "1870": 62, "1871": 62, "271": 62, "292": 62, "1872": 62, "1873": 62, "273": 62, "294": 62, "1874": 62, "1875": 62, "275": 62, "1876": 62, "1877": 62, "277": 62, "298": 62, "1878": 62, "279": 62, "1880": 62, "1881": 62, "1899": 62, "281": 62, "302": 62, "1882": 62, "1883": 62, "283": 62, "304": 62, "1884": 62, "1885": 62, "306": 62, "1886": 62, "1887": 62, "287": 62, "308": 62, "1888": 62, "1889": 62, "109": [62, 66, 68, 72], "289": 62, "310": 62, "1890": 62, "1891": 62, "111": [62, 71, 72, 76], "291": [62, 69], "1892": 62, "1893": 62, "113": [62, 72], "1894": 62, "1895": 62, "115": [62, 68, 75], "295": 62, "316": 62, "1896": 62, "1897": 62, "118": [62, 72], "297": 62, "318": 62, "1898": 62, "299": [62, 68], "1900": 62, "1901": 62, "1919": 62, "121": 62, "122": [62, 70], "320": 62, "322": 62, "1902": 62, "1903": 62, "324": 62, "1904": 62, "1905": 62, "305": 62, "326": 62, "1906": 62, "1907": 62, "127": [62, 71], "128": 62, "328": 62, "1908": 62, "1909": 62, "129": 62, "309": 62, "330": 62, "1910": 62, "1911": 62, "311": 62, "332": 62, "1912": 62, "1913": 62, "313": 62, "334": 62, "1914": 62, "1915": 62, "136": 62, "315": 62, "336": 62, "1916": 62, "1917": 62, "138": 62, "317": 62, "1918": 62, "319": 62, "1920": 62, "1921": 62, "1939": 62, "321": 62, "342": 62, "1922": 62, "1923": 62, "323": 62, "344": 62, "1924": 62, "1925": 62, "145": 62, "146": [62, 68, 69], "346": 62, "1926": 62, "1927": 62, "147": 62, "148": 62, "327": 62, "348": 62, "1928": 62, "1929": 62, "149": 62, "150": [62, 75], "329": 62, "1930": 62, "1931": 62, "151": 62, "152": 62, "331": 62, "352": 62, "1932": 62, "1933": 62, "153": 62, "154": 62, "333": [62, 68], "354": 62, "1934": 62, "1935": 62, "155": 62, "156": 62, "335": [62, 66], "356": [62, 68], "1936": 62, "1937": 62, "157": 62, "337": 62, "1938": 62, "1940": 62, "1941": 62, "161": 62, "162": 62, "341": 62, "360": 62, "1942": 62, "1943": 62, "163": 62, "164": 62, "364": 62, "1944": 62, "1945": 62, "165": [62, 67], "345": 62, "366": 62, "1946": 62, "1947": 62, "167": [62, 66], "168": 62, "347": 62, "368": 62, "1948": 62, "1949": 62, "169": [62, 69, 70], "170": [62, 68, 69, 75], "349": 62, "1950": 62, "1951": 62, "172": 62, "372": 62, "1952": 62, "1953": 62, "173": 62, "174": 62, "374": 62, "1954": 62, "1955": 62, "175": 62, "355": 62, "376": 62, "1956": 62, "1957": 62, "177": 62, "178": 62, "357": 62, "179": 62, "359": 62, "1960": 62, "1961": 62, "1979": 62, "361": 62, "380": 62, "382": 62, "1962": 62, "1963": 62, "363": 62, "1964": 62, "1965": 62, "365": 62, "386": 62, "1966": 62, "1967": 62, "367": 62, "388": 62, "1968": 62, "1969": 62, "369": 62, "390": 62, "1970": 62, "1971": 62, "371": [62, 68], "392": 62, "1972": 62, "1973": 62, "394": 62, "1974": 62, "1975": 62, "375": 62, "396": 62, "1976": 62, "377": 62, "398": 62, "1978": 62, "379": 62, "1980": 62, "381": 62, "1982": 62, "383": 62, "1984": 62, "385": 62, "387": 62, "1988": 62, "389": 62, "1990": 62, "391": 62, "1992": 62, "393": 62, "1994": 62, "395": 62, "1996": 62, "1998": 62, "401": [62, 74], "402": 62, "420": 62, "403": 62, "404": 62, "424": 62, "405": 62, "406": 62, "426": 62, "407": 62, "408": 62, "428": 62, "409": 62, "410": 62, "430": [62, 66], "411": 62, "412": 62, "413": 62, "434": 62, "415": 62, "416": 62, "417": 62, "418": 62, "438": 62, "419": 62, "440": 62, "423": 62, "444": 62, "425": 62, "446": 62, "427": 62, "448": 62, "429": 62, "452": 62, "454": 62, "435": 62, "437": [62, 68], "458": 62, "439": 62, "441": 62, "460": [62, 68], "462": 62, "443": 62, "464": 62, "445": 62, "466": 62, "447": 62, "468": 62, "449": 62, "470": 62, "451": 62, "453": 62, "476": 62, "457": 62, "478": 62, "461": 62, "482": [62, 68, 75], "463": 62, "484": 62, "465": 62, "467": 62, "488": [62, 69], "469": 62, "490": 62, "471": [62, 71], "492": 62, "473": 62, "494": [62, 68], "477": [62, 66], "498": 62, "479": 62, "481": 62, "483": 62, "504": 62, "485": 62, "506": 62, "487": 62, "508": 62, "489": 62, "510": 62, "491": 62, "493": [62, 75], "495": 62, "516": 62, "497": 62, "501": 62, "520": 62, "522": [62, 69], "503": 62, "524": 62, "505": 62, "526": 62, "507": [62, 69], "509": 62, "530": 62, "511": [62, 75], "513": 62, "534": 62, "536": 62, "517": 62, "538": 62, "521": 62, "542": 62, "523": 62, "544": 62, "525": 62, "546": 62, "527": 62, "529": 62, "550": 62, "531": 62, "552": [62, 69], "533": 62, "554": 62, "535": 62, "556": [62, 68], "537": [62, 69], "562": 62, "543": 62, "564": 62, "545": [62, 67], "547": 62, "549": 62, "551": [62, 68], "572": 62, "553": 62, "574": [62, 68], "576": 62, "557": 62, "578": 62, "559": 62, "561": 62, "580": 62, "582": 62, "563": 62, "584": 62, "586": 62, "588": 62, "569": 62, "590": [62, 69], "571": 62, "592": 62, "573": [62, 69], "575": 62, "596": 62, "577": [62, 69], "598": [62, 68], "581": 62, "583": 62, "585": [62, 69], "587": 62, "589": 62, "593": [62, 68], "595": 62, "597": 62, "599": 62, "602": 62, "620": 62, "603": 62, "604": 62, "605": 62, "626": 62, "608": 62, "628": 62, "609": 62, "610": 62, "630": 62, "611": 62, "613": 62, "614": 62, "634": 62, "615": 62, "616": 62, "636": 62, "618": 62, "638": 62, "621": 62, "640": 62, "642": 62, "623": 62, "644": 62, "625": 62, "646": 62, "627": 62, "648": 62, "629": 62, "650": 62, "631": 62, "652": 62, "633": 62, "654": 62, "656": 62, "637": 62, "639": 62, "641": 62, "660": 62, "662": 62, "643": 62, "645": 62, "666": 62, "647": 62, "668": 62, "649": 62, "670": 62, "672": 62, "653": [62, 69, 75], "674": 62, "655": [62, 67, 68, 75], "657": 62, "661": 62, "680": 62, "682": 62, "663": 62, "684": 62, "686": 62, "667": 62, "688": 62, "669": 62, "690": 62, "671": 62, "692": 62, "673": 62, "694": 62, "675": 62, "696": 62, "677": [62, 69, 75], "698": 62, "679": 62, "681": [62, 75], "683": 62, "704": 62, "685": 62, "706": 62, "687": 62, "708": 62, "689": 62, "710": 62, "691": 62, "712": [62, 68], "714": 62, "695": 62, "697": 62, "718": [62, 69], "699": 62, "701": 62, "720": 62, "722": 62, "724": 62, "705": 62, "726": 62, "707": 62, "709": 62, "730": 62, "732": 62, "713": 62, "734": 62, "715": 62, "717": 62, "738": 62, "719": 62, "721": 62, "740": 62, "742": 62, "723": 62, "744": 62, "725": 62, "746": 62, "748": 62, "729": 62, "731": 62, "752": 62, "733": 62, "754": [62, 69], "735": [62, 68], "756": 62, "737": 62, "739": 62, "741": 62, "760": 62, "743": 62, "764": 62, "745": 62, "768": 62, "751": 62, "772": 62, "753": 62, "774": 62, "755": 62, "757": 62, "778": [62, 68], "759": [62, 68], "780": 62, "782": 62, "763": 62, "784": 62, "765": [62, 67], "786": 62, "767": 62, "788": 62, "769": 62, "790": 62, "771": 62, "792": 62, "773": 62, "794": 62, "775": 62, "796": 62, "777": 62, "798": 62, "779": 62, "781": 62, "783": 62, "785": 62, "787": 62, "789": 62, "791": 62, "793": 62, "799": 62, "801": 62, "802": 62, "820": 62, "822": 62, "803": 62, "804": 62, "824": 62, "805": 62, "806": 62, "826": 62, "807": 62, "808": 62, "828": 62, "809": 62, "810": 62, "830": 62, "811": 62, "812": 62, "832": 62, "813": 62, "834": 62, "815": 62, "816": [62, 68], "836": [62, 69], "817": 62, "838": 62, "819": 62, "821": 62, "840": 62, "842": 62, "823": 62, "825": [62, 66], "846": [62, 69], "848": 62, "850": 62, "831": 62, "852": 62, "833": 62, "854": 62, "835": 62, "856": 62, "837": 62, "858": 62, "839": [62, 68], "841": 62, "860": [62, 66, 69], "862": [62, 75], "843": 62, "847": 62, "868": 62, "849": 62, "870": 62, "851": [62, 75], "853": 62, "874": 62, "855": 62, "876": 62, "857": 62, "878": 62, "859": [62, 69], "861": 62, "880": 62, "882": 62, "863": 62, "884": 62, "865": 62, "886": 62, "867": 62, "888": 62, "869": 62, "890": [62, 69], "892": 62, "873": [62, 68], "894": 62, "877": 62, "879": 62, "881": 62, "900": [62, 71], "902": 62, "883": 62, "904": 62, "885": 62, "906": 62, "887": 62, "908": 62, "889": 62, "910": 62, "891": 62, "893": 62, "914": 62, "895": [62, 71], "897": [62, 71], "918": 62, "899": [62, 71], "901": 62, "920": [62, 68], "922": 62, "903": 62, "905": 62, "926": 62, "907": 62, "928": 62, "909": 62, "930": 62, "911": 62, "932": 62, "913": 62, "934": 62, "915": 62, "936": 62, "938": 62, "919": 62, "921": 62, "940": 62, "923": 62, "944": 62, "925": 62, "946": 62, "929": 62, "952": 62, "933": 62, "935": 62, "937": 62, "958": 62, "939": 62, "941": 62, "960": [62, 69, 75], "962": 62, "943": 62, "945": 62, "947": 62, "968": 62, "949": 62, "970": 62, "951": 62, "972": 62, "953": 62, "974": 62, "955": 62, "976": [62, 69], "957": 62, "978": 62, "959": 62, "961": 62, "980": 62, "982": 62, "963": [62, 68], "984": [62, 69], "965": 62, "986": 62, "967": 62, "988": 62, "969": 62, "990": 62, "971": 62, "992": [62, 69], "973": 62, "994": 62, "975": 62, "996": 62, "977": [62, 68], "981": 62, "983": 62, "985": 62, "989": 62, "991": 62, "993": 62, "995": 62, "999": 62, "1001": 62, "1002": 62, "1020": 62, "1022": 62, "1003": 62, "1004": 62, "1024": 62, "1005": 62, "1006": 62, "1026": 62, "1007": 62, "1008": 62, "1028": 62, "1009": 62, "1010": 62, "1030": 62, "1011": 62, "1012": 62, "1032": 62, "1013": 62, "1014": 62, "1034": 62, "1015": 62, "1036": 62, "1017": 62, "1018": 62, "1038": 62, "1019": 62, "1021": 62, "1040": 62, "1042": 62, "1023": 62, "1044": 62, "1025": 62, "1046": 62, "1027": 62, "1048": 62, "1029": 62, "1050": 62, "1031": 62, "1052": 62, "1033": 62, "1054": 62, "1035": 62, "1056": 62, "1037": 62, "1058": 62, "1039": 62, "1041": 62, "1060": 62, "1043": 62, "1045": 62, "1047": 62, "1068": 62, "1049": 62, "1070": 62, "1051": 62, "1072": 62, "1053": 62, "1074": 62, "1055": 62, "1076": 62, "1057": 62, "1078": 62, "1059": 62, "1061": 62, "1082": 62, "1084": 62, "1086": 62, "1088": 62, "1069": 62, "1090": 62, "1071": 62, "1092": 62, "1073": 62, "1094": 62, "1075": 62, "1096": 62, "1077": 62, "1098": 62, "1079": 62, "1081": 62, "1102": 62, "1083": 62, "1104": 62, "1085": 62, "1106": 62, "1087": 62, "1108": 62, "1089": 62, "1110": 62, "1091": 62, "1112": 62, "1093": 62, "1114": 62, "1095": 62, "1116": 62, "1097": 62, "1118": 62, "1099": 62, "1101": 62, "1120": 62, "1122": 62, "1124": 62, "1105": 62, "1126": 62, "1107": 62, "1128": 62, "1109": 62, "1130": 62, "1111": 62, "1132": 62, "1113": 62, "1134": 62, "1115": 62, "1136": 62, "1117": 62, "1138": 62, "1119": 62, "1121": 62, "1140": 62, "1142": 62, "1123": 62, "1144": 62, "1125": 62, "1146": 62, "1127": 62, "1148": 62, "1129": 62, "1150": 62, "1131": 62, "1152": 62, "1133": 62, "1154": 62, "1135": 62, "1156": 62, "1137": 62, "1158": 62, "1139": 62, "1141": 62, "1160": 62, "1162": 62, "1143": 62, "1164": 62, "1145": [62, 71], "1166": 62, "1147": 62, "1168": 62, "1149": 62, "1170": 62, "1151": 62, "1172": 62, "1153": 62, "1174": 62, "1155": 62, "1176": 62, "1157": 62, "1178": 62, "1159": 62, "1161": 62, "1180": 62, "1182": 62, "1163": 62, "1184": 62, "1165": 62, "1186": 62, "1167": 62, "1188": 62, "1169": 62, "1190": 62, "1171": 62, "1192": 62, "1173": 62, "1194": 62, "1175": 62, "1196": 62, "1177": 62, "1198": 62, "1179": 62, "1181": 62, "1183": 62, "1185": 62, "1187": 62, "1189": 62, "1191": 62, "1193": 62, "1195": 62, "1197": 62, "1199": 62, "1201": 62, "1202": 62, "1220": 62, "1222": 62, "1203": 62, "1204": 62, "1224": 62, "1205": 62, "1206": 62, "1226": 62, "1207": 62, "1208": 62, "1228": 62, "1209": 62, "1210": 62, "1230": 62, "1211": 62, "1212": 62, "1232": 62, "1213": 62, "1214": 62, "1234": 62, "1215": 62, "1216": 62, "1236": 62, "1217": 62, "1218": 62, "1238": 62, "1219": 62, "1221": 62, "1240": 62, "1242": 62, "1223": 62, "1244": 62, "1225": 62, "1246": 62, "1227": 62, "1248": 62, "1229": 62, "1231": 62, "1252": 62, "1233": 62, "1254": 62, "1235": 62, "1256": 62, "1237": 62, "1258": 62, "1239": 62, "1241": 62, "1260": 62, "1262": 62, "1243": 62, "1264": 62, "1245": 62, "1266": 62, "1247": 62, "1268": 62, "1249": 62, "1270": 62, "1251": 62, "1272": 62, "1253": 62, "1274": 62, "1255": 62, "1276": 62, "1257": 62, "1278": 62, "1259": 62, "1261": 62, "1280": 62, "1282": 62, "1263": 62, "1284": 62, "1265": 62, "1286": 62, "1267": 62, "1288": 62, "1269": 62, "1290": 62, "1271": 62, "1292": 62, "1273": 62, "1294": 62, "1275": 62, "1296": 62, "1277": 62, "1298": 62, "1279": 62, "1281": 62, "1283": 62, "1304": 62, "1285": 62, "1306": 62, "1287": 62, "1308": 62, "1289": 62, "1310": 62, "1291": 62, "1312": 62, "1293": 62, "1314": 62, "1295": 62, "1316": 62, "1297": 62, "1318": 62, "1299": 62, "1301": 62, "1320": 62, "1322": 62, "1303": 62, "1324": 62, "1305": 62, "1326": 62, "1307": 62, "1328": 62, "1309": 62, "1330": 62, "1311": 62, "1332": 62, "1313": [62, 74], "1334": 62, "1315": 62, "1336": 62, "1317": 62, "1338": 62, "1319": 62, "1321": [62, 74], "1340": 62, "1342": 62, "1323": 62, "1344": 62, "1325": 62, "1346": 62, "1327": 62, "1348": 62, "1329": 62, "1350": 62, "1331": 62, "1352": 62, "1333": 62, "1354": 62, "1335": 62, "1356": 62, "1337": 62, "1358": 62, "1339": 62, "1341": 62, "1360": 62, "1362": 62, "1343": 62, "1364": 62, "1345": 62, "1366": 62, "1347": 62, "1368": 62, "1349": 62, "1370": 62, "1351": 62, "1372": 62, "1353": 62, "1374": 62, "1355": 62, "1376": 62, "1357": 62, "1378": 62, "1359": 62, "1361": 62, "1380": 62, "1382": 62, "1363": 62, "1384": 62, "1365": 62, "1386": 62, "1367": 62, "1388": 62, "1369": 62, "1390": 62, "1371": 62, "1392": 62, "1373": 62, "1394": 62, "1375": 62, "1396": 62, "1377": 62, "1398": 62, "1379": 62, "1381": 62, "1383": 62, "1385": 62, "1387": 62, "1389": 62, "1391": 62, "1393": 62, "1395": 62, "1397": 62, "1399": 62, "1401": 62, "1402": 62, "1420": 62, "1422": 62, "1403": 62, "1404": 62, "1424": 62, "1405": 62, "1406": 62, "1426": 62, "1407": 62, "1408": 62, "1428": 62, "1409": 62, "1410": 62, "1430": 62, "1411": 62, "1412": 62, "1432": 62, "1413": 62, "1414": 62, "1434": 62, "1415": 62, "1416": 62, "1436": 62, "1417": 62, "1418": 62, "1438": 62, "1419": 62, "1421": 62, "1440": 62, "1442": 62, "1423": 62, "1444": 62, "1425": 62, "1446": 62, "1427": 62, "1448": 62, "1429": 62, "1450": 62, "1431": 62, "1452": 62, "1433": 62, "1454": 62, "1435": 62, "1456": 62, "1437": 62, "1458": 62, "1439": 62, "1441": 62, "1460": 62, "1462": 62, "1443": 62, "1464": 62, "1445": 62, "1466": 62, "1447": 62, "1468": 62, "1449": 62, "1470": 62, "1451": 62, "1472": 62, "1453": 62, "1474": 62, "1455": 62, "1476": 62, "1457": 62, "1478": 62, "1459": 62, "1461": 62, "1480": 62, "1482": 62, "1463": 62, "1484": 62, "1465": 62, "1486": 62, "1467": 62, "1488": 62, "1469": 62, "1490": 62, "1471": 62, "1492": 62, "1473": 62, "1494": 62, "1475": 62, "1496": 62, "1477": 62, "1498": 62, "1479": 62, "1481": 62, "1502": 62, "1483": 62, "1504": 62, "1485": 62, "1506": 62, "1487": 62, "1508": 62, "1489": 62, "1510": 62, "1491": 62, "1512": 62, "1493": 62, "1514": 62, "1495": 62, "1516": 62, "1497": 62, "1518": 62, "1499": 62, "1501": 62, "1520": 62, "1522": 62, "1503": 62, "1524": 62, "1505": 62, "1526": 62, "1507": 62, "1528": 62, "1509": 62, "1530": 62, "1511": 62, "1532": 62, "1513": 62, "1534": 62, "1515": 62, "1536": 62, "1517": 62, "1538": 62, "1519": 62, "1521": 62, "1540": 62, "1542": 62, "1523": 62, "1544": 62, "1525": 62, "1546": 62, "1527": 62, "1548": 62, "1529": 62, "1550": 62, "1531": 62, "1552": 62, "1533": 62, "1554": 62, "1535": 62, "1556": 62, "1537": 62, "1558": 62, "1539": 62, "1541": 62, "1560": 62, "1562": 62, "1543": 62, "1564": 62, "1545": 62, "1566": 62, "1547": 62, "1568": 62, "1549": 62, "1570": 62, "1551": 62, "1572": 62, "1553": 62, "1574": 62, "1555": 62, "1576": 62, "1557": 62, "1578": 62, "1559": 62, "1561": 62, "1580": 62, "1582": 62, "1563": 62, "1584": 62, "1565": 62, "1586": 62, "1567": 62, "1588": 62, "1569": 62, "1590": 62, "1571": 62, "1592": 62, "1573": 62, "1594": 62, "1575": 62, "1596": 62, "1577": 62, "1598": 62, "1579": 62, "1581": 62, "1583": 62, "1585": 62, "1587": 62, "1589": 62, "1591": 62, "1593": 62, "1595": 62, "1597": 62, "1599": 62, "1600": 62, "1601": 62, "1602": 62, "1620": 62, "1622": 62, "1603": 62, "1604": 62, "1624": 62, "1605": 62, "1606": 62, "1626": 62, "1607": 62, "1608": 62, "1628": 62, "1609": 62, "1610": 62, "1630": 62, "1611": 62, "1612": 62, "1632": 62, "1613": 62, "1614": 62, "1634": 62, "1615": 62, "1616": 62, "1636": 62, "1617": 62, "1618": 62, "1638": 62, "1619": 62, "1621": 62, "1640": 62, "1642": 62, "1623": 62, "1644": 62, "1625": 62, "1646": 62, "1627": 62, "1648": 62, "1629": 62, "1650": 62, "1631": 62, "1652": 62, "1633": 62, "1654": 62, "1635": 62, "1656": 62, "1637": 62, "1658": 62, "1639": 62, "1641": 62, "1660": 62, "1662": 62, "1643": 62, "1664": 62, "1645": 62, "1666": 62, "1647": 62, "1668": 62, "1649": 62, "1670": 62, "1651": 62, "1672": 62, "1653": 62, "1674": 62, "1655": 62, "1676": 62, "1657": 62, "1678": 62, "1659": 62, "1661": 62, "1680": 62, "1682": 62, "1663": 62, "1684": 62, "1665": 62, "1686": 62, "1667": 62, "1688": 62, "1669": 62, "1690": 62, "1671": 62, "1692": 62, "1673": 62, "1694": 62, "1675": 62, "1696": 62, "1677": 62, "1698": 62, "1679": 62, "1681": 62, "1700": 62, "1702": 62, "1683": 62, "1704": 62, "1685": 62, "1706": 62, "1687": 62, "1708": 62, "1689": 62, "1710": 62, "1691": 62, "1712": 62, "1693": 62, "1714": 62, "1695": 62, "1716": 62, "1697": 62, "1718": 62, "1699": 62, "1701": 62, "1720": 62, "1722": 62, "1703": 62, "1724": 62, "1705": 62, "1726": 62, "1707": 62, "1728": 62, "1709": 62, "1730": 62, "1711": 62, "1732": 62, "1713": 62, "1734": 62, "1715": 62, "1736": 62, "1717": 62, "1738": 62, "1719": 62, "1721": 62, "1740": 62, "1742": 62, "1723": 62, "1744": 62, "1725": 62, "1746": 62, "1727": 62, "1748": 62, "1729": 62, "1750": 62, "1731": 62, "1752": 62, "1733": 62, "1754": 62, "1735": 62, "1756": 62, "1737": 62, "1758": 62, "1739": 62, "1741": 62, "1760": 62, "1762": 62, "1743": 62, "1764": 62, "1745": 62, "1766": 62, "1747": 62, "1768": 62, "1749": 62, "1770": 62, "1751": 62, "1772": 62, "1753": 62, "1774": 62, "1755": 62, "1776": 62, "1757": 62, "1778": 62, "1759": 62, "1761": 62, "1780": 62, "1782": 62, "1763": 62, "1784": 62, "1765": 62, "1786": 62, "1767": 62, "1788": 62, "1769": 62, "1790": 62, "1771": 62, "1792": 62, "1773": 62, "1794": 62, "1775": 62, "1796": 62, "1777": 62, "1798": 62, "1779": 62, "1781": 62, "1783": 62, "1785": 62, "1787": 62, "1789": 62, "1791": 62, "1793": 62, "1795": 62, "1797": 62, "1799": 62, "def": [63, 70], "projectionplot": 63, "ax1": [63, 72], "ax2": [63, 72], "ax3": [63, 72], "scatter": [63, 72], "set_xlabel": [63, 70], "set_ylabel": [63, 70], "set_xlim": [63, 72], "set_ylim": [63, 72], "anywher": 63, "isbelow": 63, "numinsid": 63, "32000": 63, "spheric": [63, 75], "cylindr": [63, 70], "cap": 63, "concis": 63, "nanowir": 63, "triangular": 63, "subpackag": 64, "pathwai": [64, 71], "problem": [64, 70, 73, 75], "analog": 64, "moment": 64, "hopefulli": 64, "transit": 64, "accur": 64, "seri": [64, 65], "toward": 64, "commonli": 64, "wit": 64, "newcoord": 64, "higher": [64, 70], "k1": 64, "k2": 64, "k3": 64, "k4": 64, "se": 64, "broken": 64, "interpolate_point": 64, "undergo": 65, "substanti": [65, 73], "come": [65, 71], "phase": [65, 74], "math": 65, "r_": [65, 71, 74], "ij": [65, 70, 73, 74], "ik": 65, "theta_": [65, 74], "ijk": [65, 74], "sampl": [65, 69], "jk": 65, "sqrt": [65, 74], "nbsphinx": 65, "sin": 65, "_": [65, 75], "theta_ijk": 65, "io": 66, "pydata": 66, "silicon": 66, "ioff": 66, "ru": 66, "sva": 66, "nsm": 66, "semicond": 66, "mechan": 66, "66025404": 66, "95297241": 66, "30856205": 66, "87088054": 66, "08419092": 66, "33398788": 66, "25939281": 66, "45266877": 66, "2175116": 66, "86626957": 66, "03701519": 66, "69334927": 66, "91218142": 66, "43455051": 66, "93424363": 66, "33774633": 66, "7465139": 66, "4706471": 66, "09820588": 66, "6163557": 66, "randomli": 66, "99873321e": 66, "97898350e": 66, "77948386e": 66, "90972476e": 66, "77147115e": 66, "55570199e": 66, "58029646e": 66, "84773542e": 66, "36039618e": 66, "95302419e": 66, "70387355e": 66, "39885788e": 66, "94562565e": 66, "30116739e": 66, "56655853e": 66, "09665097e": 66, "71789825e": 66, "78662765e": 66, "36151843e": 66, "78235553e": 66, "98546182e": 66, "53755912e": 66, "25709711e": 66, "92939053e": 66, "67145253e": 66, "21639994e": 66, "78419551e": 66, "50068234e": 66, "89098355e": 66, "98187915e": 66, "22802317e": 66, "65158130e": 66, "51999543e": 66, "32364938e": 66, "67047798e": 66, "18993231e": 66, "14096872e": 66, "38261250e": 66, "03345805e": 66, "20843369e": 66, "20662924e": 66, "49648073e": 66, "63879986e": 66, "55225627e": 66, "41932853e": 66, "37330304e": 66, "83899535e": 66, "47960165e": 66, "59689604e": 66, "24117247e": 66, "53742081e": 66, "34903493e": 66, "28917165e": 66, "14139099e": 66, "04880124e": 66, "50959619e": 66, "52393079e": 66, "84031852e": 66, "27313648e": 66, "00537794e": 66, "06169040e": 66, "38547851e": 66, "15842202e": 66, "91592906e": 66, "63365584e": 66, "38575059e": 66, "50011379e": 66, "25333319e": 66, "52546652e": 66, "24666348e": 66, "02047356e": 66, "63567008e": 66, "03659624e": 66, "05819188e": 66, "46342761e": 66, "90423162e": 66, "67144899e": 66, "54656630e": 66, "16580952e": 66, "85150775e": 66, "58552636e": 66, "02458137e": 66, "50905031e": 66, "81565393e": 66, "24657698e": 66, "46435010e": 66, "98184750e": 66, "44846705e": 66, "93111545e": 66, "68615946e": 66, "58088692e": 66, "11089490e": 66, "25127449e": 66, "64469401e": 66, "56430328e": 66, "12963273e": 66, "19377012e": 66, "37057706e": 66, "51973519e": 66, "44955488e": 66, "40937869e": 66, "38254015e": 66, "15636167e": 66, "43469101e": 66, "17578765e": 66, "13696686e": 66, "78639975e": 66, "80638729e": 66, "47953792e": 66, "48171848e": 66, "13686755e": 66, "47737525e": 66, "76757962e": 66, "93300215e": 66, "87987561e": 66, "28062945e": 66, "05386128e": 66, "27164768e": 66, "59292476e": 66, "43686364e": 66, "03415621e": 66, "62232588e": 66, "42610479e": 66, "32522337e": 66, "44744211e": 66, "09543001e": 66, "26348913e": 66, "16825552e": 66, "40743833e": 66, "22058932e": 66, "75364504e": 66, "87324391e": 66, "45493914e": 66, "60899979e": 66, "36822341e": 66, "19217088e": 66, "83546788e": 66, "36999581e": 66, "34041340e": 66, "92652607e": 66, "99740562e": 66, "50388855e": 66, "41028770e": 66, "87901250e": 66, "87586344e": 66, "66748097e": 66, "96519442e": 66, "75746183e": 66, "66774019e": 66, "70974022e": 66, "22189288e": 66, "12859444e": 66, "08201276e": 66, "23549346e": 66, "03486861e": 66, "00576957e": 66, "03943614e": 66, "58683384e": 66, "77754679e": 66, "09604889e": 66, "16170712e": 66, "90000024e": 66, "87663454e": 66, "47017267e": 66, "33482038e": 66, "15956215e": 66, "68605082e": 66, "64359450e": 66, "37643382e": 66, "84110114e": 66, "35045575e": 66, "02845094e": 66, "31646286e": 66, "06764359e": 66, "89725261e": 66, "68678555e": 66, "39768789e": 66, "47529750e": 66, "40922121e": 66, "47957635e": 66, "38145834e": 66, "89932521e": 66, "20350347e": 66, "09188850e": 66, "37434464e": 66, "46652077e": 66, "11017249e": 66, "96497657e": 66, "10849494e": 66, "30650376e": 66, "52180303e": 66, "89517774e": 66, "coordinataion": 66, "35169198": 66, "awai": 66, "nanostructur": 66, "abovecount": 66, "belowcount": 66, "insidecount": 66, "986891904": 66, "70710678": [66, 70, 75], "madlib": 66, "my": 66, "friend": 66, "realli": 66, "verb": 66, "adject": 66, "charli": 66, "delici": 66, "indici": [66, 75], "context": 66, "fobject": 66, "4216233": 66, "71458726": 66, "9039527": 66, "17034854": 66, "29137372": 66, "94224125": 66, "62681883431212": 66, "1926016174651712": 66, "00001": 66, "00002": 66, "withe": 66, "rescal": 66, "renam": [66, 70], "vectortocartesian": 66, "cross": [66, 72, 75], "product": [66, 75], "randint": 66, "recov": 66, "33333333": [66, 68, 69], "66666667": [66, 68, 69], "17372376": 66, "8660254": 66, "p_box": 66, "466666667": 66, "p_uvw": 66, "miller_str": 66, "criteria": 66, "al2si5": 66, "055": 67, "d_system": 67, "tricki": 68, "successfulli": [68, 73], "challeng": [68, 74], "a_": [68, 70, 71], "b_": 68, "pick": 68, "rot": [68, 75], "mention": [68, 69], "impos": 68, "rigidli": [68, 69], "effect": [68, 73, 74], "plane_hkl": [68, 69], "go": [68, 69], "053": 68, "027": [68, 75], "46536745e": 68, "19640147e": 68, "73839539e": 68, "05313606976129": 68, "01328402": 68, "03985205": 68, "013": 68, "066": 68, "093": 68, "616287975935858": 68, "reli": 68, "latti": 68, "Then": [68, 75], "47122063449069": 68, "shorter": 68, "friendli": [68, 70, 72, 74], "fewer": 68, "808143987967931": 68, "91951691": 68, "29879227": 68, "retriv": 68, "057": 68, "092": 68, "rework": 69, "past": 69, "roughli": [69, 74], "mathbf": [69, 71], "a_1": [69, 71], "a_2": [69, 71], "sf": 69, "015": [69, 75], "72756493e": 69, "57532102e": 69, "29754091e": 69, "86378246e": 69, "96021673e": 69, "seen": [69, 75], "paper": [69, 73, 74, 75], "twice": 69, "78766051e": 69, "14877046e": 69, "43189123e": 69, "48010836e": 69, "Their": 69, "1691343": [69, 75], "50740289": [69, 75], "84567148": [69, 75], "bisect": 69, "surfacesystem": 69, "059": 69, "qualiti": 69, "mask": 69, "029611541307906": 69, "99375715709101": 69, "1d": [69, 76], "faultsystem": 69, "44089210e": 69, "11022302e": 69, "1f": 69, "3f": [69, 70, 75], "10922045e": 69, "57795207e": 69, "41222587e": 69, "bottom": 69, "029611541307904": 69, "39375715709101": 69, "5000000000000001": 69, "apart": 69, "004": 69, "18000000e": 69, "73153518e": 69, "75396078": 69, "studi": [70, 73, 75], "stat": 70, "linregress": 70, "discontinu": [70, 75], "singular": 70, "assumpt": 70, "hold": 70, "decent": [70, 75], "hat": [70, 75], "xi": [70, 72, 73, 75], "x_1": [70, 75], "x_2": [70, 75], "x_3": 70, "analyt": [70, 73], "textbook": 70, "elementari": 70, "weertman": 70, "flip": 70, "u_1": 70, "b_1": 70, "x_1x_2": 70, "u_2": 70, "u_3": 70, "b_3": 70, "tan": 70, "sigma_": 70, "epsilon_": [70, 74], "ijkl": 70, "sure": [70, 74], "ring": 70, "b_i": [70, 72, 73], "b_j": [70, 75], "r_0": 70, "b_k": 70, "fundament": 70, "u_j": [70, 75], "u_k": 70, "x_l": 70, "a_k": 70, "i1k1": 70, "i1k2": 70, "i2k1": 70, "i2k2": 70, "sixth": 70, "polynomi": 70, "p_": [70, 74], "l_i": 70, "l_": 70, "sum_": [70, 71, 72, 73], "eta_": 70, "m_l": 70, "n_l": 70, "n_i": 70, "m_j": 70, "eta_a": 70, "imaginari": 70, "especi": [70, 72, 73], "much": [70, 72, 75], "rough": [70, 73, 75], "54558441": 70, "545584412271571": 70, "57735027": [70, 71, 75], "40824829": [70, 75], "81649658": [70, 75], "isinst": 70, "elif": [70, 75], "74325108e": 70, "48063821j": 70, "55111512e": 70, "39392852j": 70, "92478068e": 70, "92695902e": 70, "01j": 70, "86741173e": 70, "77580274e": 70, "02j": 70, "67206634e": 70, "00j": 70, "55985935e": 70, "47294255e": 70, "89087414e": 70, "27766816e": 70, "31098024e": 70, "16j": 70, "87773573e": 70, "53391120e": 70, "05996344e": 70, "67934295e": 70, "23781767e": 70, "06874267e": 70, "50398047e": 70, "50200901e": 70, "17j": 70, "18890059e": 70, "81790193e": 70, "59422563e": 70, "54039958e": 70, "78792266e": 70, "74127681j": 70, "92248361e": 70, "62818332j": 70, "09648694": 70, "9325418": 70, "62796136": 70, "21693456": 70, "096": 70, "238480": 70, "spacial": 70, "xy_max": 70, "num_xi": 70, "xval": 70, "yval": 70, "linspac": 70, "meshgrid": 70, "disp": [70, 73], "disp_max": 70, "ab": 70, "ncol": [70, 72], "im": [70, 72], "reshap": 70, "vmin": [70, 72], "vmax": [70, 72], "set_titl": [70, 72], "u_": [70, 73], "fontsiz": [70, 71, 72, 75], "stress_max": 70, "strain_max": 70, "fun": 70, "int_": [70, 73], "dr": 70, "self_energy_ev": 70, "outer_r": 70, "inner_r": 70, "gridnum": 70, "inner": 70, "radii": 70, "cost": 70, "e_strain": 70, "xy_val": 70, "delta_xi": 70, "r2": 70, "e_dens": 70, "einsum": 70, "nansum": 70, "bmag": 70, "max_outer_r": 70, "num_r": 70, "ln_term": 70, "slope": 70, "09648693884509": 70, "10133673627291": 70, "influenc": [71, 74, 75], "unfault": 71, "gamma_": 71, "unshift": 71, "unrelax": [71, 72, 73], "lower": 71, "delta_": [71, 74], "bot": 71, "r_i": 71, "symetr": 71, "continu": 71, "multiquadr": 71, "2008": [71, 73], "045259794316263": 71, "30x30": 71, "03333333333333333": 71, "06666666666666667": 71, "13333333333333333": 71, "16666666666666666": 71, "23333333333333334": 71, "26666666666666666": 71, "3333333333333333": 71, "36666666666666664": 71, "43333333333333335": 71, "4666666666666667": 71, "5333333333333333": 71, "5666666666666667": 71, "6333333333333333": 71, "6666666666666666": 71, "7333333333333333": 71, "7666666666666666": 71, "8333333333333334": 71, "8666666666666667": 71, "9333333333333333": 71, "9666666666666667": 71, "0003276644660250489": 71, "0013197032610667036": 71, "0030080286990708206": 71, "005299272889367739": 71, "007853645516566367": 71, "010344679818558007": 71, "012746832373238334": 71, "015027073432287454": 71, "01713303089875586": 71, "018964037324507355": 71, "020359502522962633": 71, "021289405537333824": 71, "021852691822297415": 71, "022145827289685307": 71, "022235037181376597": 71, "0009624286188679017": 71, "0022516168853462543": 71, "004179318519958506": 71, "006502012537909789": 71, "008836360637079085": 71, "011071402674020946": 71, "013163772621198347": 71, "015069987998274524": 71, "01676775797378991": 71, "018202365560353467": 71, "019266421370540104": 71, "01992937325132262": 71, "02028149454107946": 71, "02042805135939521": 71, "02042805137633013": 71, "00379342830708924": 71, "005803543732471961": 71, "00793645979564411": 71, "010002224995159091": 71, "011913305022139525": 71, "013596628277462183": 71, "015034223959459074": 71, "016248082833591557": 71, "017231759917201616": 71, "017942818177434202": 71, "01838247984870989": 71, "018588416437931753": 71, "018643586130194265": 71, "001008906143675133": 71, "007637852288274728": 71, "009496660797274951": 71, "011243532636952849": 71, "012743928196872886": 71, "013936123292691541": 71, "014847319113605083": 71, "015549856853502065": 71, "016082846740739055": 71, "01645862282198508": 71, "016705110082744275": 71, "01682916112649225": 71, "016458622823396964": 71, "012743928195463569": 71, "0023998946753737717": 71, "011035628677366563": 71, "01237392710762056": 71, "013385589574354801": 71, "01404488393495149": 71, "014423942718867563": 71, "014639725692955295": 71, "014765683854799951": 71, "014838711638586797": 71, "014883062600264814": 71, "01489480692722371": 71, "004494424933099573": 71, "004211052927859079": 71, "013222604888781": 71, "013701533360467543": 71, "013831808215880651": 71, "013724810143582959": 71, "01351871945764962": 71, "013288096454131046": 71, "013053141110424394": 71, "01288473799574951": 71, "007090113076005102": 71, "006654577493741669": 71, "013650790504842861": 71, "013297636384243845": 71, "012775745469630308": 71, "01220434858125911": 71, "011633781497279536": 71, "011198475775133013": 71, "011035966519916687": 71, "009791920945171492": 71, "009439135467834685": 71, "009310068611476237": 71, "012529422359386078": 71, "011638354833823921": 71, "01074148627431762": 71, "010038128724558996": 71, "009656642364574372": 71, "012404093212327083": 71, "012183307197516747": 71, "012090801183497172": 71, "010430230660255049": 71, "009449322004070611": 71, "008844617563989746": 71, "00864189871015902": 71, "014934876376596327": 71, "01483061319175465": 71, "014740550396192733": 71, "014701162449128703": 71, "008578811099234605": 71, "00815484933711049": 71, "01732800024220794": 71, "017369215082978437": 71, "017321437948693633": 71, "017272284193973794": 71, "007931982282131142": 71, "019454139208464893": 71, "019694360589358625": 71, "01977827285566793": 71, "01978984714716384": 71, "019786649819980306": 71, "021147064770108075": 71, "021649358382385377": 71, "021934945102187603": 71, "022076143474118026": 71, "022128736159221365": 71, "022370099121114623": 71, "0231503150713325": 71, "02366759427728574": 71, "023980226181548533": 71, "024139292094786883": 71, "02418571534118722": 71, "02317845769263327": 71, "024204824269097428": 71, "024942382102965746": 71, "025433018993558404": 71, "02572289378519483": 71, "02585156812403108": 71, "024204824284620466": 71, "023657583085668364": 71, "02488053126382751": 71, "025800253053947248": 71, "02644560104894149": 71, "026860034602867854": 71, "02708309171483324": 71, "027151657016416905": 71, "026445601050353373": 71, "025800253069470282": 71, "022235037182788485": 71, "023876272100392736": 71, "02525037551288545": 71, "02631760912831916": 71, "027088755361362748": 71, "027603533296746703": 71, "027908712191780646": 71, "028046898021049052": 71, "027088755351484688": 71, "01838247985011921": 71, "02536675249494844": 71, "02655738371046003": 71, "027439093842301504": 71, "028041035722972417": 71, "02841200786241034": 71, "028605543432288737": 71, "028664313998241875": 71, "026557383707638826": 71, "02387627209898085": 71, "026557383711871916": 71, "02754913586481439": 71, "02824061569970574": 71, "028677500498590372": 71, "02892070902513713": 71, "029025523592854756": 71, "029025523585797897": 71, "028677500494354715": 71, "027549135866226274": 71, "027439093839480302": 71, "028240615698293857": 71, "028759317463963645": 71, "02905994257120264": 71, "029210986008471558": 71, "029256067117124782": 71, "029059942572617094": 71, "027439093840892187": 71, "02580025305253536": 71, "028677500488709744": 71, "02905994257402641": 71, "029267261304526674": 71, "029356079089374668": 71, "029356079072439745": 71, "02926726130593856": 71, "02867750049012163": 71, "02935607908796278": 71, "02939912316653883": 71, "029356079090783985": 71, "029256067143937765": 71, "029356079086553463": 71, "029025523584386013": 71, "02686003460710351": 71, "011243532635540964": 71, "02902552359567596": 71, "028677500502820894": 71, "028240615708174484": 71, "028240615692648883": 71, "026557383725983066": 71, "025800253068058398": 71, "005541623615307856": 71, "01943663001532059": 71, "03815843253480722": 71, "0606882120312946": 71, "08851254231706207": 71, "11262352593976033": 71, "13075899586557682": 71, "14592595011600196": 71, "16081955557027783": 71, "17970188538780008": 71, "20295571167149262": 71, "22237239074203075": 71, "23533048963622605": 71, "24255613160673306": 71, "24485152496497165": 71, "24255613160670464": 71, "20295571167145": 71, "1797018853878285": 71, "16081955557027072": 71, "14592595011597354": 71, "13075899586556972": 71, "11262352593979585": 71, "06068821203162145": 71, "038158432534842746": 71, "019436630015356116": 71, "005541623615314961": 71, "01331536400725497": 71, "026866349109880616": 71, "04561181437118478": 71, "07078901159886186": 71, "097001190583768": 71, "11689842506950754": 71, "13270331901448884": 71, "14591871007265667": 71, "15834458933661466": 71, "17380584828498513": 71, "19338513562863824": 71, "2120728816228592": 71, "22341833236870912": 71, "22853662554950915": 71, "2285088882561297": 71, "2234183323688157": 71, "212072881622845": 71, "1933851356287093": 71, "15834458933660756": 71, "1459187100726922": 71, "13270331901449595": 71, "11689842506949333": 71, "0456118143712132": 71, "026866349109866405": 71, "013315364007198127": 71, "019436630015306378": 71, "04005475255581814": 71, "060689274713794816": 71, "0854178570514108": 71, "10542699280703971": 71, "1221348536247433": 71, "13608731348548986": 71, "14743483944548075": 71, "1576976308827085": 71, "1697128415987521": 71, "18368435752065437": 71, "19836540958823434": 71, "2090258538200942": 71, "21233186398202974": 71, "20902585382006578": 71, "19836540958827698": 71, "18368435752063306": 71, "1697128415987592": 71, "15769763088269428": 71, "13608731348551828": 71, "12213485362440224": 71, "10542699280705392": 71, "016933037985893407": 71, "038158432534856956": 71, "04561181437119899": 71, "08120115836113939": 71, "0985535759678342": 71, "1136411208109962": 71, "12704318624997768": 71, "13834820487858224": 71, "1472848113428853": 71, "15479230638712238": 71, "16284388405492933": 71, "17061694797637017": 71, "1780824270538659": 71, "18454289853671924": 71, "18454289853670502": 71, "1706169479749704": 71, "1628438840549009": 71, "15479230638761976": 71, "14728481134284976": 71, "13834820487859645": 71, "12704318624994215": 71, "08120115836112518": 71, "045611814371206094": 71, "03496863398257943": 71, "03496863398256522": 71, "06068821203132302": 71, "11024942418015371": 71, "1209387863482192": 71, "13037694682464007": 71, "13781003362569777": 71, "1430205577629522": 71, "14663063092552875": 71, "14968567222995688": 71, "1508396907782128": 71, "14868200566931478": 71, "14648675448955828": 71, "1496856722299995": 71, "14663063092551454": 71, "13781003362566935": 71, "13037694682461165": 71, "1102494241801466": 71, "09855357596785552": 71, "060688212031408284": 71, "05596552064464788": 71, "05455642334713673": 71, "08851254231704786": 71, "0970011905837822": 71, "11364112081096778": 71, "12704355822202018": 71, "13150759263152167": 71, "13377651899799758": 71, "13351709855599836": 71, "13146397985184421": 71, "12804739193582293": 71, "12174453412077924": 71, "11797663476669129": 71, "1179766347666984": 71, "12174453412078634": 71, "13351709855594152": 71, "13377651899798337": 71, "13150759263147904": 71, "1270435582220628": 71, "1054269928070255": 71, "08851254231706918": 71, "08036626481417386": 71, "07604824987025438": 71, "07604824987024728": 71, "11262352593978164": 71, "1221348536243454": 71, "12704318624995636": 71, "12999248242272898": 71, "12562595829174938": 71, "11823345924230466": 71, "10802295303169274": 71, "09968008144792861": 71, "09656462253290954": 71, "09594391333588703": 71, "1256259582917636": 71, "12999248242270056": 71, "1315075926315643": 71, "13037694682456902": 71, "12704318624994926": 71, "12213485362481435": 71, "10818940005012223": 71, "10241054554438733": 71, "09954551522132249": 71, "1024105455442168": 71, "13781003362571198": 71, "1337765189980047": 71, "12562595829174228": 71, "11331183964553304": 71, "0963336603516467": 71, "08305319680786738": 71, "0782538069812162": 71, "07715372057158731": 71, "07715372057154468": 71, "07825380698126594": 71, "11331183964554015": 71, "1256259582917778": 71, "13377651899797627": 71, "13608731348547565": 71, "1307589958655342": 71, "12996798226794226": 71, "1298695679650237": 71, "13017196439994194": 71, "1298695679650521": 71, "12996798226791384": 71, "14591871007267798": 71, "14743483944548785": 71, "1335170985559131": 71, "07673142302581226": 71, "06662538303910992": 71, "06274130654364285": 71, "061801329041863085": 71, "06274130654362153": 71, "06662538303911703": 71, "0767314230258549": 71, "1430205577629593": 71, "14803652963334457": 71, "1520827241579994": 71, "15680287801059478": 71, "15862805959559978": 71, "1520827241580065": 71, "14803652963333036": 71, "15834458933662887": 71, "1576976308827227": 71, "1547923063876837": 71, "14663063092550033": 71, "06662538303913834": 71, "05714791668831509": 71, "05273872428253412": 71, "057147916688293776": 71, "06662538303912413": 71, "14663063092550743": 71, "15479230638744923": 71, "1608195555702494": 71, "1660858553276796": 71, "1727832363621502": 71, "1773777556823788": 71, "17955776385486644": 71, "17955776385476696": 71, "17737775568241432": 71, "17278323636013226": 71, "16608585532771514": 71, "1797018853878143": 71, "17380584828499934": 71, "1697128415987308": 71, "16284388405490802": 71, "14968567222996398": 71, "07825380698125883": 71, "06274130654362864": 71, "052738724282562544": 71, "04908088528014787": 71, "052738724282527016": 71, "07825380698135831": 71, "1496856722299711": 71, "16284388405492223": 71, "17380584828497803": 71, "17970188538778586": 71, "187787002826461": 71, "1938092073899753": 71, "19748976356095227": 71, "19966471494916505": 71, "20053351038428957": 71, "19748976356096648": 71, "19380920738998242": 71, "18778700282643257": 71, "20295571167143578": 71, "19338513562851034": 71, "18368435752066148": 71, "17061694797610727": 71, "1508396907782199": 71, "12174453412079345": 71, "09656462253289533": 71, "07715372057161574": 71, "06180132904185598": 71, "07715372057162284": 71, "0965646225328669": 71, "12174453412085029": 71, "17061694797490645": 71, "18368435752060464": 71, "19338513562864534": 71, "21056922427537472": 71, "21580737042108922": 71, "21943396764223166": 71, "22183205361282887": 71, "22334916339339372": 71, "22334916339340793": 71, "22183205361267255": 71, "21943396764221745": 71, "19836540958911542": 71, "07715372057155889": 71, "06274130654361443": 71, "05714791668830799": 71, "06274130654365706": 71, "11797663476667708": 71, "19836540958841908": 71, "22237239074201653": 71, "23091343202591474": 71, "23737736077523408": 71, "24222787361999565": 71, "24575740357896336": 71, "2481491165990377": 71, "24908491977633673": 71, "24222787362003828": 71, "2373773607752412": 71, "22341833236872333": 71, "2090258538200871": 71, "18454289853674055": 71, "11797663476671261": 71, "0965646225328527": 71, "0782538069814791": 71, "06662538303914545": 71, "07825380698123752": 71, "09656462253292375": 71, "18454289853671213": 71, "20902585382007288": 71, "23533048963621184": 71, "24645629091583743": 71, "25604565034051063": 71, "2638732773176926": 71, "26973813329233565": 71, "27401119238007254": 71, "2761782139437159": 71, "2761782139437372": 71, "2740111923800441": 71, "2697381332930391": 71, "26387327731774946": 71, "2560437420972903": 71, "24645629091583032": 71, "24255613160671885": 71, "22853662554949494": 71, "21233186398203685": 71, "18454289853673345": 71, "07673142302584068": 71, "14868200566930057": 71, "22853662554940968": 71, "25639450235455996": 71, "26952461106114356": 71, "2812832166459742": 71, "2910621250644141": 71, "2984966838190388": 71, "30295937593618305": 71, "3043517018280042": 71, "30295937593642464": 71, "2984966838189962": 71, "2910621250665457": 71, "2812561927597841": 71, "2563945023546381": 71, "2448515249650356": 71, "22853662554950205": 71, "20902585382008": 71, "150839690778227": 71, "22853662554948073": 71, "24485152496498586": 71, "2611668393311035": 71, "27741840435355414": 71, "2928239257262675": 71, "3066522734923396": 71, "3181877397912416": 71, "3263085075333123": 71, "33015680568130534": 71, "3301568056812414": 71, "3263085075333194": 71, "3181877397904458": 71, "30664319254115924": 71, "2928239257262817": 71, "27741840435358256": 71, "2234183323686949": 71, "19836540958928595": 71, "17061694797501303": 71, "13146397985183": 71, "1496856722299853": 71, "17061694797521199": 71, "19836540958828408": 71, "279973056724387": 71, "2984451507647563": 71, "3158198253127793": 71, "3311766121494486": 71, "34318151446929335": 71, "350310005488808": 71, "35268288499335654": 71, "35031000548877955": 71, "34318151446927914": 71, "3311766121494699": 71, "31581982531142216": 71, "29845062339137485": 71, "27997305672484174": 71, "2611668393310822": 71, "1335170985559344": 71, "1335170985559202": 71, "14663063092553585": 71, "18368435752064016": 71, "27741840435354703": 71, "2984451507677903": 71, "3188109893112312": 71, "3374737327362425": 71, "35293433027231913": 71, "3633130873142605": 71, "36816090908996557": 71, "3681693649139106": 71, "36331308731422496": 71, "35294496236161166": 71, "3374664592610941": 71, "3188109893106059": 71, "2984506233914459": 71, "27741840435357545": 71, "25639450235455286": 71, "19338513562868087": 71, "1697128415987379": 71, "15479230638745634": 71, "12999248242270767": 71, "15479230638710817": 71, "19338513562868798": 71, "2464562909158161": 71, "26952461106113645": 71, "3158198253150317": 71, "3374664592586072": 71, "35610344527064797": 71, "3694666319537703": 71, "3768419601213395": 71, "37915506589962433": 71, "3768419601215811": 71, "36946663195114837": 71, "3561034452706551": 71, "3374731530612394": 71, "3158198253129285": 71, "24645629091585164": 71, "15769763088273692": 71, "14728481134286397": 71, "13781003362568356": 71, "13150759263150746": 71, "14728481134285687": 71, "1576976308827298": 71, "2029557116714784": 71, "25604565034055327": 71, "2812832166455408": 71, "3066522734923325": 71, "3311766121494628": 71, "3529378229744111": 71, "3694666319582183": 71, "3795699586983119": 71, "3842341223084702": 71, "38421655579884373": 71, "3795699587031862": 71, "36946663195582374": 71, "35293782297470244": 71, "331176612149477": 71, "2812832166456758": 71, "23091343202590764": 71, "13834820487861776": 71, "1270435582220557": 71, "13037694682458323": 71, "15834458933662177": 71, "17970188538777876": 71, "23737736077521276": 71, "2638732773176571": 71, "2910645412781463": 71, "3181877397910853": 71, "3633130873140118": 71, "3768419601212898": 71, "3842056278518058": 71, "3865334761953534": 71, "3842056278539445": 71, "37684196012152427": 71, "3633130873143102": 71, "31818773979050263": 71, "2910645412785726": 71, "26387327731774235": 71, "23737736077522698": 71, "2105692242753605": 71, "16081955557026362": 71, "13608731348544723": 71, "1270431862499919": 71, "12093878634820499": 71, "12093878634821209": 71, "12704318624997057": 71, "1608195555702423": 71, "1877870028264681": 71, "21580737042116027": 71, "2422278736200525": 71, "2697381332921367": 71, "29849668381930883": 71, "3263085075330707": 71, "3503100054887369": 71, "36816936491372587": 71, "37911569858842853": 71, "3842341223084631": 71, "38420562785151446": 71, "3791156985882509": 71, "3681693649132285": 71, "35031000548879376": 71, "3263085075332697": 71, "298514806184464": 71, "26973813329156826": 71, "24222787362002407": 71, "2158073704211887": 71, "18778700282645389": 71, "14592595011598775": 71, "12213485362466514": 71, "11364112081101041": 71, "1102494241801395": 71, "12213485362437382": 71, "13270331901448174": 71, "16608585532769382": 71, "19380920739000373": 71, "21943396764222456": 71, "24575740357897047": 71, "27401119238006544": 71, "302959375936112": 71, "33015680568145456": 71, "3526828849933068": 71, "36815601617162486": 71, "37684196012139637": 71, "37956995870125354": 71, "3768419601215669": 71, "36816936491187846": 71, "330156805681284": 71, "3029593759361262": 71, "1660858553276654": 71, "11689842506948622": 71, "10542699280701129": 71, "1054269928070326": 71, "1727832363595354": 71, "19748976356095937": 71, "2481491165990235": 71, "2761782139437088": 71, "3043517018277839": 71, "3301568056813977": 71, "35031000548875113": 71, "3633130873142676": 71, "3694666319579625": 71, "36946663195402607": 71, "3633130873142747": 71, "3503100054888364": 71, "3301568056813693": 71, "30435170182845894": 71, "2218320536127436": 71, "17278323636118387": 71, "11262352593976743": 71, "0812011583611536": 71, "12996798226795647": 71, "22334916339341504": 71, "24908491977631542": 71, "27617821394380115": 71, "3029593759366236": 71, "32630850753324125": 71, "35294496236149087": 71, "35610344527063376": 71, "3529266892192737": 71, "34318151446928624": 71, "3263085075331986": 71, "3029593759362825": 71, "2490849197762941": 71, "12996798226792805": 71, "08851254231707628": 71, "12986956796500237": 71, "15680287801056636": 71, "20053351038428247": 71, "2233491633933795": 71, "2984966838195078": 71, "31818773979040316": 71, "3374568306061221": 71, "3374700402644564": 71, "3181877397905808": 71, "29849668381974226": 71, "22334916339343636": 71, "17955776385478828": 71, "129869567965045": 71, "10818940005011513": 71, "06068821203136565": 71, "04561181437117057": 71, "10241054554465734": 71, "13017196439993484": 71, "15862805959559267": 71, "2218320536125873": 71, "269738133292563": 71, "2910645412784305": 71, "31581982531282904": 71, "31881098931053486": 71, "3158198253129001": 71, "3066522734923183": 71, "29106212506582096": 71, "2697381332918667": 71, "24575740357897757": 71, "22183205361280045": 71, "17955776385477407": 71, "10241054554416706": 71, "038158432534764586": 71, "02686634910992325": 71, "03815843253483564": 71, "055965520644626565": 71, "07604824987024017": 71, "09954551522126565": 71, "15680287801055925": 71, "21943396764225298": 71, "2422278736200667": 71, "26387327731772814": 71, "2812832166455621": 71, "2984516331511742": 71, "2984451507659145": 71, "2812561927627115": 71, "26387327731775656": 71, "21943396764224588": 71, "17737775568237168": 71, "07604824987022596": 71, "013315364007297603": 71, "10241054554417417": 71, "12986956796501659": 71, "1520827241580207": 71, "17278323635773063": 71, "1938092073899611": 71, "27741840435356835": 71, "2799730567250549": 71, "25604565034053905": 71, "23737736077521987": 71, "21580737042112474": 71, "1938092073899682": 71, "17278323636047332": 71, "10241054554415996": 71, "03496863398257233": 71, "08036626481413833": 71, "14803652963331615": 71, "24645629091584453": 71, "2563945023545955": 71, "2611668393310964": 71, "2563945023546097": 71, "23091343202594317": 71, "16608585532770803": 71, "08036626481415965": 71, "055965520644612354": 71, "033333": 71, "000328": 71, "005542": 71, "066667": 71, "001320": 71, "019437": 71, "003008": 71, "038158": 71, "133333": 71, "005299": 71, "060688": 71, "833333": 71, "966667": 71, "009792": 71, "108189": 71, "866667": 71, "007090": 71, "080366": 71, "900000": 71, "004494": 71, "055966": 71, "933333": 71, "002400": 71, "034969": 71, "001009": 71, "016933": 71, "legend": [71, 72, 75], "grai": 71, "plot_a1vect": 71, "plot_a2vect": 71, "userwarn": 71, "monoton": 71, "decreas": [71, 75], "x_grid": 71, "y_grid": 71, "junction": 71, "soon": 71, "focus": [71, 76], "e_isf": 71, "e_usf": 71, "08436673732088": 71, "02588197516076": 71, "\u03b4_isf": 71, "\u03b4_usf": 71, "04908088528015231": 71, "3865334761953565": 71, "low": [72, 75], "temeratur": 72, "anneal": 72, "presenc": 72, "fcc_al_bas": [72, 74], "fcc_al_disl": [72, 74], "entir": 72, "86378246": [72, 74, 75], "zimmerman": 72, "et": [72, 73, 75], "lett": 72, "165507": 72, "n_": [72, 74], "x_": 72, "earlier": [72, 74], "reveal": [72, 75], "deform": [72, 74, 76], "neighbors0": 72, "aveslip": 72, "burgers_est": 72, "8638": [72, 74], "8662": 72, "0060": 72, "shocklei": 72, "definint": 72, "8267": 72, "4319": 72, "7035": 72, "4935": 72, "0257": 72, "delta_i": [72, 73], "spread": [72, 73, 75, 76], "linearli": 72, "xvector": 72, "disreg": [72, 73, 75], "linewidth": [72, 75], "aa": [72, 75], "xx": [72, 75], "juptyer": [72, 76], "vitek": 72, "perrin": 72, "bowen": 72, "d_": 72, "insight": 72, "tweak": 72, "normfactor": 72, "abil": [72, 76], "tinker": 72, "abl": 72, "unlik": 72, "tend": [72, 75], "split": [72, 75], "suggest": [72, 73, 74], "param": [72, 75], "cushion": [72, 75], "bigger": [72, 75], "touch": [72, 75], "sharex": 72, "midpoint": 72, "387340": 72, "00030753": 72, "00574007": 72, "0056176": 72, "00015473": 72, "00286493": 72, "00279437": 72, "0001565": 72, "00285422": 72, "00276553": 72, "00012418": 72, "00269864": 72, "00278591": 72, "00025094": 72, "00539228": 72, "00554786": 72, "4866357": 72, "592277": 72, "13996141": 72, "24650369": 72, "30966101": 72, "14137303": 72, "72645929": 72, "74441346": 72, "14415298": 72, "38094613": 72, "99060147": 72, "48030553": 72, "86105735": 72, "62093836": 72, "70789473": 72, "48168651": 72, "07171033e": 72, "99998078e": 72, "95767095e": 72, "65578157e": 72, "00772906e": 72, "75316053e": 72, "65579630e": 72, "00770378e": 72, "65254013e": 72, "65627722e": 72, "00687230e": 72, "72312841e": 72, "65605989e": 72, "00724801e": 72, "72385803e": 72, "74616512e": 72, "99998127e": 72, "93360212e": 72, "awar": 73, "brief": 73, "reader": 73, "referenc": 73, "rho_i": 73, "thought": 73, "infinitesim": 73, "infinit": 73, "infti": 73, "summat": [73, 75], "interv": 73, "sum_i": 73, "sum_j": 73, "chi": 73, "lm": 73, "rho_l": 73, "rho_m": 73, "delta_l": 73, "aris": [73, 75], "unfavor": 73, "tau_": 73, "2l": [73, 75], "truncat": [73, 75], "beta_": 73, "sum_m": 73, "alpha_m": 73, "alpha_1": 73, "discrep": 73, "remaind": 73, "delta_1": 73, "delta_3": 73, "pseudo": [73, 74], "delta_2": 73, "thre": 73, "smoothli": 73, "vari": [73, 74, 75], "increment": [73, 75], "resolv": [73, 75], "observ": 73, "111sf": 73, "plotting_a1vect": 73, "plotting_a2vect": 73, "burgers_uvw": 73, "verif": 73, "unless": 73, "task": 73, "tip": 73, "xtol": 73, "ftol": 73, "solver": [73, 76], "stuck": 73, "converg": [73, 75], "maxit": 73, "purpos": 73, "pnsolut": 73, "86043063": 73, "versu": 73, "15241997612248678": 73, "21141715213385232": 73, "3123103911189946": 73, "253313215107629": 73, "213886": 73, "31672": 73, "15773037600126952": 73, "25615441125278854": 73, "2138863558674755": 73, "benefit": 73, "3790": 73, "3785": 73, "3710": 73, "3837": 73, "3951": 73, "4376": 73, "4493": 73, "4554": 73, "4503": 73, "4571": 73, "15770921002385463": 73, "2561337894922829": 73, "213885811650566": 73, "reinterpret": 73, "sdvpn_run_1": 73, "ensure_ascii": 73, "pnrestart": 73, "extrem": 73, "10x": 73, "sensit": 73, "conclus": 73, "vallei": 73, "bfg": 73, "cg": 73, "claim": 73, "hartlei": 74, "2005": 74, "acta": 74, "materialia": 74, "yuri": 74, "q_": 74, "necessarili": [74, 75], "g_": 74, "e_": 74, "ji": 74, "i_": 74, "det": 74, "omega_": 74, "partial_i": 74, "permut": 74, "partial_k": 74, "typo": 74, "plastic": [74, 76], "poor": 74, "compos": [74, 77], "amorph": 74, "arguabl": 74, "pronounc": 74, "practic": [74, 75], "experi": [74, 75], "fewest": 74, "shell": 74, "Be": 74, "hard": 74, "far": 74, "biggest": 74, "guidanc": 74, "rewritten": 74, "2x": 74, "speedup": 74, "disl": 74, "863785756044706": 74, "4801112157307": 74, "4318928780224098": 74, "4801112157308003": 74, "4318928780222961": 74, "6534074771537997": 74, "3382712783200077": 74, "8267037385768998": 74, "8637857560445923": 74, "6534074771537999": 74, "3382712783199935": 74, "8267037385769003": 74, "xaxi": 74, "yaxi": 74, "zaxi": 74, "65340558": 74, "33826859": 74, "82670279": 74, "43189123": 74, "48010836": 74, "7440094947814941": 74, "99998842e": 74, "52065147e": 74, "86211324e": 74, "08196712e": 74, "97999349e": 74, "94600556e": 74, "50971890e": 74, "07595184e": 74, "00097862e": 74, "61154254e": 74, "29769612e": 74, "05914368e": 74, "97987653e": 74, "97956797e": 74, "95194344e": 74, "03782456e": 74, "00096836e": 74, "56904835e": 74, "07762384e": 74, "07308439e": 74, "97994580e": 74, "95945363e": 74, "23419310e": 74, "05716840e": 74, "00097375e": 74, "99998313e": 74, "20052517e": 74, "00119553e": 74, "99265087e": 74, "98118463e": 74, "91607768e": 74, "26711158e": 74, "81836851e": 74, "00087732e": 74, "99998918e": 74, "91549001e": 74, "28492609e": 74, "95165793e": 74, "98111963e": 74, "92753409e": 74, "18320365e": 74, "80755118e": 74, "00086855e": 74, "99998925e": 74, "59876036e": 74, "21262376e": 74, "63555184e": 74, "98108179e": 74, "95376192e": 74, "63474077e": 74, "76849561e": 74, "00085334e": 74, "99998844e": 74, "69765095e": 74, "91966162e": 74, "31157725e": 74, "97950746e": 74, "11905039e": 74, "79882631e": 74, "88665063e": 74, "00091457e": 74, "15574139e": 74, "65913745e": 74, "89545333e": 74, "04925444e": 74, "16199882e": 74, "14566547e": 74, "0011358436297334018": 74, "8893796811590274e": 74, "2279089906289465e": 74, "65243980e": 74, "90337299e": 74, "00285051e": 74, "0020036011663635478": 74, "74910638e": 74, "53221809e": 74, "31469947e": 74, "05003352e": 74, "60962166e": 74, "03565144e": 74, "03664473e": 74, "93082115e": 74, "46702416e": 74, "00201216": 74, "00200979": 74, "00200945": 74, "00186799": 74, "00186834": 74, "00186185": 74, "straindict": 74, "dict_kei": 74, "continuum": 74, "czero": 74, "png": 74, "property_unit": 74, "extrapol": [74, 75], "0041": 74, "9144": 74, "0015": 74, "accommod": 75, "commun": 75, "vec": 75, "peculiar": 75, "overcom": 75, "tranform": [75, 77], "matrici": 75, "reversibli": 75, "benefici": 75, "sole": 75, "fcc_disl": 75, "asoci": 75, "wrt": 75, "might": 75, "66666666666667": 75, "bcc_disl": 75, "054": 75, "01346079": 75, "04038238": 75, "70256212": 75, "scmidt": 75, "isol": 75, "molecular": 75, "flexibl": 75, "green": 75, "prevent": 75, "elimin": 75, "outsiz": 75, "longer": 75, "thin": 75, "unwap": 75, "big_base_system": 75, "big_disl_system": 75, "motion": 75, "On": 75, "irreduc": 75, "pure": 75, "furthermor": 75, "shrink": 75, "against": 75, "act": 75, "intend": 75, "circuit": 75, "balanc": 75, "arrang": 75, "quad": 75, "xi_a": 75, "xi_b": 75, "xi_c": 75, "think": 75, "perspect": 75, "3l": 75, "3h": 75, "cancel": 75, "parallelogram": 75, "offset": 75, "finit": 75, "latter": 75, "simpler": 75, "deduc": 75, "useb": 75, "overview": [76, 77], "86650": 76, "defect_system": 76, "13325": 76, "99975": 76, "73325": 76, "59975": 76, "theori": [76, 77], "introduct": 77, "debug": 77, "methodologi": 77, "setup": 77}, "objects": {"": [[0, 0, 0, "-", "atomman"]], "atomman": [[1, 1, 1, "", "Atoms"], [2, 1, 1, "", "Box"], [3, 1, 1, "", "ElasticConstants"], [4, 1, 1, "", "NeighborList"], [5, 1, 1, "", "System"], [0, 4, 1, "", "build_lammps_potential"], [8, 0, 0, "-", "defect"], [0, 4, 1, "", "displacement"], [0, 4, 1, "", "dmag"], [0, 4, 1, "", "dump"], [0, 4, 1, "", "dvect"], [19, 0, 0, "-", "lammps"], [0, 4, 1, "", "load"], [28, 0, 0, "-", "mep"], [0, 4, 1, "", "nlist"], [31, 0, 0, "-", "plot"], [32, 0, 0, "-", "region"], [33, 0, 0, "-", "tools"], [34, 0, 0, "-", "unitconvert"]], "atomman.Atoms": [[1, 1, 1, "", "PropertyDict"], [1, 2, 1, "", "atypes"], [1, 3, 1, "", "df"], [1, 3, 1, "", "extend"], [1, 3, 1, "", "model"], [1, 2, 1, "", "natoms"], [1, 2, 1, "", "natypes"], [1, 3, 1, "", "prop"], [1, 3, 1, "", "prop_atype"], [1, 2, 1, "", "view"]], "atomman.Box": [[2, 2, 1, "", "a"], [2, 2, 1, "", "alpha"], [2, 2, 1, "", "avect"], [2, 2, 1, "", "b"], [2, 2, 1, "", "beta"], [2, 2, 1, "", "bvect"], [2, 2, 1, "", "c"], [2, 3, 1, "", "cubic"], [2, 2, 1, "", "cvect"], [2, 2, 1, "", "gamma"], [2, 3, 1, "", "hexagonal"], [2, 3, 1, "", "identifyfamily"], [2, 3, 1, "", "inside"], [2, 3, 1, "", "is_lammps_norm"], [2, 3, 1, "", "iscubic"], [2, 3, 1, "", "ishexagonal"], [2, 3, 1, "", "ismonoclinic"], [2, 3, 1, "", "isorthorhombic"], [2, 3, 1, "", "isrhombohedral"], [2, 3, 1, "", "istetragonal"], [2, 3, 1, "", "istriclinic"], [2, 2, 1, "", "lx"], [2, 2, 1, "", "ly"], [2, 2, 1, "", "lz"], [2, 3, 1, "", "model"], [2, 3, 1, "", "monoclinic"], [2, 2, 1, "", "origin"], [2, 3, 1, "", "orthorhombic"], [2, 3, 1, "", "plane_crystal_to_cartesian"], [2, 2, 1, "", "planes"], [2, 3, 1, "", "position_cartesian_to_relative"], [2, 3, 1, "", "position_relative_to_cartesian"], [2, 2, 1, "", "reciprocal_vects"], [2, 3, 1, "", "set"], [2, 3, 1, "", "set_abc"], [2, 3, 1, "", "set_hi_los"], [2, 3, 1, "", "set_lengths"], [2, 3, 1, "", "set_vectors"], [2, 3, 1, "", "tetragonal"], [2, 3, 1, "", "triclinic"], [2, 3, 1, "", "trigonal"], [2, 3, 1, "", "vector_crystal_to_cartesian"], [2, 2, 1, "", "vects"], [2, 2, 1, "", "volume"], [2, 2, 1, "", "xhi"], [2, 2, 1, "", "xlo"], [2, 2, 1, "", "xy"], [2, 2, 1, "", "xz"], [2, 2, 1, "", "yhi"], [2, 2, 1, "", "ylo"], [2, 2, 1, "", "yz"], [2, 2, 1, "", "zhi"], [2, 2, 1, "", "zlo"]], "atomman.ElasticConstants": [[3, 2, 1, "", "Cij"], [3, 2, 1, "", "Cij9"], [3, 2, 1, "", "Cijkl"], [3, 2, 1, "", "Sij"], [3, 2, 1, "", "Sijkl"], [3, 3, 1, "", "bulk"], [3, 3, 1, "", "cubic"], [3, 3, 1, "", "hexagonal"], [3, 3, 1, "", "is_normal"], [3, 3, 1, "", "isotropic"], [3, 3, 1, "", "model"], [3, 3, 1, "", "monoclinic"], [3, 3, 1, "", "normalized_as"], [3, 3, 1, "", "orthorhombic"], [3, 3, 1, "", "rhombohedral"], [3, 3, 1, "", "shear"], [3, 3, 1, "", "tetragonal"], [3, 3, 1, "", "transform"], [3, 3, 1, "", "triclinic"]], "atomman.NeighborList": [[4, 3, 1, "", "build"], [4, 2, 1, "", "coord"], [4, 3, 1, "", "dump"], [4, 3, 1, "", "load"], [4, 2, 1, "", "nlist"]], "atomman.System": [[5, 2, 1, "", "atoms"], [5, 3, 1, "", "atoms_df"], [5, 3, 1, "", "atoms_extend"], [5, 2, 1, "", "atoms_ix"], [5, 3, 1, "", "atoms_prop"], [5, 2, 1, "", "atypes"], [5, 2, 1, "", "box"], [5, 3, 1, "", "box_set"], [5, 2, 1, "", "composition"], [5, 3, 1, "", "dmag"], [5, 3, 1, "", "dump"], [5, 3, 1, "", "dvect"], [5, 2, 1, "", "masses"], [5, 3, 1, "", "model"], [5, 2, 1, "", "natoms"], [5, 2, 1, "", "natypes"], [5, 3, 1, "", "neighborlist"], [5, 3, 1, "", "normalize"], [5, 2, 1, "", "pbc"], [5, 3, 1, "", "r0"], [5, 3, 1, "", "rotate"], [5, 3, 1, "", "scale"], [5, 3, 1, "", "supersize"], [5, 2, 1, "", "symbols"], [5, 3, 1, "", "unscale"], [5, 3, 1, "", "wrap"]], "atomman.cluster": [[7, 1, 1, "", "BondAngleMap"]], "atomman.cluster.BondAngleMap": [[7, 3, 1, "", "cumulative_pdf"], [7, 2, 1, "", "df"], [7, 3, 1, "", "itercoords"], [7, 3, 1, "", "itersystem"], [7, 3, 1, "", "load_table"], [7, 3, 1, "", "model"], [7, 3, 1, "", "pdf"], [7, 3, 1, "", "plot_cumulative_pdf"], [7, 3, 1, "", "plot_pdf"], [7, 2, 1, "", "rmax"], [7, 2, 1, "", "rmin"], [7, 2, 1, "", "rnum"], [7, 3, 1, "", "save_table"], [7, 3, 1, "", "set"], [7, 2, 1, "", "symbols"], [7, 2, 1, "", "thetamax"], [7, 2, 1, "", "thetamin"], [7, 2, 1, "", "thetanum"]], "atomman.defect": [[9, 1, 1, "", "DifferentialDisplacement"], [10, 1, 1, "", "Dislocation"], [11, 1, 1, "", "FreeSurface"], [12, 1, 1, "", "GammaSurface"], [13, 1, 1, "", "IsotropicVolterraDislocation"], [14, 1, 1, "", "SDVPN"], [15, 1, 1, "", "StackingFault"], [16, 1, 1, "", "Strain"], [17, 1, 1, "", "Stroh"], [18, 1, 1, "", "VolterraDislocation"], [8, 4, 1, "", "differential_displacement"], [8, 4, 1, "", "dislocation_array"], [8, 4, 1, "", "dislocation_system_basis"], [8, 4, 1, "", "dislocation_system_transform"], [8, 4, 1, "", "disregistry"], [8, 4, 1, "", "dumbbell"], [8, 4, 1, "", "free_surface_basis"], [8, 4, 1, "", "interstitial"], [8, 4, 1, "", "nye_tensor"], [8, 4, 1, "", "nye_tensor_p"], [8, 4, 1, "", "pn_arctan_disregistry"], [8, 4, 1, "", "point"], [8, 4, 1, "", "slip_vector"], [8, 4, 1, "", "solve_volterra_dislocation"], [8, 4, 1, "", "substitutional"], [8, 4, 1, "", "vacancy"]], "atomman.defect.DifferentialDisplacement": [[9, 2, 1, "", "arrowcenters"], [9, 2, 1, "", "arrowuvectors"], [9, 2, 1, "", "ddvectors"], [9, 2, 1, "", "neighbors"], [9, 3, 1, "", "plot"], [9, 3, 1, "", "plot_with_nye"], [9, 2, 1, "", "reference"], [9, 3, 1, "", "solve"], [9, 2, 1, "", "system0"], [9, 2, 1, "", "system1"]], "atomman.defect.Dislocation": [[10, 3, 1, "", "array_boundary"], [10, 2, 1, "", "base_system"], [10, 3, 1, "", "box_boundary"], [10, 3, 1, "", "build_disl_array"], [10, 2, 1, "", "cutindex"], [10, 3, 1, "", "cylinder_boundary"], [10, 3, 1, "", "dipole"], [10, 3, 1, "", "dipole_displacement"], [10, 2, 1, "", "disl_system"], [10, 2, 1, "", "dislsol"], [10, 3, 1, "", "fromdatabase"], [10, 3, 1, "", "fromrecord"], [10, 2, 1, "", "lineindex"], [10, 3, 1, "", "monopole"], [10, 2, 1, "", "motionindex"], [10, 3, 1, "", "periodicarray"], [10, 2, 1, "", "rcell"], [10, 3, 1, "", "set_shift"], [10, 3, 1, "", "set_systems"], [10, 2, 1, "", "shift"], [10, 2, 1, "", "shifts"], [10, 2, 1, "", "transform"], [10, 2, 1, "", "ucell"], [10, 2, 1, "", "ucell_prim"], [10, 2, 1, "", "uvws"], [10, 2, 1, "", "uvws_prim"]], "atomman.defect.FreeSurface": [[11, 2, 1, "", "conventional_setting"], [11, 2, 1, "", "cutboxvector"], [11, 2, 1, "", "cutindex"], [11, 3, 1, "", "fromdatabase"], [11, 3, 1, "", "fromrecord"], [11, 2, 1, "", "hkl"], [11, 2, 1, "", "rcell"], [11, 2, 1, "", "rcellwidth"], [11, 3, 1, "", "set_shift"], [11, 2, 1, "", "shift"], [11, 2, 1, "", "shifts"], [11, 3, 1, "", "surface"], [11, 2, 1, "", "surfacearea"], [11, 2, 1, "", "system"], [11, 2, 1, "", "transform"], [11, 2, 1, "", "ucell"], [11, 3, 1, "", "unique_shifts"], [11, 2, 1, "", "uvws"]], "atomman.defect.GammaSurface": [[12, 3, 1, "", "E_gsf"], [12, 3, 1, "", "E_gsf_line_plot"], [12, 3, 1, "", "E_gsf_surface_plot"], [12, 3, 1, "", "a12_to_pos"], [12, 3, 1, "", "a12_to_xy"], [12, 2, 1, "", "a1vect"], [12, 2, 1, "", "a2vect"], [12, 2, 1, "", "box"], [12, 3, 1, "", "build_path"], [12, 2, 1, "", "data"], [12, 3, 1, "", "delta"], [12, 3, 1, "", "delta_line_plot"], [12, 3, 1, "", "delta_surface_plot"], [12, 3, 1, "", "fit"], [12, 3, 1, "", "model"], [12, 3, 1, "", "path"], [12, 2, 1, "", "planenormal"], [12, 3, 1, "", "pos_to_a12"], [12, 3, 1, "", "pos_to_xy"], [12, 3, 1, "", "set"], [12, 3, 1, "", "xy_to_a12"], [12, 3, 1, "", "xy_to_pos"]], "atomman.defect.IsotropicVolterraDislocation": [[13, 2, 1, "", "K_tensor"], [13, 3, 1, "", "displacement"], [13, 2, 1, "", "mu"], [13, 2, 1, "", "nu"], [13, 3, 1, "", "solve"], [13, 3, 1, "", "strain"], [13, 3, 1, "", "stress"], [13, 3, 1, "", "theta"]], "atomman.defect.SDVPN": [[14, 3, 1, "", "E_gsf_surface_plot"], [14, 3, 1, "", "E_gsf_vs_x_plot"], [14, 2, 1, "", "K_tensor"], [14, 2, 1, "", "alpha"], [14, 2, 1, "", "beta"], [14, 2, 1, "", "burgers"], [14, 2, 1, "", "cdiffelastic"], [14, 2, 1, "", "cdiffstress"], [14, 2, 1, "", "cdiffsurface"], [14, 3, 1, "", "check_energies"], [14, 2, 1, "", "cutofflongrange"], [14, 3, 1, "", "disldensity"], [14, 2, 1, "", "disregistry"], [14, 3, 1, "", "disregistry_plot"], [14, 3, 1, "", "elastic_energy"], [14, 2, 1, "", "fullstress"], [14, 2, 1, "", "gamma"], [14, 3, 1, "", "load"], [14, 3, 1, "", "longrange_energy"], [14, 2, 1, "", "min_kwargs"], [14, 2, 1, "", "min_method"], [14, 2, 1, "", "min_options"], [14, 3, 1, "", "misfit_energy"], [14, 3, 1, "", "model"], [14, 3, 1, "", "nonlocal_energy"], [14, 2, 1, "", "res"], [14, 3, 1, "", "solve"], [14, 3, 1, "", "stress_energy"], [14, 3, 1, "", "surface_energy"], [14, 2, 1, "", "tau"], [14, 3, 1, "", "total_energy"], [14, 2, 1, "", "transform"], [14, 2, 1, "", "x"]], "atomman.defect.StackingFault": [[15, 2, 1, "", "a1vect_cart"], [15, 2, 1, "", "a1vect_uvw"], [15, 2, 1, "", "a2vect_cart"], [15, 2, 1, "", "a2vect_uvw"], [15, 2, 1, "", "abovefault"], [15, 3, 1, "", "fault"], [15, 2, 1, "", "faultpos_cart"], [15, 2, 1, "", "faultpos_rel"], [15, 3, 1, "", "fromdatabase"], [15, 3, 1, "", "fromrecord"], [15, 3, 1, "", "iterfaultmap"], [15, 3, 1, "", "surface"]], "atomman.defect.Strain": [[16, 2, 1, "", "G"], [16, 2, 1, "", "angularvelocity"], [16, 3, 1, "", "asdict"], [16, 3, 1, "", "build_p_vectors"], [16, 3, 1, "", "clear_properties"], [16, 2, 1, "", "invariant1"], [16, 2, 1, "", "invariant2"], [16, 2, 1, "", "invariant3"], [16, 2, 1, "", "neighbors"], [16, 2, 1, "", "nye"], [16, 2, 1, "", "p_vectors"], [16, 2, 1, "", "rotation"], [16, 3, 1, "", "save_to_system"], [16, 3, 1, "", "set_p_vectors"], [16, 3, 1, "", "solve_G"], [16, 3, 1, "", "solve_nye"], [16, 2, 1, "", "strain"], [16, 2, 1, "", "system"], [16, 2, 1, "", "theta_max"]], "atomman.defect.Stroh": [[17, 2, 1, "", "A"], [17, 2, 1, "", "K_tensor"], [17, 2, 1, "", "L"], [17, 3, 1, "", "displacement"], [17, 3, 1, "", "eta"], [17, 2, 1, "", "k"], [17, 2, 1, "", "p"], [17, 3, 1, "", "solve"], [17, 3, 1, "", "strain"], [17, 3, 1, "", "stress"]], "atomman.defect.VolterraDislocation": [[18, 2, 1, "", "C"], [18, 2, 1, "", "K_coeff"], [18, 2, 1, "", "K_tensor"], [18, 2, 1, "", "burgers"], [18, 3, 1, "", "characterangle"], [18, 3, 1, "", "displacement"], [18, 2, 1, "", "m"], [18, 2, 1, "", "n"], [18, 2, 1, "", "preln"], [18, 3, 1, "", "solve"], [18, 3, 1, "", "strain"], [18, 3, 1, "", "stress"], [18, 2, 1, "", "tol"], [18, 2, 1, "", "transform"], [18, 2, 1, "atomman.defect.VolterraDislocation.", "\u03be"]], "atomman.lammps": [[20, 1, 1, "", "LammpsError"], [21, 1, 1, "", "Log"], [22, 1, 1, "", "NEBLog"], [19, 0, 0, "-", "Potential"], [19, 4, 1, "", "checkversion"], [19, 4, 1, "", "normalize"], [19, 4, 1, "", "run"], [19, 0, 0, "-", "style"]], "atomman.lammps.Log": [[21, 3, 1, "", "flatten"], [21, 2, 1, "", "lammps_date"], [21, 2, 1, "", "lammps_version"], [21, 3, 1, "", "read"], [21, 2, 1, "", "simulations"]], "atomman.lammps.NEBLog": [[22, 2, 1, "", "climbrun"], [22, 3, 1, "", "get_barrier"], [22, 3, 1, "", "get_neb_path"], [22, 3, 1, "", "load"], [22, 2, 1, "", "logs"], [22, 2, 1, "", "minrun"], [22, 2, 1, "", "nreplicas"]], "atomman.lammps.Potential": [[19, 4, 1, "", "Potential"]], "atomman.lammps.style": [[19, 4, 1, "", "timestep"], [19, 4, 1, "", "unit"]], "atomman.library": [[24, 1, 1, "", "Database"]], "atomman.library.Database": [[24, 3, 1, "", "download_all"], [24, 3, 1, "", "download_crystal_prototypes"], [24, 3, 1, "", "download_reference_crystals"], [24, 3, 1, "", "download_relaxed_crystals"], [24, 3, 1, "", "fetch_mp_crystal"], [24, 3, 1, "", "fetch_mp_crystals"], [24, 3, 1, "", "fetch_oqmd_crystal"], [24, 3, 1, "", "fetch_reference_crystal"], [24, 3, 1, "", "get_crystal_prototype"], [24, 3, 1, "", "get_crystal_prototypes"], [24, 3, 1, "", "get_reference_crystal"], [24, 3, 1, "", "get_reference_crystals"], [24, 3, 1, "", "get_relaxed_crystal"], [24, 3, 1, "", "get_relaxed_crystals"], [24, 3, 1, "", "retrieve_crystal_prototype"], [24, 3, 1, "", "retrieve_reference_crystal"], [24, 3, 1, "", "retrieve_relaxed_crystal"]], "atomman.library.record": [[25, 5, 1, "", "CrystalPrototype"], [26, 5, 1, "", "ReferenceCrystal"], [27, 5, 1, "", "RelaxedCrystal"]], "atomman.mep": [[29, 1, 1, "", "BasePath"], [30, 1, 1, "", "ISMPath"], [28, 4, 1, "", "create_path"], [28, 0, 0, "-", "gradient"], [28, 0, 0, "-", "integrator"]], "atomman.mep.BasePath": [[29, 2, 1, "", "arccoord"], [29, 2, 1, "", "coord"], [29, 3, 1, "", "energy"], [29, 2, 1, "", "energyfxn"], [29, 2, 1, "", "force"], [29, 3, 1, "", "grad_energy"], [29, 2, 1, "", "gradientfxn"], [29, 2, 1, "", "gradientkwargs"], [29, 2, 1, "", "integratorfxn"], [29, 3, 1, "", "plot_energy"], [29, 3, 1, "", "plot_force"], [29, 3, 1, "", "relax"], [29, 3, 1, "", "step"], [29, 2, 1, "", "unittangent"]], "atomman.mep.ISMPath": [[30, 2, 1, "", "default_timestep"], [30, 2, 1, "", "default_tolerance"], [30, 3, 1, "", "interpolate_path"], [30, 3, 1, "", "relax"], [30, 3, 1, "", "step"], [30, 2, 1, "", "unittangent"]], "atomman.mep.gradient": [[28, 4, 1, "", "central_difference"]], "atomman.mep.integrator": [[28, 4, 1, "", "euler"], [28, 4, 1, "", "rungekutta"]], "atomman.plot": [[31, 4, 1, "", "get_prop_values"], [31, 4, 1, "", "interpolate_contour"], [31, 4, 1, "", "values_to_hexcolors"]], "atomman.region": [[32, 1, 1, "", "Cylinder"], [32, 1, 1, "", "Plane"], [32, 1, 1, "", "PlaneSet"], [32, 1, 1, "", "Shape"], [32, 1, 1, "", "Sphere"]], "atomman.region.Cylinder": [[32, 2, 1, "", "axis"], [32, 2, 1, "", "center1"], [32, 2, 1, "", "center2"], [32, 2, 1, "", "endcaps"], [32, 3, 1, "", "inside"], [32, 2, 1, "", "radius"]], "atomman.region.Plane": [[32, 3, 1, "", "above"], [32, 3, 1, "", "below"], [32, 3, 1, "", "isclose"], [32, 2, 1, "", "normal"], [32, 3, 1, "", "operate"], [32, 2, 1, "", "point"]], "atomman.region.PlaneSet": [[32, 3, 1, "", "inside"], [32, 2, 1, "", "planes"]], "atomman.region.Shape": [[32, 3, 1, "", "inside"], [32, 3, 1, "", "outside"]], "atomman.region.Sphere": [[32, 2, 1, "", "center"], [32, 3, 1, "", "inside"], [32, 2, 1, "", "radius"]], "atomman.tools": [[33, 4, 1, "", "aslist"], [33, 4, 1, "", "atomic_mass"], [33, 4, 1, "", "atomic_number"], [33, 4, 1, "", "atomic_symbol"], [33, 4, 1, "", "axes_check"], [33, 4, 1, "", "boolean"], [33, 4, 1, "", "compositionstr"], [33, 4, 1, "", "duplicates_allclose"], [33, 4, 1, "", "filltemplate"], [33, 4, 1, "", "iaslist"], [33, 4, 1, "", "identifyfamily"], [33, 4, 1, "", "indexstr"], [33, 4, 1, "", "iscubic"], [33, 4, 1, "", "ishexagonal"], [33, 4, 1, "", "ismonoclinic"], [33, 4, 1, "", "isorthorhombic"], [33, 4, 1, "", "isrhombohedral"], [33, 4, 1, "", "istetragonal"], [33, 4, 1, "", "istriclinic"], [33, 0, 0, "-", "miller"], [33, 4, 1, "", "screen_input"], [33, 4, 1, "", "uber_open_rmode"], [33, 4, 1, "", "vect_angle"]], "atomman.tools.miller": [[33, 4, 1, "", "fromstring"], [33, 4, 1, "", "plane3to4"], [33, 4, 1, "", "plane4to3"], [33, 4, 1, "", "plane_crystal_to_cartesian"], [33, 4, 1, "", "vector3to4"], [33, 4, 1, "", "vector4to3"], [33, 4, 1, "", "vector_conventional_to_primitive"], [33, 4, 1, "", "vector_crystal_to_cartesian"], [33, 4, 1, "", "vector_primitive_to_conventional"]], "atomman.unitconvert": [[34, 4, 1, "", "build_unit"], [34, 4, 1, "", "error_unit"], [34, 4, 1, "", "get_in_units"], [34, 4, 1, "", "model"], [34, 4, 1, "", "parse"], [34, 4, 1, "", "reset_units"], [34, 4, 1, "", "set_in_units"], [34, 4, 1, "", "set_literal"], [34, 4, 1, "", "value_unit"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:property", "3": "py:method", "4": "py:function", "5": "py:attribute"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "property", "Python property"], "3": ["py", "method", "Python method"], "4": ["py", "function", "Python function"], "5": ["py", "attribute", "Python attribute"]}, "titleterms": {"atomman": [0, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76], "packag": 0, "submodul": 0, "class": [0, 6, 8, 19, 23, 28, 37, 38, 39, 58, 59, 60, 61, 62, 64, 68, 69, 71, 74, 76], "function": [0, 8, 19, 28, 31, 32, 33, 34, 60], "attribut": [0, 8, 19, 28, 31, 32, 33, 34, 38, 39, 61, 62, 64, 71], "atom": [1, 38, 57, 58, 60, 62, 66, 72, 75], "box": [2, 37, 57, 63, 75], "elasticconst": [3, 61], "neighborlist": [4, 39, 62, 66], "system": [5, 39, 40, 44, 46, 47, 49, 50, 51, 52, 53, 54, 55, 57, 58, 60, 61, 66, 68, 69, 72, 74, 75], "cluster": [6, 65], "bondanglemap": [7, 65], "defect": [8, 67, 76], "differentialdisplac": [9, 72], "disloc": [10, 70, 72, 73, 75, 76], "freesurfac": [11, 68], "gammasurfac": [12, 73], "isotropicvolterradisloc": 13, "sdvpn": [14, 73], "stackingfault": [15, 69], "strain": [16, 70, 74, 76], "stroh": 17, "volterradisloc": [18, 73], "lammp": [19, 37, 50, 51, 58, 59, 60], "lammpserror": 20, "log": [21, 59], "neblog": 22, "librari": [23, 56, 58], "databas": [24, 56, 57, 58, 60], "crystalprototyp": [25, 56], "referencecryst": [26, 56], "relaxedcryst": [27, 56], "mep": 28, "basepath": [29, 64], "ismpath": [30, 64], "plot": [31, 71, 72, 74], "region": [32, 63, 66], "tool": [33, 39, 60, 66, 72], "unitconvert": 34, "atomist": 35, "manipul": [35, 39, 57, 60], "toolkit": 35, "descript": 35, "instal": 35, "tutori": [35, 77], "code": 35, "document": 35, "indic": 35, "tabl": [35, 49], "introduct": [36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76], "unit": [36, 40, 60, 68, 69, 75], "convers": [36, 37, 40, 47, 48, 49, 50, 51, 52, 53, 55, 66, 71], "1": [36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76], "2": [36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76], "basic": [36, 38, 39, 50, 66, 68, 69], "dictionari": 36, "work": 36, "3": [36, 37, 38, 39, 40, 45, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76], "reset_unit": 36, "4": [36, 37, 38, 39, 50, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76], "set": [36, 37, 38, 56, 58, 61, 71, 74], "get": [36, 38, 73], "static": [36, 37], "valu": [36, 38, 61, 71], "direct": [36, 37, 70], "pars": 36, "set_in_unit": 36, "get_in_unit": 36, "5": [36, 37, 38, 39, 58, 59, 60, 61, 63, 65, 66, 67, 69, 71, 72, 73, 74, 75, 76], "set_liter": 36, "data": [36, 50, 58, 59, 60, 65, 71, 72], "model": [36, 37, 38, 39, 40, 58, 61, 65, 71, 73], "represent": [36, 61, 65], "value_unit": 36, "error_unit": 36, "debug": 36, "paramet": [37, 41, 58, 60, 74], "initi": [37, 38, 39, 60, 62, 63, 64, 65, 68, 69, 72, 73, 74, 75], "vect": 37, "origin": [37, 58], "method": [37, 57, 64, 65, 70, 71, 75], "crystal": [37, 42, 43, 56, 57, 60, 61, 66, 75], "famili": 37, "character": 37, "util": [37, 71], "compat": 37, "is_lammps_norm": 37, "insid": [37, 63], "outsid": [37, 63], "vector": [37, 69, 72, 75], "plane": [37, 63, 69], "lattic": [37, 66], "identif": [37, 66], "pre": 38, "defin": [38, 57, 68, 69, 71, 75], "per": [38, 62], "properti": [38, 40, 57, 58, 70, 74], "list": [38, 62], "assign": 38, "access": [38, 57, 59], "exist": 38, "new": [38, 58], "view": [38, 57], "index": [38, 66], "extend": 38, "6": [38, 39, 58, 60, 61, 66, 67, 71, 73, 75, 76], "prop": 38, "7": [38, 39, 58, 60, 61, 66, 73], "prop_atyp": 38, "8": [38, 60, 66, 73], "option": [39, 61, 74], "built": 39, "scale": 39, "addit": [39, 58], "unscal": 39, "atoms_prop": 39, "atoms_df": 39, "box_set": 39, "wrap": 39, "normal": [39, 61], "rotat": [39, 57, 68, 69], "supers": [39, 57], "atoms_ix": 39, "atoms_extend": 39, "analysi": [39, 65, 66, 72, 76], "dvect": [39, 66], "dmag": [39, 66], "r0": 39, "dump": [39, 40, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 58, 60, 62], "system_model": 40, "note": [40, 50, 75], "format": 40, "simpl": 40, "exampl": [40, 50, 58, 63, 68, 69, 74, 75], "specifi": 40, "limit": 40, "includ": [40, 59], "load": [40, 41, 42, 43, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 60, 62, 71, 72, 73, 74], "__init__": 40, "prototyp": [41, 43, 56, 57], "queri": 41, "modif": [41, 50], "dft": [43, 56], "refer": [43, 56, 74], "primit": [44, 45, 68, 69], "cell": [44, 45, 68, 69, 75], "primitive_cel": 44, "convent": [45, 68, 69, 75], "conventional_to_primit": 45, "primitive_to_convent": 45, "pdb": 46, "file": [46, 50, 51, 58, 60], "poscar": [47, 57], "cif": 48, "atom_data": [50, 58], "differ": [50, 61], "atom_styl": 50, "imag": 50, "flag": 50, "handl": 50, "manual": 50, "integr": 50, "potenti": [50, 58, 60], "mass": 50, "atom_dump": 51, "ase": 52, "phonopi": 52, "ase_atom": 52, "phonopy_atom": 52, "pymatgen": 53, "pymatgen_structur": 53, "spglib_cel": 54, "support": [55, 66], "style": [55, 58], "interfac": 56, "get_crystal_prototyp": 56, "download_crystal_prototyp": 56, "object": [56, 70, 73], "relax": [56, 60, 64], "get_relaxed_cryst": 56, "download_relaxed_cryst": 56, "get_reference_cryst": 56, "download_reference_cryst": 56, "fetch_reference_cryst": 56, "fetch_mp_cryst": 56, "fetch_oqmd_cryst": 56, "save_reference_cryst": 56, "creat": 57, "from": [57, 58, 59, 60], "other": [57, 58, 72], "us": [58, 61, 69, 73, 75], "load_lammps_potenti": 58, "By": 58, "id": 58, "potid": 58, "categori": 58, "identifi": [58, 62, 68, 69], "metadata": 58, "type": 58, "gener": [58, 60, 65, 67, 68, 69, 73, 75], "command": 58, "directori": 58, "pair_info": 58, "build": [58, 61, 62, 68, 69, 70], "potential_lammp": 58, "schema": 58, "The": [58, 62, 72, 75], "branch": 58, "pair_styl": 58, "pair_coeff": 58, "lennard": 58, "jone": 58, "two": 58, "bodi": 58, "eam": 58, "alloi": 58, "mani": 58, "singl": 58, "comb": 58, "requir": 58, "meam": 58, "hybrid": 58, "columb": 58, "run": [59, 60], "result": [59, 60, 73], "restart": 59, "flatten": 59, "script": [59, 60], "multipl": 59, "simul": [59, 75], "togeth": 59, "error": 59, "messag": 59, "interatom": 60, "control": 60, "save": [60, 71, 73, 74], "convert": 60, "compos": 60, "input": 60, "show": [60, 61], "content": 60, "previou": 60, "section": [60, 61], "write": 60, "templat": 60, "fill": 60, "filltempl": [60, 66], "analyz": 60, "thermo": 60, "read": 60, "elast": [61, 66, 73], "constant": [61, 66], "demonstr": 61, "see": [61, 75], "more": [61, 75], "specif": [61, 64], "tranform": 61, "shear": 61, "bulk": 61, "modulu": 61, "estim": [61, 73], "normalized_a": 61, "is_norm": 61, "theori": [62, 64, 65, 68, 69, 70, 71, 73, 74, 75], "methodologi": [62, 64, 73], "neighbor": [62, 74], "coord": 62, "selector": [63, 66], "slice": 63, "abov": 63, "below": 63, "volum": 63, "select": [63, 74], "shape": 63, "sphere": 63, "cylind": 63, "planeset": 63, "minimum": [64, 71], "energi": [64, 70, 71, 73], "path": [64, 71], "common": [64, 72], "setup": 64, "gradientfxn": 64, "gradientkwarg": 64, "integratorfxn": 64, "improv": 64, "string": 64, "step": 64, "iter": 65, "itercoord": 65, "itersystem": 65, "df": 65, "save_t": 65, "pdf": 65, "cumulative_pdf": 65, "plot_pdf": 65, "plot_cumulative_pdf": 65, "rel": 66, "distanc": 66, "between": 66, "displac": [66, 72, 75], "inform": 66, "axes_check": 66, "indexstr": 66, "uber_open_rmod": 66, "vect_angl": 66, "duplicates_allclos": 66, "miller": 66, "9": 66, "10": 66, "compositionstr": 66, "point": [67, 76], "vacanc": 67, "interstiti": 67, "substitut": 67, "dumbbel": 67, "free": [68, 69, 76], "surfac": [68, 69, 71, 73, 76], "bcc": [68, 75], "check": [68, 69, 70, 73, 75], "configur": [68, 69, 75], "hcp": [68, 69], "an": [68, 69, 73, 75], "stack": [69, 76], "fault": [69, 76], "iterfaultmap": 69, "fcc": [69, 75], "111": [69, 75], "posit": [69, 75], "": 69, "shift": [69, 75], "0001": 69, "slip": [69, 71, 72], "volterra": [70, 73, 75], "solut": [70, 73, 75], "isotrop": 70, "anisotrop": 70, "comput": 70, "gamma": [71, 73], "underli": 71, "e_gsf_line_plot": 71, "delta_line_plot": 71, "e_gsf_surface_plot": 71, "delta_surface_plot": 71, "e_gsf": 71, "delta": 71, "slip_vector": 72, "disregistri": [72, 73], "nye": [72, 74], "tensor": [72, 74], "differenti": 72, "map": 72, "solv": [72, 73], "variat": [72, 73], "cartesian": 72, "compon": 72, "parallel": 72, "burger": 72, "ani": 72, "radial": 72, "raw": 72, "semidiscret": 73, "peierl": 73, "nabarro": 73, "densiti": 73, "misfit": 73, "stress": 73, "nonloc": 73, "overview": 73, "call": 73, "first": 73, "time": 73, "repeat": 73, "minim": 73, "correspod": 74, "deriv": 74, "calcul": 74, "state": 74, "cutoff": 74, "angl": 74, "asdict": 74, "definit": 75, "orient": 75, "align": 75, "al": 75, "110": 75, "term": 75, "fe": 75, "screw": 75, "monopol": 75, "boundari": 75, "condit": 75, "core": 75, "structur": 75, "observ": 75, "period": 75, "arrai": 75, "coher": 75, "linear": 75, "gradient": 75, "periodicarrai": 75, "small": 75, "easi": 75, "larg": 75, "onli": 75, "dipol": 75, "2d": 75, "grid": 75, "field": 75, "infinit": 75, "medium": 75, "correct": 75, "creation": 76}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "nbsphinx": 4, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2, "sphinx": 57}, "alltitles": {"atomman package": [[0, "atomman-package"]], "Submodules": [[0, "submodules"]], "Classes": [[0, "classes"], [6, "classes"], [8, "classes"], [19, "classes"], [23, "classes"], [28, "classes"]], "Functions and attributes": [[0, "module-atomman"], [8, "module-atomman.defect"], [19, "module-atomman.lammps"], [28, "module-atomman.mep"], [31, "module-atomman.plot"], [32, "module-atomman.region"], [33, "module-atomman.tools"], [34, "module-atomman.unitconvert"]], "Atoms": [[1, "atoms"]], "Box": [[2, "box"]], "ElasticConstants": [[3, "elasticconstants"]], "NeighborList": [[4, "neighborlist"]], "System": [[5, "system"]], "cluster": [[6, "cluster"]], "BondAngleMap": [[7, "bondanglemap"]], "defect": [[8, "defect"]], "DifferentialDisplacement": [[9, "differentialdisplacement"]], "Dislocation": [[10, "dislocation"]], "FreeSurface": [[11, "freesurface"]], "GammaSurface": [[12, "gammasurface"]], "IsotropicVolterraDislocation": [[13, "isotropicvolterradislocation"]], "SDVPN": [[14, "sdvpn"]], "StackingFault": [[15, "stackingfault"]], "Strain": [[16, "strain"]], "Stroh": [[17, "stroh"]], "VolterraDislocation": [[18, "volterradislocation"]], "lammps": [[19, "lammps"]], "LammpsError": [[20, "lammpserror"]], "Log": [[21, "log"]], "NEBLog": [[22, "neblog"]], "library": [[23, "library"]], "Database": [[24, "database"]], "CrystalPrototype": [[25, "crystalprototype"]], "ReferenceCrystal": [[26, "referencecrystal"]], "RelaxedCrystal": [[27, "relaxedcrystal"]], "mep": [[28, "mep"]], "BasePath": [[29, "basepath"]], "ISMPath": [[30, "ismpath"]], "plot": [[31, "plot"]], "region": [[32, "region"]], "tools": [[33, "tools"]], "unitconvert": [[34, "unitconvert"]], "atomman: Atomistic Manipulation Toolkit": [[35, "atomman-atomistic-manipulation-toolkit"]], "Description": [[35, "description"]], "Installation": [[35, "installation"]], "Tutorials": [[35, "tutorials"], [77, "tutorials"]], "Code Documentation": [[35, "code-documentation"]], "Indices and tables": [[35, "indices-and-tables"]], "Introduction to atomman: Unit conversions": [[36, "Introduction-to-atomman:-Unit-conversions"]], "1. Introduction": [[36, "1.-Introduction"], [37, "1.-Introduction"], [38, "1.-Introduction"], [39, "1.-Introduction"], [40, "1.-Introduction"], [41, "1.-Introduction"], [42, "1.-Introduction"], [43, "1.-Introduction"], [44, "1.-Introduction"], [45, "1.-Introduction"], [46, "1.-Introduction"], [47, "1.-Introduction"], [48, "1.-Introduction"], [49, "1.-Introduction"], [50, "1.-Introduction"], [51, "1.-Introduction"], [52, "1.-Introduction"], [53, "1.-Introduction"], [54, "1.-Introduction"], [55, "1.-Introduction"], [56, "1.-Introduction"], [57, "1.-Introduction"], [58, "1.-Introduction"], [59, "1.-Introduction"], [60, "1.-Introduction"], [61, "1.-Introduction"], [62, "1.-Introduction"], [63, "1.-Introduction"], [64, "1.-Introduction"], [66, "1.-Introduction"], [67, "1.-Introduction"], [68, "1.-Introduction"], [69, "1.-Introduction"], [70, "1.-Introduction"], [71, "1.-Introduction"], [72, "1.-Introduction"], [73, "1.-Introduction"], [74, "1.-Introduction"], [75, "1.-Introduction"], [76, "1.-Introduction"]], "2. Basics": [[36, "2.-Basics"], [38, "2.-Basics"], [39, "2.-Basics"]], "2.1. unit dictionary": [[36, "2.1.-unit-dictionary"]], "2.2. Working units": [[36, "2.2.-Working-units"]], "2.3. reset_units()": [[36, "2.3.-reset_units()"]], "2.4. Setting and getting static values": [[36, "2.4.-Setting-and-getting-static-values"]], "2.4.1. Direct setting and getting": [[36, "2.4.1.-Direct-setting-and-getting"]], "2.4.2. parse()": [[36, "2.4.2.-parse()"]], "2.4.3. set_in_units() and get_in_units()": [[36, "2.4.3.-set_in_units()-and-get_in_units()"]], "2.5. set_literal()": [[36, "2.5.-set_literal()"]], "3. Data model representations": [[36, "3.-Data-model-representations"]], "3.1. model()": [[36, "3.1.-model()"]], "3.2. value_unit()": [[36, "3.2.-value_unit()"]], "3.3. error_unit()": [[36, "3.3.-error_unit()"]], "4. Unit debugging": [[36, "4.-Unit-debugging"]], "Introduction to atomman: Box class": [[37, "Introduction-to-atomman:-Box-class"]], "2. Box parameters": [[37, "2.-Box-parameters"]], "3. Initializing and setting Box parameters": [[37, "3.-Initializing-and-setting-Box-parameters"]], "3.1. Direct setting box vects and origin": [[37, "3.1.-Direct-setting-box-vects-and-origin"]], "3.2. Box initializing and Box.set() method": [[37, "3.2.-Box-initializing-and-Box.set()-method"]], "3.3. Crystal family static methods": [[37, "3.3.-Crystal-family-static-methods"]], "4. Box model": [[37, "4.-Box-model"]], "5. Characterization and utility methods": [[37, "5.-Characterization-and-utility-methods"]], "5.1. LAMMPS-compatible Boxes": [[37, "5.1.-LAMMPS-compatible-Boxes"]], "5.1.1. Box.is_lammps_norm()": [[37, "5.1.1.-Box.is_lammps_norm()"]], "5.2. Inside/outside": [[37, "5.2.-Inside/outside"]], "5.3. Vector/plane conversions": [[37, "5.3.-Vector/plane-conversions"]], "5.4. Crystal lattice identification": [[37, "5.4.-Crystal-lattice-identification"]], "Introduction to atomman: Atoms class": [[38, "Introduction-to-atomman:-Atoms-class"]], "2.1. Initialization": [[38, "2.1.-Initialization"], [62, "2.1.-Initialization"]], "2.2. Pre-defined attributes": [[38, "2.2.-Pre-defined-attributes"]], "3. Per-atom properties": [[38, "3.-Per-atom-properties"]], "3.1. List assigned per-atom properties": [[38, "3.1.-List-assigned-per-atom-properties"]], "3.2. Accessing per-atom properties": [[38, "3.2.-Accessing-per-atom-properties"]], "3.3. Setting values of existing per-atom properties": [[38, "3.3.-Setting-values-of-existing-per-atom-properties"]], "3.4. Assigning new per-atom properties": [[38, "3.4.-Assigning-new-per-atom-properties"]], "3.5. Viewing per-atom properties": [[38, "3.5.-Viewing-per-atom-properties"]], "4. Atoms by index": [[38, "4.-Atoms-by-index"]], "4.1. Getting by index": [[38, "4.1.-Getting-by-index"]], "4.2. Setting by index": [[38, "4.2.-Setting-by-index"]], "5. Atoms.extend()": [[38, "5.-Atoms.extend()"]], "6. Atoms.prop()": [[38, "6.-Atoms.prop()"]], "7. Atoms.prop_atype()": [[38, "7.-Atoms.prop_atype()"]], "8. Atoms.model()": [[38, "8.-Atoms.model()"]], "Introduction to atomman: System class": [[39, "Introduction-to-atomman:-System-class"]], "2.1. Initialization Options": [[39, "2.1.-Initialization-Options"]], "3. Built-in Attributes": [[39, "3.-Built-in-Attributes"]], "4. Scaling Additions": [[39, "4.-Scaling-Additions"]], "4.1. scale() and unscale()": [[39, "4.1.-scale()-and-unscale()"]], "4.2. atoms_prop()": [[39, "4.2.-atoms_prop()"]], "4.3. atoms_df()": [[39, "4.3.-atoms_df()"]], "4.4. box_set()": [[39, "4.4.-box_set()"]], "5. Built-in manipulations": [[39, "5.-Built-in-manipulations"]], "5.1. wrap()": [[39, "5.1.-wrap()"]], "5.2. normalize()": [[39, "5.2.-normalize()"]], "5.3. rotate()": [[39, "5.3.-rotate()"]], "5.4. supersize()": [[39, "5.4.-supersize()"]], "5.5. atoms_ix": [[39, "5.5.-atoms_ix"]], "5.6. atoms_extend()": [[39, "5.6.-atoms_extend()"]], "6. Built-in analysis tools": [[39, "6.-Built-in-analysis-tools"]], "6.1. dvect() and dmag()": [[39, "6.1.-dvect()-and-dmag()"]], "6.2. neighborlist()": [[39, "6.2.-neighborlist()"]], "6.3. r0()": [[39, "6.3.-r0()"]], "7. model() and dump()": [[39, "7.-model()-and-dump()"]], "Introduction to atomman: system_model conversions": [[40, "Introduction-to-atomman:-system_model-conversions"]], "1.1. Notes on the system model format": [[40, "1.1.-Notes-on-the-system-model-format"]], "2. Dump": [[40, "2.-Dump"], [44, "2.-Dump"]], "2.1. System.model()": [[40, "2.1.-System.model()"]], "2.1.1. Simple example": [[40, "2.1.1.-Simple-example"]], "2.1.2. Specify units and/or limit included properties": [[40, "2.1.2.-Specify-units-and/or-limit-included-properties"]], "2.2. System.dump(\u2018system_model\u2019)": [[40, "2.2.-System.dump('system_model')"]], "2.2.1. Simple example": [[40, "2.2.1.-Simple-example"]], "3. Load": [[40, "3.-Load"]], "3.1. System.__init__(model)": [[40, "3.1.-System.__init__(model)"]], "3.2. atomman.load(\u2018system_model\u2019)": [[40, "3.2.-atomman.load('system_model')"]], "3.2.1. Examples": [[40, "3.2.1.-Examples"]], "Introduction to atomman: prototype loading": [[41, "Introduction-to-atomman:-prototype-loading"]], "2. atomman.load(\u2018prototype\u2019)": [[41, "2.-atomman.load('prototype')"], [43, "2.-atomman.load('prototype')"]], "2.1. Query parameters": [[41, "2.1.-Query-parameters"]], "2.2. Modification parameters": [[41, "2.2.-Modification-parameters"]], "Introduction to atomman: crystal loading": [[42, "Introduction-to-atomman:-crystal-loading"]], "2. atomman.load(\u2018crystal\u2019)": [[42, "2.-atomman.load('crystal')"]], "Introduction to atomman: DFT reference crystal loading": [[43, "Introduction-to-atomman:-DFT-reference-crystal-loading"]], "Introduction to atomman: Primitive cell dumping": [[44, "Introduction-to-atomman:-Primitive-cell-dumping"]], "2.1. System.dump(\u2018primitive_cell\u2019)": [[44, "2.1.-System.dump('primitive_cell')"]], "Introduction to atomman: conventional-primitive cell dumping": [[45, "Introduction-to-atomman:-conventional-primitive-cell-dumping"]], "2. Dump conventional_to_primitive": [[45, "2.-Dump-conventional_to_primitive"]], "3. Dump primitive_to_conventional": [[45, "3.-Dump-primitive_to_conventional"]], "Introduction to atomman: pdb file dumping": [[46, "Introduction-to-atomman:-pdb-file-dumping"]], "2. System.dump(\u2018pdb\u2019)": [[46, "2.-System.dump('pdb')"]], "Introduction to atomman: POSCAR conversions": [[47, "Introduction-to-atomman:-POSCAR-conversions"]], "2. System.dump(\u2018poscar\u2019)": [[47, "2.-System.dump('poscar')"]], "3. atomman.load(\u2018poscar\u2019)": [[47, "3.-atomman.load('poscar')"]], "Introduction to atomman: CIF conversions": [[48, "Introduction-to-atomman:-CIF-conversions"]], "2. atomman.load(\u2018cif\u2019)": [[48, "2.-atomman.load('cif')"]], "Introduction to atomman: table conversions": [[49, "Introduction-to-atomman:-table-conversions"]], "2. System.dump(\u2018table\u2019)": [[49, "2.-System.dump('table')"]], "3. atomman.load(\u2018table\u2019)": [[49, "3.-atomman.load('table')"]], "Introduction to atomman: LAMMPS data file conversions": [[50, "Introduction-to-atomman:-LAMMPS-data-file-conversions"]], "2. atomman.load(\u2018atom_data\u2019)": [[50, "2.-atomman.load('atom_data')"]], "2.1. Basic example": [[50, "2.1.-Basic-example"]], "2.2. Different atom_styles": [[50, "2.2.-Different-atom_styles"]], "2.3. Image flag handling": [[50, "2.3.-Image-flag-handling"]], "3. System.dump(\u2018atom_data\u2019)": [[50, "3.-System.dump('atom_data')"]], "3.1. Basic example": [[50, "3.1.-Basic-example"]], "3.2. Manual modifications": [[50, "3.2.-Manual-modifications"]], "3.3. Integrated potential-data file handling": [[50, "3.3.-Integrated-potential-data-file-handling"]], "3.4. Notes on masses": [[50, "3.4.-Notes-on-masses"]], "Introduction to atomman: LAMMPS dump file conversions": [[51, "Introduction-to-atomman:-LAMMPS-dump-file-conversions"]], "2. System.dump(\u2018atom_dump\u2019)": [[51, "2.-System.dump('atom_dump')"]], "3. atomman.load(\u2018atom_dump\u2019)": [[51, "3.-atomman.load('atom_dump')"]], "Introduction to atomman: ase and phonopy conversions": [[52, "Introduction-to-atomman:-ase-and-phonopy-conversions"]], "2. System.dump(\u2018ase_Atoms\u2019) and System.dump(\u2018phonopy_Atoms\u2019)": [[52, "2.-System.dump('ase_Atoms')-and-System.dump('phonopy_Atoms')"]], "3. atomman.load(\u2018ase_Atoms\u2019) and atomman.load(\u2018phonopy_Atoms\u2019)": [[52, "3.-atomman.load('ase_Atoms')-and-atomman.load('phonopy_Atoms')"]], "Introduction to atomman: pymatgen conversions": [[53, "Introduction-to-atomman:-pymatgen-conversions"]], "2. System.dump(\u2018pymatgen_Structure\u2019)": [[53, "2.-System.dump('pymatgen_Structure')"]], "3. atomman.load(\u2018pymatgen_Structure\u2019)": [[53, "3.-atomman.load('pymatgen_Structure')"]], "Introduction to atomman: Load and dump": [[54, "Introduction-to-atomman:-Load-and-dump"]], "2. System.dump(\u2018spglib_cell\u2019)": [[54, "2.-System.dump('spglib_cell')"]], "3. atomman.load(\u2018spglib_cell\u2019)": [[54, "3.-atomman.load('spglib_cell')"]], "Introduction to atomman: Load and dump conversions": [[55, "Introduction-to-atomman:-Load-and-dump-conversions"]], "2. Load": [[55, "2.-Load"]], "2.1. atomman.load()": [[55, "2.1.-atomman.load()"]], "3. Dump": [[55, "3.-Dump"]], "3.1. atomman.dump()": [[55, "3.1.-atomman.dump()"]], "3.2. System.dump()": [[55, "3.2.-System.dump()"]], "4. Supported styles": [[55, "4.-Supported-styles"]], "Introduction to atomman: Settings and Library": [[56, "Introduction-to-atomman:-Settings-and-Library"]], "2. Settings": [[56, "2.-Settings"]], "3. Database interface": [[56, "3.-Database-interface"]], "3.1. Crystal prototypes": [[56, "3.1.-Crystal-prototypes"]], "3.1.1. get_crystal_prototypes, get_crystal_prototype, and download_crystal_prototypes": [[56, "3.1.1.-get_crystal_prototypes,-get_crystal_prototype,-and-download_crystal_prototypes"]], "3.1.2. CrystalPrototype objects": [[56, "3.1.2.-CrystalPrototype-objects"]], "3.2. Relaxed crystals": [[56, "3.2.-Relaxed-crystals"]], "3.2.1. get_relaxed_crystals, get_relaxed_crystal and download_relaxed_crystals": [[56, "3.2.1.-get_relaxed_crystals,-get_relaxed_crystal-and-download_relaxed_crystals"]], "3.2.2. RelaxedCrystal objects": [[56, "3.2.2.-RelaxedCrystal-objects"]], "3.3. DFT reference crystals": [[56, "3.3.-DFT-reference-crystals"]], "3.3.1. get_reference_crystals, get_reference_crystal, download_reference_crystal": [[56, "3.3.1.-get_reference_crystals,-get_reference_crystal,-download_reference_crystal"]], "3.3.2. fetch_reference_crystal, fetch_mp_crystals, fetch_mp_crystal, fetch_oqmd_crystal": [[56, "3.3.2.-fetch_reference_crystal,-fetch_mp_crystals,-fetch_mp_crystal,-fetch_oqmd_crystal"]], "3.3.3. ReferenceCrystal objects": [[56, "3.3.3.-ReferenceCrystal-objects"]], "3.3.4. save_reference_crystal": [[56, "3.3.4.-save_reference_crystal"]], "Introduction to atomman: Defining atomic systems": [[57, "Introduction-to-atomman:-Defining-atomic-systems"]], "2. Create a System": [[57, "2.-Create-a-System"]], "2.1. Box": [[57, "2.1.-Box"]], "2.1.1. Create Box": [[57, "2.1.1.-Create-Box"]], "2.1.2. Access Box properties": [[57, "2.1.2.-Access-Box-properties"]], "2.2. Atoms": [[57, "2.2.-Atoms"]], "2.2.1. Create Atoms": [[57, "2.2.1.-Create-Atoms"]], "2.2.2. Accessing Atoms properties": [[57, "2.2.2.-Accessing-Atoms-properties"]], "2.3. System": [[57, "2.3.-System"]], "2.3.1. Create system": [[57, "2.3.1.-Create-system"]], "2.3.2. View system": [[57, "2.3.2.-View-system"]], "3. Load a System": [[57, "3.-Load-a-System"]], "3.1. Load from POSCAR": [[57, "3.1.-Load-from-POSCAR"]], "3.2. Load a database prototype": [[57, "3.2.-Load-a-database-prototype"]], "3.3. Load a database crystal": [[57, "3.3.-Load-a-database-crystal"]], "4. System Manipulations": [[57, "4.-System-Manipulations"]], "4.1. System.rotate()": [[57, "4.1.-System.rotate()"]], "4.2. System.supersize()": [[57, "4.2.-System.supersize()"]], "4.3. Other Methods": [[57, "4.3.-Other-Methods"]], "Introduction to atomman: LAMMPS Potentials": [[58, "Introduction-to-atomman:-LAMMPS-Potentials"]], "2. Loading LAMMPS Potentials": [[58, "2.-Loading-LAMMPS-Potentials"]], "2.1. Using load_lammps_potential()": [[58, "2.1.-Using-load_lammps_potential()"]], "2.1.1. By id": [[58, "2.1.1.-By-id"]], "2.1.2. By potid": [[58, "2.1.2.-By-potid"]], "2.1.3. By category": [[58, "2.1.3.-By-category"]], "2.2. Using Database class": [[58, "2.2.-Using-Database-class"]], "2.3. From data model": [[58, "2.3.-From-data-model"]], "3. Potential Classes": [[58, "3.-Potential-Classes"]], "3.1. Potential identifiers and database metadata": [[58, "3.1.-Potential-identifiers-and-database-metadata"]], "3.2. LAMMPS settings": [[58, "3.2.-LAMMPS-settings"]], "3.3. Atom-type properties": [[58, "3.3.-Atom-type-properties"]], "3.4. Generate LAMMPS commands": [[58, "3.4.-Generate-LAMMPS-commands"]], "3.4.1. Potential directory": [[58, "3.4.1.-Potential-directory"]], "3.4.2. pair_info()": [[58, "3.4.2.-pair_info()"]], "3.4.3. System.dump(\u2018atom_data\u2019)": [[58, "3.4.3.-System.dump('atom_data')"]], "4. Building a new potential": [[58, "4.-Building-a-new-potential"]], "5. potential_LAMMPS Data Model": [[58, "5.-potential_LAMMPS-Data-Model"]], "5.1. potential_LAMMPS data model schema": [[58, "5.1.-potential_LAMMPS-data-model-schema"]], "5.1.1. The \u201cpotential\u201d branch": [[58, "5.1.1.-The-%22potential%22-branch"]], "5.1.2. The \u201catom\u201d branch": [[58, "5.1.2.-The-%22atom%22-branch"]], "5.1.3. The \u201cpair_style\u201d branch": [[58, "5.1.3.-The-%22pair_style%22-branch"]], "5.1.4. The \u201cpair_coeff\u201d branch": [[58, "5.1.4.-The-%22pair_coeff%22-branch"]], "5.1.5. The \u201ccommand\u201d branch": [[58, "5.1.5.-The-%22command%22-branch"]], "5.2. Example data models": [[58, "5.2.-Example-data-models"]], "5.2.1. Lennard-Jones and other two-body style potentials": [[58, "5.2.1.-Lennard-Jones-and-other-two-body-style-potentials"]], "5.2.2. eam/alloy and other many-body potentials from single parameter files": [[58, "5.2.2.-eam/alloy-and-other-many-body-potentials-from-single-parameter-files"]], "5.2.3. COMB and other potentials requiring additional commands": [[58, "5.2.3.-COMB-and-other-potentials-requiring-additional-commands"]], "5.2.4. MEAM and other many-body potentials with library and parameter files": [[58, "5.2.4.-MEAM-and-other-many-body-potentials-with-library-and-parameter-files"]], "5.2.5. hybrid-style potentials": [[58, "5.2.5.-hybrid-style-potentials"]], "5.2.6. Original eam pair_style": [[58, "5.2.6.-Original-eam-pair_style"]], "5.2.7 Columbic pair_style": [[58, "5.2.7-Columbic-pair_style"]], "Introduction to atomman: Running LAMMPS and the Log class": [[59, "Introduction-to-atomman:-Running-LAMMPS-and-the-Log-class"]], "2. Running LAMMPS": [[59, "2.-Running-LAMMPS"]], "3. Accessing results with Log class": [[59, "3.-Accessing-results-with-Log-class"]], "4. Restarting and flattening": [[59, "4.-Restarting-and-flattening"]], "4.1. Running with restart script included": [[59, "4.1.-Running-with-restart-script-included"]], "4.2. Flattening data from multiple simulations together": [[59, "4.2.-Flattening-data-from-multiple-simulations-together"]], "5. Error messages": [[59, "5.-Error-messages"]], "Introduction to atomman: LAMMPS functionality": [[60, "Introduction-to-atomman:-LAMMPS-functionality"]], "2. Interatomic Potential Control": [[60, "2.-Interatomic-Potential-Control"]], "2.1. Load potential from database": [[60, "2.1.-Load-potential-from-database"]], "2.2. Potential parameter files": [[60, "2.2.-Potential-parameter-files"]], "2.3. lammps.Potential Class": [[60, "2.3.-lammps.Potential-Class"]], "3. Generate initial system": [[60, "3.-Generate-initial-system"]], "3.1. Load relaxed crystal": [[60, "3.1.-Load-relaxed-crystal"]], "3.2. Manipulate system": [[60, "3.2.-Manipulate-system"]], "3.3. Save to atom data file": [[60, "3.3.-Save-to-atom-data-file"]], "4. Converting to/from LAMMPS units": [[60, "4.-Converting-to/from-LAMMPS-units"]], "5. Composing LAMMPS Input Scripts": [[60, "5.-Composing-LAMMPS-Input-Scripts"]], "5.1. Show content generated in previous sections": [[60, "5.1.-Show-content-generated-in-previous-sections"]], "5.2. Write LAMMPS input script template": [[60, "5.2.-Write-LAMMPS-input-script-template"]], "5.3. Fill in the template with atomman.tools.filltemplate()": [[60, "5.3.-Fill-in-the-template-with-atomman.tools.filltemplate()"]], "6. Run LAMMPS": [[60, "6.-Run-LAMMPS"]], "7. Analyzing Thermo Results": [[60, "7.-Analyzing-Thermo-Results"]], "8 Reading in dump files": [[60, "8-Reading-in-dump-files"]], "Introduction to atomman: ElasticConstants class": [[61, "Introduction-to-atomman:-ElasticConstants-class"]], "2. Elastic constants representations": [[61, "2.-Elastic-constants-representations"]], "2.1. Build demonstration (see Section #3 for more setting options)": [[61, "2.1.-Build-demonstration-(see-Section-#3-for-more-setting-options)"]], "2.2. Show different representations": [[61, "2.2.-Show-different-representations"]], "3. Setting values": [[61, "3.-Setting-values"]], "3.1. Setting using attributes": [[61, "3.1.-Setting-using-attributes"]], "3.2. Setting using crystal-specific constants": [[61, "3.2.-Setting-using-crystal-specific-constants"]], "4. ElasticConstants.tranform()": [[61, "4.-ElasticConstants.tranform()"]], "5. Shear and bulk modulus estimates": [[61, "5.-Shear-and-bulk-modulus-estimates"]], "5.1. ElasticConstants.bulk()": [[61, "5.1.-ElasticConstants.bulk()"]], "5.2. ElasticConstants.shear()": [[61, "5.2.-ElasticConstants.shear()"]], "6. Crystal system normalized values": [[61, "6.-Crystal-system-normalized-values"]], "6.1. ElasticConstants.normalized_as()": [[61, "6.1.-ElasticConstants.normalized_as()"]], "6.2. is_normal()": [[61, "6.2.-is_normal()"]], "7. ElasticConstants.model()": [[61, "7.-ElasticConstants.model()"]], "Introduction to atomman: NeighborList class": [[62, "Introduction-to-atomman:-NeighborList-class"]], "1.1. Theory and methodology": [[62, "1.1.-Theory-and-methodology"]], "2. Identifying neighbors": [[62, "2.-Identifying-neighbors"]], "2.2. The coord attribute": [[62, "2.2.-The-coord-attribute"]], "2.3. Per-atom neighbor lists": [[62, "2.3.-Per-atom-neighbor-lists"]], "3. build()": [[62, "3.-build()"]], "4. dump() and load()": [[62, "4.-dump()-and-load()"]], "4.1. dump()": [[62, "4.1.-dump()"]], "4.2. load()": [[62, "4.2.-load()"]], "4.3. Load on initializing": [[62, "4.3.-Load-on-initializing"]], "Introduction to atomman: Region selectors": [[63, "Introduction-to-atomman:-Region-selectors"]], "2. Plane slicing": [[63, "2.-Plane-slicing"]], "2.1. Initializing a Plane": [[63, "2.1.-Initializing-a-Plane"]], "2.2. Plane.above() and Plane.below()": [[63, "2.2.-Plane.above()-and-Plane.below()"]], "2.3. Examples": [[63, "2.3.-Examples"]], "3. Volume selection": [[63, "3.-Volume-selection"]], "3.1. Shape.inside() and Shape.outside()": [[63, "3.1.-Shape.inside()-and-Shape.outside()"]], "3.2. Box": [[63, "3.2.-Box"]], "3.3. Sphere": [[63, "3.3.-Sphere"]], "3.4. Cylinder": [[63, "3.4.-Cylinder"]], "3.5. PlaneSet": [[63, "3.5.-PlaneSet"]], "Introduction to atomman: Minimum energy paths": [[64, "Introduction-to-atomman:-Minimum-energy-paths"]], "2. Theory and Methodology": [[64, "2.-Theory-and-Methodology"]], "3. BasePath class and common setup": [[64, "3.-BasePath-class-and-common-setup"]], "3.1. Path initialization": [[64, "3.1.-Path-initialization"]], "3.2. gradientfxn, gradientkwargs and integratorfxn": [[64, "3.2.-gradientfxn,-gradientkwargs-and-integratorfxn"]], "3.3. Common Path attributes": [[64, "3.3.-Common-Path-attributes"]], "3.4. Common Path methods": [[64, "3.4.-Common-Path-methods"]], "4. ISMPath": [[64, "4.-ISMPath"]], "4.1. Improved string method theory": [[64, "4.1.-Improved-string-method-theory"]], "4.2. ISMPath specific methods and attributes": [[64, "4.2.-ISMPath-specific-methods-and-attributes"]], "4.2.1. ISMPath.step()": [[64, "4.2.1.-ISMPath.step()"]], "4.2.2. ISMPath.relax()": [[64, "4.2.2.-ISMPath.relax()"]], "Introduction to atomman: Cluster generators": [[65, "Introduction-to-atomman:-Cluster-generators"]], "1. BondAngleMap": [[65, "1.-BondAngleMap"]], "1.1. Method and theory": [[65, "1.1.-Method-and-theory"]], "1.2. Initializing a BondAngleMap": [[65, "1.2.-Initializing-a-BondAngleMap"]], "1.3. Iterators": [[65, "1.3.-Iterators"]], "1.3.1. itercoords": [[65, "1.3.1.-itercoords"]], "1.3.2. itersystems()": [[65, "1.3.2.-itersystems()"]], "1.4. Data representations": [[65, "1.4.-Data-representations"]], "1.4.1. df": [[65, "1.4.1.-df"]], "1.4.2. model()": [[65, "1.4.2.-model()"]], "1.4.3. save_table()": [[65, "1.4.3.-save_table()"]], "1.5 Data analysis methods": [[65, "1.5-Data-analysis-methods"]], "1.5.1. pdf()": [[65, "1.5.1.-pdf()"]], "1.5.2. cumulative_pdf()": [[65, "1.5.2.-cumulative_pdf()"]], "1.5.3. plot_pdf()": [[65, "1.5.3.-plot_pdf()"]], "1.5.4. plot_cumulative_pdf()": [[65, "1.5.4.-plot_cumulative_pdf()"]], "Introduction to atomman: Basic support and analysis tools": [[66, "Introduction-to-atomman:-Basic-support-and-analysis-tools"]], "2. Elastic constants": [[66, "2.-Elastic-constants"]], "3. Relative distances between atoms": [[66, "3.-Relative-distances-between-atoms"]], "3.1. System.dvect()": [[66, "3.1.-System.dvect()"]], "3.2. System.dmag()": [[66, "3.2.-System.dmag()"]], "3.3. displacement()": [[66, "3.3.-displacement()"]], "3.4. System.neighborlist()": [[66, "3.4.-System.neighborlist()"]], "4. Region selectors": [[66, "4.-Region-selectors"]], "5. Basic tools": [[66, "5.-Basic-tools"]], "5.1. Atomic information": [[66, "5.1.-Atomic-information"]], "5.2. axes_check()": [[66, "5.2.-axes_check()"]], "5.3. filltemplate()": [[66, "5.3.-filltemplate()"]], "5.4. indexstr()": [[66, "5.4.-indexstr()"]], "5.5. uber_open_rmode": [[66, "5.5.-uber_open_rmode"]], "5.6. vect_angle()": [[66, "5.6.-vect_angle()"]], "5.7. duplicates_allclose()": [[66, "5.7.-duplicates_allclose()"]], "5.8. Miller index conversions": [[66, "5.8.-Miller-index-conversions"]], "5.9. Crystal lattice identification": [[66, "5.9.-Crystal-lattice-identification"]], "5.10. compositionstr()": [[66, "5.10.-compositionstr()"]], "Introduction to atomman: Point defect generation": [[67, "Introduction-to-atomman:-Point-defect-generation"]], "2. atomman.defect.vacancy()": [[67, "2.-atomman.defect.vacancy()"]], "3. atomman.defect.interstitial()": [[67, "3.-atomman.defect.interstitial()"]], "4. atomman.defect.substitutional()": [[67, "4.-atomman.defect.substitutional()"]], "5. atomman.defect.dumbbell()": [[67, "5.-atomman.defect.dumbbell()"]], "6. atomman.defect.point()": [[67, "6.-atomman.defect.point()"]], "Introduction to atomman: Free surface generator": [[68, "Introduction-to-atomman:-Free-surface-generator"]], "2. Theory": [[68, "2.-Theory"], [69, "2.-Theory"], [70, "2.-Theory"], [73, "2.-Theory"], [74, "2.-Theory"], [75, "2.-Theory"]], "3. Class basics": [[68, "3.-Class-basics"], [69, "3.-Class-basics"]], "3.1. FreeSurface initialization": [[68, "3.1.-FreeSurface-initialization"]], "3.2. FreeSurface.surface()": [[68, "3.2.-FreeSurface.surface()"]], "4. Examples": [[68, "4.-Examples"], [69, "4.-Examples"]], "4.1. Conventional bcc unit cell": [[68, "4.1.-Conventional-bcc-unit-cell"]], "4.1.1. Define a bcc conventional cell and initialize a FreeSurface": [[68, "4.1.1.-Define-a-bcc-conventional-cell-and-initialize-a-FreeSurface"]], "4.1.2. Check the identified rotated system": [[68, "4.1.2.-Check-the-identified-rotated-system"], [68, "id1"], [68, "id3"], [69, "4.1.2.-Check-the-identified-rotated-system"]], "4.1.3. Build the free surface configuration": [[68, "4.1.3.-Build-the-free-surface-configuration"], [68, "id2"], [68, "id4"], [69, "4.1.3.-Build-the-free-surface-configuration"]], "4.2. Primitive bcc unit cell": [[68, "4.2.-Primitive-bcc-unit-cell"]], "4.2.1. Define a primitive bcc unit cell and initialize a FreeSurface": [[68, "4.2.1.-Define-a-primitive-bcc-unit-cell-and-initialize-a-FreeSurface"]], "4.3. hcp unit cell": [[68, "4.3.-hcp-unit-cell"]], "4.3.1. Define an hcp unit cell and initialize a FreeSurface": [[68, "4.3.1.-Define-an-hcp-unit-cell-and-initialize-a-FreeSurface"]], "Introduction to atomman: Stacking fault generator": [[69, "Introduction-to-atomman:-Stacking-fault-generator"]], "3.1. StackingFault initialization": [[69, "3.1.-StackingFault-initialization"]], "3.2. StackingFault.surface()": [[69, "3.2.-StackingFault.surface()"]], "3.3. StackingFault.fault()": [[69, "3.3.-StackingFault.fault()"]], "3.4. StackingFault.iterfaultmap()": [[69, "3.4.-StackingFault.iterfaultmap()"]], "4.1. fcc \\{111\\}": [[69, "4.1.-fcc-\\{111\\}"]], "4.1.1. Define an fcc conventional cell and initialize a StackingFault": [[69, "4.1.1.-Define-an-fcc-conventional-cell-and-initialize-a-StackingFault"]], "4.1.4. Check the free surface system and fault position": [[69, "4.1.4.-Check-the-free-surface-system-and-fault-position"]], "4.1.5. Generate stacking fault configuration(s)": [[69, "4.1.5.-Generate-stacking-fault-configuration(s)"]], "4.2. fcc {111} using primitive unit cell": [[69, "4.2.-fcc-{111}-using-primitive-unit-cell"]], "4.2.1. Define an fcc primitive cell and initialize a StackingFault": [[69, "4.2.1.-Define-an-fcc-primitive-cell-and-initialize-a-StackingFault"]], "4.2.2. Check the identified rotated system and shift vectors": [[69, "4.2.2.-Check-the-identified-rotated-system-and-shift-vectors"]], "4.2.3. Build the free surface configuration": [[69, "4.2.3.-Build-the-free-surface-configuration"]], "4.2.4. Check the free surface system and fault position": [[69, "4.2.4.-Check-the-free-surface-system-and-fault-position"]], "4.2.5. Generate stacking fault configuration(s)": [[69, "4.2.5.-Generate-stacking-fault-configuration(s)"]], "4.3. hcp {0001} slip plane": [[69, "4.3.-hcp-{0001}-slip-plane"]], "4.3.1. Define an fcc primitive cell and initialize a StackingFault": [[69, "4.3.1.-Define-an-fcc-primitive-cell-and-initialize-a-StackingFault"]], "4.3.2. Check the identified rotated system and shift vectors": [[69, "4.3.2.-Check-the-identified-rotated-system-and-shift-vectors"]], "Introduction to atomman: Volterra dislocation solutions": [[70, "Introduction-to-atomman:-Volterra-dislocation-solutions"]], "2.1. Isotropic solution": [[70, "2.1.-Isotropic-solution"]], "2.2. Anisotropic solution": [[70, "2.2.-Anisotropic-solution"]], "3. Volterra dislocation methods and objects": [[70, "3.-Volterra-dislocation-methods-and-objects"]], "3.1. Build solution": [[70, "3.1.-Build-solution"]], "3.2. Compute properties": [[70, "3.2.-Compute-properties"]], "4. Direct check of strain energy": [[70, "4.-Direct-check-of-strain-energy"]], "Introduction to atomman: Gamma surface plotting": [[71, "Introduction-to-atomman:-Gamma-surface-plotting"]], "2. Underlying theory": [[71, "2.-Underlying-theory"]], "3. Defining gamma surface data": [[71, "3.-Defining-gamma-surface-data"]], "3.1. Setting values": [[71, "3.1.-Setting-values"]], "3.2. Class attributes": [[71, "3.2.-Class-attributes"]], "3.3. Saving and loading data model": [[71, "3.3.-Saving-and-loading-data-model"]], "3.3.1. Save data model": [[71, "3.3.1.-Save-data-model"]], "3.3.2. Load data model": [[71, "3.3.2.-Load-data-model"]], "4. Plotting methods": [[71, "4.-Plotting-methods"]], "4.1. E_gsf_line_plot()": [[71, "4.1.-E_gsf_line_plot()"]], "4.2. delta_line_plot()": [[71, "4.2.-delta_line_plot()"]], "4.3. E_gsf_surface_plot()": [[71, "4.3.-E_gsf_surface_plot()"]], "4.4. delta_surface_plot()": [[71, "4.4.-delta_surface_plot()"]], "5. Minimum energy slip path": [[71, "5.-Minimum-energy-slip-path"]], "6. Utility methods": [[71, "6.-Utility-methods"]], "6.1. E_gsf()": [[71, "6.1.-E_gsf()"]], "6.2 delta()": [[71, "6.2-delta()"]], "6.3 Conversion methods": [[71, "6.3-Conversion-methods"]], "Introduction to atomman: Dislocation analysis tools": [[72, "Introduction-to-atomman:-Dislocation-analysis-tools"]], "1.1. Load atomic systems": [[72, "1.1.-Load-atomic-systems"]], "2. Slip vector": [[72, "2.-Slip-vector"]], "2.1. slip_vector()": [[72, "2.1.-slip_vector()"]], "3. Disregistry": [[72, "3.-Disregistry"]], "3.1. disregistry()": [[72, "3.1.-disregistry()"]], "4. Nye tensor": [[72, "4.-Nye-tensor"]], "5. Differential displacement maps": [[72, "5.-Differential-displacement-maps"]], "5.1. DifferentialDisplacement initialization/solve": [[72, "5.1.-DifferentialDisplacement-initialization/solve"]], "5.2. DifferentialDisplacement plotting": [[72, "5.2.-DifferentialDisplacement-plotting"]], "5.2.1. Common plotting variations": [[72, "5.2.1.-Common-plotting-variations"]], "5.2.2. The Cartesian components": [[72, "5.2.2.-The-Cartesian-components"]], "5.2.3. Parallel to Burgers (or any other Cartesian vector)": [[72, "5.2.3.-Parallel-to-Burgers-(or-any-other-Cartesian-vector)"]], "5.2.4. Radial": [[72, "5.2.4.-Radial"]], "5.3. Raw differential displacement data": [[72, "5.3.-Raw-differential-displacement-data"]], "Introduction to atomman: Semidiscrete variational Peierls-Nabarro model": [[73, "Introduction-to-atomman:-Semidiscrete-variational-Peierls-Nabarro-model"]], "2.1. Disregistry and dislocation density": [[73, "2.1.-Disregistry-and-dislocation-density"]], "2.2. Semidiscrete variational Peierls-Nabarro model": [[73, "2.2.-Semidiscrete-variational-Peierls-Nabarro-model"]], "2.3. Elastic energy": [[73, "2.3.-Elastic-energy"]], "2.4. Misfit energy": [[73, "2.4.-Misfit-energy"]], "2.5. Stress energy": [[73, "2.5.-Stress-energy"]], "2.6. Surface energy": [[73, "2.6.-Surface-energy"]], "2.7. Nonlocal energy": [[73, "2.7.-Nonlocal-energy"]], "3. Methodology overview": [[73, "3.-Methodology-overview"]], "4. Initialize SDVPN using GammaSurface and VolterraDislocation": [[73, "4.-Initialize-SDVPN-using-GammaSurface-and-VolterraDislocation"]], "4.1. Load \\gamma surface results": [[73, "4.1.-Load-\\gamma-surface-results"]], "4.2. Get a Volterra dislocation solution": [[73, "4.2.-Get-a-Volterra-dislocation-solution"]], "4.3. Initializing an SDVPN object": [[73, "4.3.-Initializing-an-SDVPN-object"]], "5. Generate initial disregistry": [[73, "5.-Generate-initial-disregistry"]], "5.1 Initial disregistry": [[73, "5.1-Initial-disregistry"]], "5.2 Check initial disregistry": [[73, "5.2-Check-initial-disregistry"]], "6. Solve SDVPN model": [[73, "6.-Solve-SDVPN-model"]], "6.1. Call solve the first time": [[73, "6.1.-Call-solve-the-first-time"]], "6.2. Check results": [[73, "6.2.-Check-results"]], "6.3. Repeat minimization": [[73, "6.3.-Repeat-minimization"]], "6.4. Check results": [[73, "6.4.-Check-results"]], "7. Save and load results": [[73, "7.-Save-and-load-results"]], "8. Peierls stress estimates": [[73, "8.-Peierls-stress-estimates"]], "Introduction to atomman: Strain class": [[74, "Introduction-to-atomman:-Strain-class"]], "2.1. Strain correspodence tensor": [[74, "2.1.-Strain-correspodence-tensor"]], "2.2. Derived properties": [[74, "2.2.-Derived-properties"]], "2.3. Nye tensor": [[74, "2.3.-Nye-tensor"]], "3. Calculation parameter options": [[74, "3.-Calculation-parameter-options"]], "3.1. Reference state selection": [[74, "3.1.-Reference-state-selection"]], "3.2. Neighbor cutoff": [[74, "3.2.-Neighbor-cutoff"]], "3.3. Angle cutoff": [[74, "3.3.-Angle-cutoff"]], "4. Strain class": [[74, "4.-Strain-class"]], "4.1. Load systems": [[74, "4.1.-Load-systems"]], "4.2. Initialize strain class": [[74, "4.2.-Initialize-strain-class"]], "4.3. Class properties": [[74, "4.3.-Class-properties"]], "4.4. Save to system": [[74, "4.4.-Save-to-system"]], "4.5. asdict": [[74, "4.5.-asdict"]], "5. Plotting": [[74, "5.-Plotting"]], "5.1. Plot settings": [[74, "5.1.-Plot-settings"]], "5.2. Examples": [[74, "5.2.-Examples"]], "5.3. Nye tensor plots": [[74, "5.3.-Nye-tensor-plots"]], "Introduction to atomman: Dislocation solution and generator": [[75, "Introduction-to-atomman:-Dislocation-solution-and-generator"]], "2.1. Dislocation definition": [[75, "2.1.-Dislocation-definition"]], "2.2. Dislocation solution": [[75, "2.2.-Dislocation-solution"]], "2.3. Atomic orientation of the dislocation": [[75, "2.3.-Atomic-orientation-of-the-dislocation"]], "2.3.1. Crystal orientation": [[75, "2.3.1.-Crystal-orientation"]], "2.3.2. Note for conventional unit cells": [[75, "2.3.2.-Note-for-conventional-unit-cells"]], "2.3.3. Atomic alignment": [[75, "2.3.3.-Atomic-alignment"]], "3. Dislocation initialization": [[75, "3.-Dislocation-initialization"]], "3.1. Define an Al fcc a/2<110>{111} Dislocation": [[75, "3.1.-Define-an-Al-fcc-a/2<110>{111}-Dislocation"]], "3.2. Check the fcc Dislocation": [[75, "3.2.-Check-the-fcc-Dislocation"]], "3.2.1. Volterra dislocation solution": [[75, "3.2.1.-Volterra-dislocation-solution"]], "3.2.2. Orientation checks:": [[75, "3.2.2.-Orientation-checks:"]], "3.2.3. Shift terms": [[75, "3.2.3.-Shift-terms"]], "3.3. Define an Fe bcc a/2<111>{110} screw dislocation": [[75, "3.3.-Define-an-Fe-bcc-a/2<111>{110}-screw-dislocation"]], "3.4. Check the bcc Dislocation": [[75, "3.4.-Check-the-bcc-Dislocation"]], "4. Dislocation Monopole Configuration": [[75, "4.-Dislocation-Monopole-Configuration"]], "4.1. Boundary conditions": [[75, "4.1.-Boundary-conditions"]], "4.2. The monopole() method": [[75, "4.2.-The-monopole()-method"]], "4.3. bcc screw dislocation monopole": [[75, "4.3.-bcc-screw-dislocation-monopole"]], "4.4. Core structure observations": [[75, "4.4.-Core-structure-observations"]], "5. Periodic Array of Dislocations Configuration": [[75, "5.-Periodic-Array-of-Dislocations-Configuration"]], "5.1. Boundary conditions": [[75, "5.1.-Boundary-conditions"]], "5.1.1. Atomic coherency": [[75, "5.1.1.-Atomic-coherency"]], "5.1.2. Linear gradient displacement": [[75, "5.1.2.-Linear-gradient-displacement"]], "5.2. The periodicarray() method": [[75, "5.2.-The-periodicarray()-method"]], "5.3. Small atomic system example, easy to see atomic positions": [[75, "5.3.-Small-atomic-system-example,-easy-to-see-atomic-positions"]], "5.4. Large atomic system example, more useful for simulations": [[75, "5.4.-Large-atomic-system-example,-more-useful-for-simulations"]], "5.5. Linear gradient displacements only": [[75, "5.5.-Linear-gradient-displacements-only"]], "6. Dislocation dipole configuration": [[75, "6.-Dislocation-dipole-configuration"]], "6.1. Boundary conditions": [[75, "6.1.-Boundary-conditions"]], "6.1.1. 2D dislocation grid and box vectors": [[75, "6.1.1.-2D-dislocation-grid-and-box-vectors"]], "6.2. Dipole displacement field": [[75, "6.2.-Dipole-displacement-field"]], "6.2.1. Dipole in an infinite medium": [[75, "6.2.1.-Dipole-in-an-infinite-medium"]], "6.2.2. Periodic dipoles": [[75, "6.2.2.-Periodic-dipoles"]], "6.2.3. Correction term": [[75, "6.2.3.-Correction-term"]], "6.3. The dipole() method": [[75, "6.3.-The-dipole()-method"]], "Introduction to atomman: Defect creation and analysis": [[76, "Introduction-to-atomman:-Defect-creation-and-analysis"]], "2. Point defects": [[76, "2.-Point-defects"]], "3. Free surfaces": [[76, "3.-Free-surfaces"]], "4. Stacking faults": [[76, "4.-Stacking-faults"]], "5. Dislocations": [[76, "5.-Dislocations"]], "6. Strain class": [[76, "6.-Strain-class"]]}, "indexentries": {"atomman": [[0, "module-atomman"]], "build_lammps_potential() (in module atomman)": [[0, "atomman.build_lammps_potential"]], "displacement() (in module atomman)": [[0, "atomman.displacement"]], "dmag() (in module atomman)": [[0, "atomman.dmag"]], "dump() (in module atomman)": [[0, "atomman.dump"]], "dvect() (in module atomman)": [[0, "atomman.dvect"]], "load() (in module atomman)": [[0, "atomman.load"]], "module": [[0, "module-atomman"], [8, "module-atomman.defect"], [19, "module-atomman.lammps"], [19, "module-atomman.lammps.Potential"], [19, "module-atomman.lammps.style"], [28, "module-atomman.mep"], [28, "module-atomman.mep.gradient"], [28, "module-atomman.mep.integrator"], [31, "module-atomman.plot"], [32, "module-atomman.region"], [33, "module-atomman.tools"], [33, "module-atomman.tools.miller"], [34, "module-atomman.unitconvert"]], "nlist() (in module atomman)": [[0, "atomman.nlist"]], "atoms (class in atomman)": [[1, "atomman.Atoms"]], "atoms.propertydict (class in atomman)": [[1, "atomman.Atoms.PropertyDict"]], "atypes (atomman.atoms property)": [[1, "atomman.Atoms.atypes"]], "df() (atomman.atoms method)": [[1, "atomman.Atoms.df"]], "extend() (atomman.atoms method)": [[1, "atomman.Atoms.extend"]], "model() (atomman.atoms method)": [[1, "atomman.Atoms.model"]], "natoms (atomman.atoms property)": [[1, "atomman.Atoms.natoms"]], "natypes (atomman.atoms property)": [[1, "atomman.Atoms.natypes"]], "prop() (atomman.atoms method)": [[1, "atomman.Atoms.prop"]], "prop_atype() (atomman.atoms method)": [[1, "atomman.Atoms.prop_atype"]], "view (atomman.atoms property)": [[1, "atomman.Atoms.view"]], "box (class in atomman)": [[2, "atomman.Box"]], "a (atomman.box property)": [[2, "atomman.Box.a"]], "alpha (atomman.box property)": [[2, "atomman.Box.alpha"]], "avect (atomman.box property)": [[2, "atomman.Box.avect"]], "b (atomman.box property)": [[2, "atomman.Box.b"]], "beta (atomman.box property)": [[2, "atomman.Box.beta"]], "bvect (atomman.box property)": [[2, "atomman.Box.bvect"]], "c (atomman.box property)": [[2, "atomman.Box.c"]], "cubic() (atomman.box class method)": [[2, "atomman.Box.cubic"]], "cvect (atomman.box property)": [[2, "atomman.Box.cvect"]], "gamma (atomman.box property)": [[2, "atomman.Box.gamma"]], "hexagonal() (atomman.box class method)": [[2, "atomman.Box.hexagonal"]], "identifyfamily() (atomman.box method)": [[2, "atomman.Box.identifyfamily"]], "inside() (atomman.box method)": [[2, "atomman.Box.inside"]], "is_lammps_norm() (atomman.box method)": [[2, "atomman.Box.is_lammps_norm"]], "iscubic() (atomman.box method)": [[2, "atomman.Box.iscubic"]], "ishexagonal() (atomman.box method)": [[2, "atomman.Box.ishexagonal"]], "ismonoclinic() (atomman.box method)": [[2, "atomman.Box.ismonoclinic"]], "isorthorhombic() (atomman.box method)": [[2, "atomman.Box.isorthorhombic"]], "isrhombohedral() (atomman.box method)": [[2, "atomman.Box.isrhombohedral"]], "istetragonal() (atomman.box method)": [[2, "atomman.Box.istetragonal"]], "istriclinic() (atomman.box method)": [[2, "atomman.Box.istriclinic"]], "lx (atomman.box property)": [[2, "atomman.Box.lx"]], "ly (atomman.box property)": [[2, "atomman.Box.ly"]], "lz (atomman.box property)": [[2, "atomman.Box.lz"]], "model() (atomman.box method)": [[2, "atomman.Box.model"]], "monoclinic() (atomman.box class method)": [[2, "atomman.Box.monoclinic"]], "origin (atomman.box property)": [[2, "atomman.Box.origin"]], "orthorhombic() (atomman.box class method)": [[2, "atomman.Box.orthorhombic"]], "plane_crystal_to_cartesian() (atomman.box method)": [[2, "atomman.Box.plane_crystal_to_cartesian"]], "planes (atomman.box property)": [[2, "atomman.Box.planes"]], "position_cartesian_to_relative() (atomman.box method)": [[2, "atomman.Box.position_cartesian_to_relative"]], "position_relative_to_cartesian() (atomman.box method)": [[2, "atomman.Box.position_relative_to_cartesian"]], "reciprocal_vects (atomman.box property)": [[2, "atomman.Box.reciprocal_vects"]], "set() (atomman.box method)": [[2, "atomman.Box.set"]], "set_abc() (atomman.box method)": [[2, "atomman.Box.set_abc"]], "set_hi_los() (atomman.box method)": [[2, "atomman.Box.set_hi_los"]], "set_lengths() (atomman.box method)": [[2, "atomman.Box.set_lengths"]], "set_vectors() (atomman.box method)": [[2, "atomman.Box.set_vectors"]], "tetragonal() (atomman.box class method)": [[2, "atomman.Box.tetragonal"]], "triclinic() (atomman.box class method)": [[2, "atomman.Box.triclinic"]], "trigonal() (atomman.box class method)": [[2, "atomman.Box.trigonal"]], "vector_crystal_to_cartesian() (atomman.box method)": [[2, "atomman.Box.vector_crystal_to_cartesian"]], "vects (atomman.box property)": [[2, "atomman.Box.vects"]], "volume (atomman.box property)": [[2, "atomman.Box.volume"]], "xhi (atomman.box property)": [[2, "atomman.Box.xhi"]], "xlo (atomman.box property)": [[2, "atomman.Box.xlo"]], "xy (atomman.box property)": [[2, "atomman.Box.xy"]], "xz (atomman.box property)": [[2, "atomman.Box.xz"]], "yhi (atomman.box property)": [[2, "atomman.Box.yhi"]], "ylo (atomman.box property)": [[2, "atomman.Box.ylo"]], "yz (atomman.box property)": [[2, "atomman.Box.yz"]], "zhi (atomman.box property)": [[2, "atomman.Box.zhi"]], "zlo (atomman.box property)": [[2, "atomman.Box.zlo"]], "cij (atomman.elasticconstants property)": [[3, "atomman.ElasticConstants.Cij"]], "cij9 (atomman.elasticconstants property)": [[3, "atomman.ElasticConstants.Cij9"]], "cijkl (atomman.elasticconstants property)": [[3, "atomman.ElasticConstants.Cijkl"]], "elasticconstants (class in atomman)": [[3, "atomman.ElasticConstants"]], "sij (atomman.elasticconstants property)": [[3, "atomman.ElasticConstants.Sij"]], "sijkl (atomman.elasticconstants property)": [[3, "atomman.ElasticConstants.Sijkl"]], "bulk() (atomman.elasticconstants method)": [[3, "atomman.ElasticConstants.bulk"]], "cubic() (atomman.elasticconstants method)": [[3, "atomman.ElasticConstants.cubic"]], "hexagonal() (atomman.elasticconstants method)": [[3, "atomman.ElasticConstants.hexagonal"]], "is_normal() (atomman.elasticconstants method)": [[3, "atomman.ElasticConstants.is_normal"]], "isotropic() (atomman.elasticconstants method)": [[3, "atomman.ElasticConstants.isotropic"]], "model() (atomman.elasticconstants method)": [[3, "atomman.ElasticConstants.model"]], "monoclinic() (atomman.elasticconstants method)": [[3, "atomman.ElasticConstants.monoclinic"]], "normalized_as() (atomman.elasticconstants method)": [[3, "atomman.ElasticConstants.normalized_as"]], "orthorhombic() (atomman.elasticconstants method)": [[3, "atomman.ElasticConstants.orthorhombic"]], "rhombohedral() (atomman.elasticconstants method)": [[3, "atomman.ElasticConstants.rhombohedral"]], "shear() (atomman.elasticconstants method)": [[3, "atomman.ElasticConstants.shear"]], "tetragonal() (atomman.elasticconstants method)": [[3, "atomman.ElasticConstants.tetragonal"]], "transform() (atomman.elasticconstants method)": [[3, "atomman.ElasticConstants.transform"]], "triclinic() (atomman.elasticconstants method)": [[3, "atomman.ElasticConstants.triclinic"]], "neighborlist (class in atomman)": [[4, "atomman.NeighborList"]], "build() (atomman.neighborlist method)": [[4, "atomman.NeighborList.build"]], "coord (atomman.neighborlist property)": [[4, "atomman.NeighborList.coord"]], "dump() (atomman.neighborlist method)": [[4, "atomman.NeighborList.dump"]], "load() (atomman.neighborlist method)": [[4, "atomman.NeighborList.load"]], "nlist (atomman.neighborlist property)": [[4, "atomman.NeighborList.nlist"]], "system (class in atomman)": [[5, "atomman.System"]], "atoms (atomman.system property)": [[5, "atomman.System.atoms"]], "atoms_df() (atomman.system method)": [[5, "atomman.System.atoms_df"]], "atoms_extend() (atomman.system method)": [[5, "atomman.System.atoms_extend"]], "atoms_ix (atomman.system property)": [[5, "atomman.System.atoms_ix"]], "atoms_prop() (atomman.system method)": [[5, "atomman.System.atoms_prop"]], "atypes (atomman.system property)": [[5, "atomman.System.atypes"]], "box (atomman.system property)": [[5, "atomman.System.box"]], "box_set() (atomman.system method)": [[5, "atomman.System.box_set"]], "composition (atomman.system property)": [[5, "atomman.System.composition"]], "dmag() (atomman.system method)": [[5, "atomman.System.dmag"]], "dump() (atomman.system method)": [[5, "atomman.System.dump"]], "dvect() (atomman.system method)": [[5, "atomman.System.dvect"]], "masses (atomman.system property)": [[5, "atomman.System.masses"]], "model() (atomman.system method)": [[5, "atomman.System.model"]], "natoms (atomman.system property)": [[5, "atomman.System.natoms"]], "natypes (atomman.system property)": [[5, "atomman.System.natypes"]], "neighborlist() (atomman.system method)": [[5, "atomman.System.neighborlist"]], "normalize() (atomman.system method)": [[5, "atomman.System.normalize"]], "pbc (atomman.system property)": [[5, "atomman.System.pbc"]], "r0() (atomman.system method)": [[5, "atomman.System.r0"]], "rotate() (atomman.system method)": [[5, "atomman.System.rotate"]], "scale() (atomman.system method)": [[5, "atomman.System.scale"]], "supersize() (atomman.system method)": [[5, "atomman.System.supersize"]], "symbols (atomman.system property)": [[5, "atomman.System.symbols"]], "unscale() (atomman.system method)": [[5, "atomman.System.unscale"]], "wrap() (atomman.system method)": [[5, "atomman.System.wrap"]], "bondanglemap (class in atomman.cluster)": [[7, "atomman.cluster.BondAngleMap"]], "cumulative_pdf() (atomman.cluster.bondanglemap method)": [[7, "atomman.cluster.BondAngleMap.cumulative_pdf"]], "df (atomman.cluster.bondanglemap property)": [[7, "atomman.cluster.BondAngleMap.df"]], "itercoords() (atomman.cluster.bondanglemap method)": [[7, "atomman.cluster.BondAngleMap.itercoords"]], "itersystem() (atomman.cluster.bondanglemap method)": [[7, "atomman.cluster.BondAngleMap.itersystem"]], "load_table() (atomman.cluster.bondanglemap method)": [[7, "atomman.cluster.BondAngleMap.load_table"]], "model() (atomman.cluster.bondanglemap method)": [[7, "atomman.cluster.BondAngleMap.model"]], "pdf() (atomman.cluster.bondanglemap method)": [[7, "atomman.cluster.BondAngleMap.pdf"]], "plot_cumulative_pdf() (atomman.cluster.bondanglemap method)": [[7, "atomman.cluster.BondAngleMap.plot_cumulative_pdf"]], "plot_pdf() (atomman.cluster.bondanglemap method)": [[7, "atomman.cluster.BondAngleMap.plot_pdf"]], "rmax (atomman.cluster.bondanglemap property)": [[7, "atomman.cluster.BondAngleMap.rmax"]], "rmin (atomman.cluster.bondanglemap property)": [[7, "atomman.cluster.BondAngleMap.rmin"]], "rnum (atomman.cluster.bondanglemap property)": [[7, "atomman.cluster.BondAngleMap.rnum"]], "save_table() (atomman.cluster.bondanglemap method)": [[7, "atomman.cluster.BondAngleMap.save_table"]], "set() (atomman.cluster.bondanglemap method)": [[7, "atomman.cluster.BondAngleMap.set"]], "symbols (atomman.cluster.bondanglemap property)": [[7, "atomman.cluster.BondAngleMap.symbols"]], "thetamax (atomman.cluster.bondanglemap property)": [[7, "atomman.cluster.BondAngleMap.thetamax"]], "thetamin (atomman.cluster.bondanglemap property)": [[7, "atomman.cluster.BondAngleMap.thetamin"]], "thetanum (atomman.cluster.bondanglemap property)": [[7, "atomman.cluster.BondAngleMap.thetanum"]], "atomman.defect": [[8, "module-atomman.defect"]], "differential_displacement() (in module atomman.defect)": [[8, "atomman.defect.differential_displacement"]], "dislocation_array() (in module atomman.defect)": [[8, "atomman.defect.dislocation_array"]], "dislocation_system_basis() (in module atomman.defect)": [[8, "atomman.defect.dislocation_system_basis"]], "dislocation_system_transform() (in module atomman.defect)": [[8, "atomman.defect.dislocation_system_transform"]], "disregistry() (in module atomman.defect)": [[8, "atomman.defect.disregistry"]], "dumbbell() (in module atomman.defect)": [[8, "atomman.defect.dumbbell"]], "free_surface_basis() (in module atomman.defect)": [[8, "atomman.defect.free_surface_basis"]], "interstitial() (in module atomman.defect)": [[8, "atomman.defect.interstitial"]], "nye_tensor() (in module atomman.defect)": [[8, "atomman.defect.nye_tensor"]], "nye_tensor_p() (in module atomman.defect)": [[8, "atomman.defect.nye_tensor_p"]], "pn_arctan_disregistry() (in module atomman.defect)": [[8, "atomman.defect.pn_arctan_disregistry"]], "point() (in module atomman.defect)": [[8, "atomman.defect.point"]], "slip_vector() (in module atomman.defect)": [[8, "atomman.defect.slip_vector"]], "solve_volterra_dislocation() (in module atomman.defect)": [[8, "atomman.defect.solve_volterra_dislocation"]], "substitutional() (in module atomman.defect)": [[8, "atomman.defect.substitutional"]], "vacancy() (in module atomman.defect)": [[8, "atomman.defect.vacancy"]], "differentialdisplacement (class in atomman.defect)": [[9, "atomman.defect.DifferentialDisplacement"]], "arrowcenters (atomman.defect.differentialdisplacement property)": [[9, "atomman.defect.DifferentialDisplacement.arrowcenters"]], "arrowuvectors (atomman.defect.differentialdisplacement property)": [[9, "atomman.defect.DifferentialDisplacement.arrowuvectors"]], "ddvectors (atomman.defect.differentialdisplacement property)": [[9, "atomman.defect.DifferentialDisplacement.ddvectors"]], "neighbors (atomman.defect.differentialdisplacement property)": [[9, "atomman.defect.DifferentialDisplacement.neighbors"]], "plot() (atomman.defect.differentialdisplacement method)": [[9, "atomman.defect.DifferentialDisplacement.plot"]], "plot_with_nye() (atomman.defect.differentialdisplacement method)": [[9, "atomman.defect.DifferentialDisplacement.plot_with_nye"]], "reference (atomman.defect.differentialdisplacement property)": [[9, "atomman.defect.DifferentialDisplacement.reference"]], "solve() (atomman.defect.differentialdisplacement method)": [[9, "atomman.defect.DifferentialDisplacement.solve"]], "system0 (atomman.defect.differentialdisplacement property)": [[9, "atomman.defect.DifferentialDisplacement.system0"]], "system1 (atomman.defect.differentialdisplacement property)": [[9, "atomman.defect.DifferentialDisplacement.system1"]], "dislocation (class in atomman.defect)": [[10, "atomman.defect.Dislocation"]], "array_boundary() (atomman.defect.dislocation method)": [[10, "atomman.defect.Dislocation.array_boundary"]], "base_system (atomman.defect.dislocation property)": [[10, "atomman.defect.Dislocation.base_system"]], "box_boundary() (atomman.defect.dislocation method)": [[10, "atomman.defect.Dislocation.box_boundary"]], "build_disl_array() (atomman.defect.dislocation method)": [[10, "atomman.defect.Dislocation.build_disl_array"]], "cutindex (atomman.defect.dislocation property)": [[10, "atomman.defect.Dislocation.cutindex"]], "cylinder_boundary() (atomman.defect.dislocation method)": [[10, "atomman.defect.Dislocation.cylinder_boundary"]], "dipole() (atomman.defect.dislocation method)": [[10, "atomman.defect.Dislocation.dipole"]], "dipole_displacement() (atomman.defect.dislocation static method)": [[10, "atomman.defect.Dislocation.dipole_displacement"]], "disl_system (atomman.defect.dislocation property)": [[10, "atomman.defect.Dislocation.disl_system"]], "dislsol (atomman.defect.dislocation property)": [[10, "atomman.defect.Dislocation.dislsol"]], "fromdatabase() (atomman.defect.dislocation class method)": [[10, "atomman.defect.Dislocation.fromdatabase"]], "fromrecord() (atomman.defect.dislocation class method)": [[10, "atomman.defect.Dislocation.fromrecord"]], "lineindex (atomman.defect.dislocation property)": [[10, "atomman.defect.Dislocation.lineindex"]], "monopole() (atomman.defect.dislocation method)": [[10, "atomman.defect.Dislocation.monopole"]], "motionindex (atomman.defect.dislocation property)": [[10, "atomman.defect.Dislocation.motionindex"]], "periodicarray() (atomman.defect.dislocation method)": [[10, "atomman.defect.Dislocation.periodicarray"]], "rcell (atomman.defect.dislocation property)": [[10, "atomman.defect.Dislocation.rcell"]], "set_shift() (atomman.defect.dislocation method)": [[10, "atomman.defect.Dislocation.set_shift"]], "set_systems() (atomman.defect.dislocation method)": [[10, "atomman.defect.Dislocation.set_systems"]], "shift (atomman.defect.dislocation property)": [[10, "atomman.defect.Dislocation.shift"]], "shifts (atomman.defect.dislocation property)": [[10, "atomman.defect.Dislocation.shifts"]], "transform (atomman.defect.dislocation property)": [[10, "atomman.defect.Dislocation.transform"]], "ucell (atomman.defect.dislocation property)": [[10, "atomman.defect.Dislocation.ucell"]], "ucell_prim (atomman.defect.dislocation property)": [[10, "atomman.defect.Dislocation.ucell_prim"]], "uvws (atomman.defect.dislocation property)": [[10, "atomman.defect.Dislocation.uvws"]], "uvws_prim (atomman.defect.dislocation property)": [[10, "atomman.defect.Dislocation.uvws_prim"]], "freesurface (class in atomman.defect)": [[11, "atomman.defect.FreeSurface"]], "conventional_setting (atomman.defect.freesurface property)": [[11, "atomman.defect.FreeSurface.conventional_setting"]], "cutboxvector (atomman.defect.freesurface property)": [[11, "atomman.defect.FreeSurface.cutboxvector"]], "cutindex (atomman.defect.freesurface property)": [[11, "atomman.defect.FreeSurface.cutindex"]], "fromdatabase() (atomman.defect.freesurface class method)": [[11, "atomman.defect.FreeSurface.fromdatabase"]], "fromrecord() (atomman.defect.freesurface class method)": [[11, "atomman.defect.FreeSurface.fromrecord"]], "hkl (atomman.defect.freesurface property)": [[11, "atomman.defect.FreeSurface.hkl"]], "rcell (atomman.defect.freesurface property)": [[11, "atomman.defect.FreeSurface.rcell"]], "rcellwidth (atomman.defect.freesurface property)": [[11, "atomman.defect.FreeSurface.rcellwidth"]], "set_shift() (atomman.defect.freesurface method)": [[11, "atomman.defect.FreeSurface.set_shift"]], "shift (atomman.defect.freesurface property)": [[11, "atomman.defect.FreeSurface.shift"]], "shifts (atomman.defect.freesurface property)": [[11, "atomman.defect.FreeSurface.shifts"]], "surface() (atomman.defect.freesurface method)": [[11, "atomman.defect.FreeSurface.surface"]], "surfacearea (atomman.defect.freesurface property)": [[11, "atomman.defect.FreeSurface.surfacearea"]], "system (atomman.defect.freesurface property)": [[11, "atomman.defect.FreeSurface.system"]], "transform (atomman.defect.freesurface property)": [[11, "atomman.defect.FreeSurface.transform"]], "ucell (atomman.defect.freesurface property)": [[11, "atomman.defect.FreeSurface.ucell"]], "unique_shifts() (atomman.defect.freesurface method)": [[11, "atomman.defect.FreeSurface.unique_shifts"]], "uvws (atomman.defect.freesurface property)": [[11, "atomman.defect.FreeSurface.uvws"]], "e_gsf() (atomman.defect.gammasurface method)": [[12, "atomman.defect.GammaSurface.E_gsf"]], "e_gsf_line_plot() (atomman.defect.gammasurface method)": [[12, "atomman.defect.GammaSurface.E_gsf_line_plot"]], "e_gsf_surface_plot() (atomman.defect.gammasurface method)": [[12, "atomman.defect.GammaSurface.E_gsf_surface_plot"]], "gammasurface (class in atomman.defect)": [[12, "atomman.defect.GammaSurface"]], "a12_to_pos() (atomman.defect.gammasurface method)": [[12, "atomman.defect.GammaSurface.a12_to_pos"]], "a12_to_xy() (atomman.defect.gammasurface method)": [[12, "atomman.defect.GammaSurface.a12_to_xy"]], "a1vect (atomman.defect.gammasurface property)": [[12, "atomman.defect.GammaSurface.a1vect"]], "a2vect (atomman.defect.gammasurface property)": [[12, "atomman.defect.GammaSurface.a2vect"]], "box (atomman.defect.gammasurface property)": [[12, "atomman.defect.GammaSurface.box"]], "build_path() (atomman.defect.gammasurface method)": [[12, "atomman.defect.GammaSurface.build_path"]], "data (atomman.defect.gammasurface property)": [[12, "atomman.defect.GammaSurface.data"]], "delta() (atomman.defect.gammasurface method)": [[12, "atomman.defect.GammaSurface.delta"]], "delta_line_plot() (atomman.defect.gammasurface method)": [[12, "atomman.defect.GammaSurface.delta_line_plot"]], "delta_surface_plot() (atomman.defect.gammasurface method)": [[12, "atomman.defect.GammaSurface.delta_surface_plot"]], "fit() (atomman.defect.gammasurface method)": [[12, "atomman.defect.GammaSurface.fit"]], "model() (atomman.defect.gammasurface method)": [[12, "atomman.defect.GammaSurface.model"]], "path() (atomman.defect.gammasurface method)": [[12, "atomman.defect.GammaSurface.path"]], "planenormal (atomman.defect.gammasurface property)": [[12, "atomman.defect.GammaSurface.planenormal"]], "pos_to_a12() (atomman.defect.gammasurface method)": [[12, "atomman.defect.GammaSurface.pos_to_a12"]], "pos_to_xy() (atomman.defect.gammasurface method)": [[12, "atomman.defect.GammaSurface.pos_to_xy"]], "set() (atomman.defect.gammasurface method)": [[12, "atomman.defect.GammaSurface.set"]], "xy_to_a12() (atomman.defect.gammasurface method)": [[12, "atomman.defect.GammaSurface.xy_to_a12"]], "xy_to_pos() (atomman.defect.gammasurface method)": [[12, "atomman.defect.GammaSurface.xy_to_pos"]], "isotropicvolterradislocation (class in atomman.defect)": [[13, "atomman.defect.IsotropicVolterraDislocation"]], "k_tensor (atomman.defect.isotropicvolterradislocation property)": [[13, "atomman.defect.IsotropicVolterraDislocation.K_tensor"]], "displacement() (atomman.defect.isotropicvolterradislocation method)": [[13, "atomman.defect.IsotropicVolterraDislocation.displacement"]], "mu (atomman.defect.isotropicvolterradislocation property)": [[13, "atomman.defect.IsotropicVolterraDislocation.mu"]], "nu (atomman.defect.isotropicvolterradislocation property)": [[13, "atomman.defect.IsotropicVolterraDislocation.nu"]], "solve() (atomman.defect.isotropicvolterradislocation method)": [[13, "atomman.defect.IsotropicVolterraDislocation.solve"]], "strain() (atomman.defect.isotropicvolterradislocation method)": [[13, "atomman.defect.IsotropicVolterraDislocation.strain"]], "stress() (atomman.defect.isotropicvolterradislocation method)": [[13, "atomman.defect.IsotropicVolterraDislocation.stress"]], "theta() (atomman.defect.isotropicvolterradislocation method)": [[13, "atomman.defect.IsotropicVolterraDislocation.theta"]], "e_gsf_surface_plot() (atomman.defect.sdvpn method)": [[14, "atomman.defect.SDVPN.E_gsf_surface_plot"]], "e_gsf_vs_x_plot() (atomman.defect.sdvpn method)": [[14, "atomman.defect.SDVPN.E_gsf_vs_x_plot"]], "k_tensor (atomman.defect.sdvpn property)": [[14, "atomman.defect.SDVPN.K_tensor"]], "sdvpn (class in atomman.defect)": [[14, "atomman.defect.SDVPN"]], "alpha (atomman.defect.sdvpn property)": [[14, "atomman.defect.SDVPN.alpha"]], "beta (atomman.defect.sdvpn property)": [[14, "atomman.defect.SDVPN.beta"]], "burgers (atomman.defect.sdvpn property)": [[14, "atomman.defect.SDVPN.burgers"]], "cdiffelastic (atomman.defect.sdvpn property)": [[14, "atomman.defect.SDVPN.cdiffelastic"]], "cdiffstress (atomman.defect.sdvpn property)": [[14, "atomman.defect.SDVPN.cdiffstress"]], "cdiffsurface (atomman.defect.sdvpn property)": [[14, "atomman.defect.SDVPN.cdiffsurface"]], "check_energies() (atomman.defect.sdvpn method)": [[14, "atomman.defect.SDVPN.check_energies"]], "cutofflongrange (atomman.defect.sdvpn property)": [[14, "atomman.defect.SDVPN.cutofflongrange"]], "disldensity() (atomman.defect.sdvpn method)": [[14, "atomman.defect.SDVPN.disldensity"]], "disregistry (atomman.defect.sdvpn property)": [[14, "atomman.defect.SDVPN.disregistry"]], "disregistry_plot() (atomman.defect.sdvpn method)": [[14, "atomman.defect.SDVPN.disregistry_plot"]], "elastic_energy() (atomman.defect.sdvpn method)": [[14, "atomman.defect.SDVPN.elastic_energy"]], "fullstress (atomman.defect.sdvpn property)": [[14, "atomman.defect.SDVPN.fullstress"]], "gamma (atomman.defect.sdvpn property)": [[14, "atomman.defect.SDVPN.gamma"]], "load() (atomman.defect.sdvpn method)": [[14, "atomman.defect.SDVPN.load"]], "longrange_energy() (atomman.defect.sdvpn method)": [[14, "atomman.defect.SDVPN.longrange_energy"]], "min_kwargs (atomman.defect.sdvpn property)": [[14, "atomman.defect.SDVPN.min_kwargs"]], "min_method (atomman.defect.sdvpn property)": [[14, "atomman.defect.SDVPN.min_method"]], "min_options (atomman.defect.sdvpn property)": [[14, "atomman.defect.SDVPN.min_options"]], "misfit_energy() (atomman.defect.sdvpn method)": [[14, "atomman.defect.SDVPN.misfit_energy"]], "model() (atomman.defect.sdvpn method)": [[14, "atomman.defect.SDVPN.model"]], "nonlocal_energy() (atomman.defect.sdvpn method)": [[14, "atomman.defect.SDVPN.nonlocal_energy"]], "res (atomman.defect.sdvpn property)": [[14, "atomman.defect.SDVPN.res"]], "solve() (atomman.defect.sdvpn method)": [[14, "atomman.defect.SDVPN.solve"]], "stress_energy() (atomman.defect.sdvpn method)": [[14, "atomman.defect.SDVPN.stress_energy"]], "surface_energy() (atomman.defect.sdvpn method)": [[14, "atomman.defect.SDVPN.surface_energy"]], "tau (atomman.defect.sdvpn property)": [[14, "atomman.defect.SDVPN.tau"]], "total_energy() (atomman.defect.sdvpn method)": [[14, "atomman.defect.SDVPN.total_energy"]], "transform (atomman.defect.sdvpn property)": [[14, "atomman.defect.SDVPN.transform"]], "x (atomman.defect.sdvpn property)": [[14, "atomman.defect.SDVPN.x"]], "stackingfault (class in atomman.defect)": [[15, "atomman.defect.StackingFault"]], "a1vect_cart (atomman.defect.stackingfault property)": [[15, "atomman.defect.StackingFault.a1vect_cart"]], "a1vect_uvw (atomman.defect.stackingfault property)": [[15, "atomman.defect.StackingFault.a1vect_uvw"]], "a2vect_cart (atomman.defect.stackingfault property)": [[15, "atomman.defect.StackingFault.a2vect_cart"]], "a2vect_uvw (atomman.defect.stackingfault property)": [[15, "atomman.defect.StackingFault.a2vect_uvw"]], "abovefault (atomman.defect.stackingfault property)": [[15, "atomman.defect.StackingFault.abovefault"]], "fault() (atomman.defect.stackingfault method)": [[15, "atomman.defect.StackingFault.fault"]], "faultpos_cart (atomman.defect.stackingfault property)": [[15, "atomman.defect.StackingFault.faultpos_cart"]], "faultpos_rel (atomman.defect.stackingfault property)": [[15, "atomman.defect.StackingFault.faultpos_rel"]], "fromdatabase() (atomman.defect.stackingfault class method)": [[15, "atomman.defect.StackingFault.fromdatabase"]], "fromrecord() (atomman.defect.stackingfault class method)": [[15, "atomman.defect.StackingFault.fromrecord"]], "iterfaultmap() (atomman.defect.stackingfault method)": [[15, "atomman.defect.StackingFault.iterfaultmap"]], "surface() (atomman.defect.stackingfault method)": [[15, "atomman.defect.StackingFault.surface"]], "g (atomman.defect.strain property)": [[16, "atomman.defect.Strain.G"]], "strain (class in atomman.defect)": [[16, "atomman.defect.Strain"]], "angularvelocity (atomman.defect.strain property)": [[16, "atomman.defect.Strain.angularvelocity"]], "asdict() (atomman.defect.strain method)": [[16, "atomman.defect.Strain.asdict"]], "build_p_vectors() (atomman.defect.strain method)": [[16, "atomman.defect.Strain.build_p_vectors"]], "clear_properties() (atomman.defect.strain method)": [[16, "atomman.defect.Strain.clear_properties"]], "invariant1 (atomman.defect.strain property)": [[16, "atomman.defect.Strain.invariant1"]], "invariant2 (atomman.defect.strain property)": [[16, "atomman.defect.Strain.invariant2"]], "invariant3 (atomman.defect.strain property)": [[16, "atomman.defect.Strain.invariant3"]], "neighbors (atomman.defect.strain property)": [[16, "atomman.defect.Strain.neighbors"]], "nye (atomman.defect.strain property)": [[16, "atomman.defect.Strain.nye"]], "p_vectors (atomman.defect.strain property)": [[16, "atomman.defect.Strain.p_vectors"]], "rotation (atomman.defect.strain property)": [[16, "atomman.defect.Strain.rotation"]], "save_to_system() (atomman.defect.strain method)": [[16, "atomman.defect.Strain.save_to_system"]], "set_p_vectors() (atomman.defect.strain method)": [[16, "atomman.defect.Strain.set_p_vectors"]], "solve_g() (atomman.defect.strain method)": [[16, "atomman.defect.Strain.solve_G"]], "solve_nye() (atomman.defect.strain method)": [[16, "atomman.defect.Strain.solve_nye"]], "strain (atomman.defect.strain property)": [[16, "atomman.defect.Strain.strain"]], "system (atomman.defect.strain property)": [[16, "atomman.defect.Strain.system"]], "theta_max (atomman.defect.strain property)": [[16, "atomman.defect.Strain.theta_max"]], "a (atomman.defect.stroh property)": [[17, "atomman.defect.Stroh.A"]], "k_tensor (atomman.defect.stroh property)": [[17, "atomman.defect.Stroh.K_tensor"]], "l (atomman.defect.stroh property)": [[17, "atomman.defect.Stroh.L"]], "stroh (class in atomman.defect)": [[17, "atomman.defect.Stroh"]], "displacement() (atomman.defect.stroh method)": [[17, "atomman.defect.Stroh.displacement"]], "eta() (atomman.defect.stroh method)": [[17, "atomman.defect.Stroh.eta"]], "k (atomman.defect.stroh property)": [[17, "atomman.defect.Stroh.k"]], "p (atomman.defect.stroh property)": [[17, "atomman.defect.Stroh.p"]], "solve() (atomman.defect.stroh method)": [[17, "atomman.defect.Stroh.solve"]], "strain() (atomman.defect.stroh method)": [[17, "atomman.defect.Stroh.strain"]], "stress() (atomman.defect.stroh method)": [[17, "atomman.defect.Stroh.stress"]], "c (atomman.defect.volterradislocation property)": [[18, "atomman.defect.VolterraDislocation.C"]], "k_coeff (atomman.defect.volterradislocation property)": [[18, "atomman.defect.VolterraDislocation.K_coeff"]], "k_tensor (atomman.defect.volterradislocation property)": [[18, "atomman.defect.VolterraDislocation.K_tensor"]], "volterradislocation (class in atomman.defect)": [[18, "atomman.defect.VolterraDislocation"]], "burgers (atomman.defect.volterradislocation property)": [[18, "atomman.defect.VolterraDislocation.burgers"]], "characterangle() (atomman.defect.volterradislocation method)": [[18, "atomman.defect.VolterraDislocation.characterangle"]], "displacement() (atomman.defect.volterradislocation method)": [[18, "atomman.defect.VolterraDislocation.displacement"]], "m (atomman.defect.volterradislocation property)": [[18, "atomman.defect.VolterraDislocation.m"]], "n (atomman.defect.volterradislocation property)": [[18, "atomman.defect.VolterraDislocation.n"]], "preln (atomman.defect.volterradislocation property)": [[18, "atomman.defect.VolterraDislocation.preln"]], "solve() (atomman.defect.volterradislocation method)": [[18, "atomman.defect.VolterraDislocation.solve"]], "strain() (atomman.defect.volterradislocation method)": [[18, "atomman.defect.VolterraDislocation.strain"]], "stress() (atomman.defect.volterradislocation method)": [[18, "atomman.defect.VolterraDislocation.stress"]], "tol (atomman.defect.volterradislocation property)": [[18, "atomman.defect.VolterraDislocation.tol"]], "transform (atomman.defect.volterradislocation property)": [[18, "atomman.defect.VolterraDislocation.transform"]], "\u03be (atomman.defect.volterradislocation property)": [[18, "atomman.defect.VolterraDislocation."]], "potential() (in module atomman.lammps.potential)": [[19, "atomman.lammps.Potential.Potential"]], "atomman.lammps": [[19, "module-atomman.lammps"]], "atomman.lammps.potential": [[19, "module-atomman.lammps.Potential"]], "atomman.lammps.style": [[19, "module-atomman.lammps.style"]], "checkversion() (in module atomman.lammps)": [[19, "atomman.lammps.checkversion"]], "normalize() (in module atomman.lammps)": [[19, "atomman.lammps.normalize"]], "run() (in module atomman.lammps)": [[19, "atomman.lammps.run"]], "timestep() (in module atomman.lammps.style)": [[19, "atomman.lammps.style.timestep"]], "unit() (in module atomman.lammps.style)": [[19, "atomman.lammps.style.unit"]], "lammpserror (class in atomman.lammps)": [[20, "atomman.lammps.LammpsError"]], "log (class in atomman.lammps)": [[21, "atomman.lammps.Log"]], "flatten() (atomman.lammps.log method)": [[21, "atomman.lammps.Log.flatten"]], "lammps_date (atomman.lammps.log property)": [[21, "atomman.lammps.Log.lammps_date"]], "lammps_version (atomman.lammps.log property)": [[21, "atomman.lammps.Log.lammps_version"]], "read() (atomman.lammps.log method)": [[21, "atomman.lammps.Log.read"]], "simulations (atomman.lammps.log property)": [[21, "atomman.lammps.Log.simulations"]], "neblog (class in atomman.lammps)": [[22, "atomman.lammps.NEBLog"]], "climbrun (atomman.lammps.neblog property)": [[22, "atomman.lammps.NEBLog.climbrun"]], "get_barrier() (atomman.lammps.neblog method)": [[22, "atomman.lammps.NEBLog.get_barrier"]], "get_neb_path() (atomman.lammps.neblog method)": [[22, "atomman.lammps.NEBLog.get_neb_path"]], "load() (atomman.lammps.neblog method)": [[22, "atomman.lammps.NEBLog.load"]], "logs (atomman.lammps.neblog property)": [[22, "atomman.lammps.NEBLog.logs"]], "minrun (atomman.lammps.neblog property)": [[22, "atomman.lammps.NEBLog.minrun"]], "nreplicas (atomman.lammps.neblog property)": [[22, "atomman.lammps.NEBLog.nreplicas"]], "database (class in atomman.library)": [[24, "atomman.library.Database"]], "download_all() (atomman.library.database method)": [[24, "atomman.library.Database.download_all"]], "download_crystal_prototypes() (atomman.library.database method)": [[24, "atomman.library.Database.download_crystal_prototypes"]], "download_reference_crystals() (atomman.library.database method)": [[24, "atomman.library.Database.download_reference_crystals"]], "download_relaxed_crystals() (atomman.library.database method)": [[24, "atomman.library.Database.download_relaxed_crystals"]], "fetch_mp_crystal() (atomman.library.database method)": [[24, "atomman.library.Database.fetch_mp_crystal"]], "fetch_mp_crystals() (atomman.library.database method)": [[24, "atomman.library.Database.fetch_mp_crystals"]], "fetch_oqmd_crystal() (atomman.library.database method)": [[24, "atomman.library.Database.fetch_oqmd_crystal"]], "fetch_reference_crystal() (atomman.library.database method)": [[24, "atomman.library.Database.fetch_reference_crystal"]], "get_crystal_prototype() (atomman.library.database method)": [[24, "atomman.library.Database.get_crystal_prototype"]], "get_crystal_prototypes() (atomman.library.database method)": [[24, "atomman.library.Database.get_crystal_prototypes"]], "get_reference_crystal() (atomman.library.database method)": [[24, "atomman.library.Database.get_reference_crystal"]], "get_reference_crystals() (atomman.library.database method)": [[24, "atomman.library.Database.get_reference_crystals"]], "get_relaxed_crystal() (atomman.library.database method)": [[24, "atomman.library.Database.get_relaxed_crystal"]], "get_relaxed_crystals() (atomman.library.database method)": [[24, "atomman.library.Database.get_relaxed_crystals"]], "retrieve_crystal_prototype() (atomman.library.database method)": [[24, "atomman.library.Database.retrieve_crystal_prototype"]], "retrieve_reference_crystal() (atomman.library.database method)": [[24, "atomman.library.Database.retrieve_reference_crystal"]], "retrieve_relaxed_crystal() (atomman.library.database method)": [[24, "atomman.library.Database.retrieve_relaxed_crystal"]], "crystalprototype (in module atomman.library.record)": [[25, "atomman.library.record.CrystalPrototype"]], "referencecrystal (in module atomman.library.record)": [[26, "atomman.library.record.ReferenceCrystal"]], "relaxedcrystal (in module atomman.library.record)": [[27, "atomman.library.record.RelaxedCrystal"]], "atomman.mep": [[28, "module-atomman.mep"]], "atomman.mep.gradient": [[28, "module-atomman.mep.gradient"]], "atomman.mep.integrator": [[28, "module-atomman.mep.integrator"]], "central_difference() (in module atomman.mep.gradient)": [[28, "atomman.mep.gradient.central_difference"]], "create_path() (in module atomman.mep)": [[28, "atomman.mep.create_path"]], "euler() (in module atomman.mep.integrator)": [[28, "atomman.mep.integrator.euler"]], "rungekutta() (in module atomman.mep.integrator)": [[28, "atomman.mep.integrator.rungekutta"]], "basepath (class in atomman.mep)": [[29, "atomman.mep.BasePath"]], "arccoord (atomman.mep.basepath property)": [[29, "atomman.mep.BasePath.arccoord"]], "coord (atomman.mep.basepath property)": [[29, "atomman.mep.BasePath.coord"]], "energy() (atomman.mep.basepath method)": [[29, "atomman.mep.BasePath.energy"]], "energyfxn (atomman.mep.basepath property)": [[29, "atomman.mep.BasePath.energyfxn"]], "force (atomman.mep.basepath property)": [[29, "atomman.mep.BasePath.force"]], "grad_energy() (atomman.mep.basepath method)": [[29, "atomman.mep.BasePath.grad_energy"]], "gradientfxn (atomman.mep.basepath property)": [[29, "atomman.mep.BasePath.gradientfxn"]], "gradientkwargs (atomman.mep.basepath property)": [[29, "atomman.mep.BasePath.gradientkwargs"]], "integratorfxn (atomman.mep.basepath property)": [[29, "atomman.mep.BasePath.integratorfxn"]], "plot_energy() (atomman.mep.basepath method)": [[29, "atomman.mep.BasePath.plot_energy"]], "plot_force() (atomman.mep.basepath method)": [[29, "atomman.mep.BasePath.plot_force"]], "relax() (atomman.mep.basepath method)": [[29, "atomman.mep.BasePath.relax"]], "step() (atomman.mep.basepath method)": [[29, "atomman.mep.BasePath.step"]], "unittangent (atomman.mep.basepath property)": [[29, "atomman.mep.BasePath.unittangent"]], "ismpath (class in atomman.mep)": [[30, "atomman.mep.ISMPath"]], "default_timestep (atomman.mep.ismpath property)": [[30, "atomman.mep.ISMPath.default_timestep"]], "default_tolerance (atomman.mep.ismpath property)": [[30, "atomman.mep.ISMPath.default_tolerance"]], "interpolate_path() (atomman.mep.ismpath method)": [[30, "atomman.mep.ISMPath.interpolate_path"]], "relax() (atomman.mep.ismpath method)": [[30, "atomman.mep.ISMPath.relax"]], "step() (atomman.mep.ismpath method)": [[30, "atomman.mep.ISMPath.step"]], "unittangent (atomman.mep.ismpath property)": [[30, "atomman.mep.ISMPath.unittangent"]], "atomman.plot": [[31, "module-atomman.plot"]], "get_prop_values() (in module atomman.plot)": [[31, "atomman.plot.get_prop_values"]], "interpolate_contour() (in module atomman.plot)": [[31, "atomman.plot.interpolate_contour"]], "values_to_hexcolors() (in module atomman.plot)": [[31, "atomman.plot.values_to_hexcolors"]], "cylinder (class in atomman.region)": [[32, "atomman.region.Cylinder"]], "plane (class in atomman.region)": [[32, "atomman.region.Plane"]], "planeset (class in atomman.region)": [[32, "atomman.region.PlaneSet"]], "shape (class in atomman.region)": [[32, "atomman.region.Shape"]], "sphere (class in atomman.region)": [[32, "atomman.region.Sphere"]], "above() (atomman.region.plane method)": [[32, "atomman.region.Plane.above"]], "atomman.region": [[32, "module-atomman.region"]], "axis (atomman.region.cylinder property)": [[32, "atomman.region.Cylinder.axis"]], "below() (atomman.region.plane method)": [[32, "atomman.region.Plane.below"]], "center (atomman.region.sphere property)": [[32, "atomman.region.Sphere.center"]], "center1 (atomman.region.cylinder property)": [[32, "atomman.region.Cylinder.center1"]], "center2 (atomman.region.cylinder property)": [[32, "atomman.region.Cylinder.center2"]], "endcaps (atomman.region.cylinder property)": [[32, "atomman.region.Cylinder.endcaps"]], "inside() (atomman.region.cylinder method)": [[32, "atomman.region.Cylinder.inside"]], "inside() (atomman.region.planeset method)": [[32, "atomman.region.PlaneSet.inside"]], "inside() (atomman.region.shape method)": [[32, "atomman.region.Shape.inside"]], "inside() (atomman.region.sphere method)": [[32, "atomman.region.Sphere.inside"]], "isclose() (atomman.region.plane method)": [[32, "atomman.region.Plane.isclose"]], "normal (atomman.region.plane property)": [[32, "atomman.region.Plane.normal"]], "operate() (atomman.region.plane method)": [[32, "atomman.region.Plane.operate"]], "outside() (atomman.region.shape method)": [[32, "atomman.region.Shape.outside"]], "planes (atomman.region.planeset property)": [[32, "atomman.region.PlaneSet.planes"]], "point (atomman.region.plane property)": [[32, "atomman.region.Plane.point"]], "radius (atomman.region.cylinder property)": [[32, "atomman.region.Cylinder.radius"]], "radius (atomman.region.sphere property)": [[32, "atomman.region.Sphere.radius"]], "aslist() (in module atomman.tools)": [[33, "atomman.tools.aslist"]], "atomic_mass() (in module atomman.tools)": [[33, "atomman.tools.atomic_mass"]], "atomic_number() (in module atomman.tools)": [[33, "atomman.tools.atomic_number"]], "atomic_symbol() (in module atomman.tools)": [[33, "atomman.tools.atomic_symbol"]], "atomman.tools": [[33, "module-atomman.tools"]], "atomman.tools.miller": [[33, "module-atomman.tools.miller"]], "axes_check() (in module atomman.tools)": [[33, "atomman.tools.axes_check"]], "boolean() (in module atomman.tools)": [[33, "atomman.tools.boolean"]], "compositionstr() (in module atomman.tools)": [[33, "atomman.tools.compositionstr"]], "duplicates_allclose() (in module atomman.tools)": [[33, "atomman.tools.duplicates_allclose"]], "filltemplate() (in module atomman.tools)": [[33, "atomman.tools.filltemplate"]], "fromstring() (in module atomman.tools.miller)": [[33, "atomman.tools.miller.fromstring"]], "iaslist() (in module atomman.tools)": [[33, "atomman.tools.iaslist"]], "identifyfamily() (in module atomman.tools)": [[33, "atomman.tools.identifyfamily"]], "indexstr() (in module atomman.tools)": [[33, "atomman.tools.indexstr"]], "iscubic() (in module atomman.tools)": [[33, "atomman.tools.iscubic"]], "ishexagonal() (in module atomman.tools)": [[33, "atomman.tools.ishexagonal"]], "ismonoclinic() (in module atomman.tools)": [[33, "atomman.tools.ismonoclinic"]], "isorthorhombic() (in module atomman.tools)": [[33, "atomman.tools.isorthorhombic"]], "isrhombohedral() (in module atomman.tools)": [[33, "atomman.tools.isrhombohedral"]], "istetragonal() (in module atomman.tools)": [[33, "atomman.tools.istetragonal"]], "istriclinic() (in module atomman.tools)": [[33, "atomman.tools.istriclinic"]], "plane3to4() (in module atomman.tools.miller)": [[33, "atomman.tools.miller.plane3to4"]], "plane4to3() (in module atomman.tools.miller)": [[33, "atomman.tools.miller.plane4to3"]], "plane_crystal_to_cartesian() (in module atomman.tools.miller)": [[33, "atomman.tools.miller.plane_crystal_to_cartesian"]], "screen_input() (in module atomman.tools)": [[33, "atomman.tools.screen_input"]], "uber_open_rmode() (in module atomman.tools)": [[33, "atomman.tools.uber_open_rmode"]], "vect_angle() (in module atomman.tools)": [[33, "atomman.tools.vect_angle"]], "vector3to4() (in module atomman.tools.miller)": [[33, "atomman.tools.miller.vector3to4"]], "vector4to3() (in module atomman.tools.miller)": [[33, "atomman.tools.miller.vector4to3"]], "vector_conventional_to_primitive() (in module atomman.tools.miller)": [[33, "atomman.tools.miller.vector_conventional_to_primitive"]], "vector_crystal_to_cartesian() (in module atomman.tools.miller)": [[33, "atomman.tools.miller.vector_crystal_to_cartesian"]], "vector_primitive_to_conventional() (in module atomman.tools.miller)": [[33, "atomman.tools.miller.vector_primitive_to_conventional"]], "atomman.unitconvert": [[34, "module-atomman.unitconvert"]], "build_unit() (in module atomman.unitconvert)": [[34, "atomman.unitconvert.build_unit"]], "error_unit() (in module atomman.unitconvert)": [[34, "atomman.unitconvert.error_unit"]], "get_in_units() (in module atomman.unitconvert)": [[34, "atomman.unitconvert.get_in_units"]], "model() (in module atomman.unitconvert)": [[34, "atomman.unitconvert.model"]], "parse() (in module atomman.unitconvert)": [[34, "atomman.unitconvert.parse"]], "reset_units() (in module atomman.unitconvert)": [[34, "atomman.unitconvert.reset_units"]], "set_in_units() (in module atomman.unitconvert)": [[34, "atomman.unitconvert.set_in_units"]], "set_literal() (in module atomman.unitconvert)": [[34, "atomman.unitconvert.set_literal"]], "value_unit() (in module atomman.unitconvert)": [[34, "atomman.unitconvert.value_unit"]]}})